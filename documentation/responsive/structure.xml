<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a6" title="My Wrapper Reference">
  <file path="classes/CArrayContainer.php" hash="cd2ad40219da76441a9eadfeb1e493e4" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="38" package="MyWrapper\Persistence">
      <extends>CContainer</extends>
      <name>CArrayContainer</name>
      <full_name>\CArrayContainer</full_name>
      <docblock line="38">
        <description><![CDATA[Array persistent data store.]]></description>
        <long-description><![CDATA[<p>This class extends its {@link CContainer ancestor} to implement a concrete object store
instance that uses arrays or ArrayObject objects to store data.</p>]]></long-description>
        <tag line="38" name="package" description="MyWrapper"/>
        <tag line="38" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="64">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CContainer::__construct() overload} this method to provide a default
native container, which, in this case, will be an empty array.</p>]]></long-description>
          <tag line="64" name="param" description="Native persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="64" name="access" description="public"/>
        </docblock>
        <argument line="64">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="MyWrapper\Persistence">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="96">
          <description><![CDATA[Return container name.]]></description>
          <long-description><![CDATA[<p>In this class we first check if the {@link Container() container} features this
method and use it, if this is not the case, we return the data type of the
{@link Container() container}.</p>]]></long-description>
          <tag line="96" name="access" description="public"/>
          <tag line="96" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="uses" description="\Container()" refers="\Container()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="148" package="MyWrapper\Persistence">
        <name>Container</name>
        <full_name>Container</full_name>
        <docblock line="148">
          <description><![CDATA[Manage persistent container.]]></description>
          <long-description><![CDATA[<p>We {@link CContainer::Container() overload} this method to ensure that the provided
container is either an array or an ArrayObject.</p>]]></long-description>
          <tag line="148" name="param" description="Persistent container or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="148" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="148" name="access" description="public"/>
          <tag line="148" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="148" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="148" name="see" description="\kERROR_INVALID_PARAMETER" refers="\kERROR_INVALID_PARAMETER"/>
        </docblock>
        <argument line="148">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="193" package="MyWrapper\Persistence">
        <name>Database</name>
        <full_name>Database</full_name>
        <docblock line="193">
          <description><![CDATA[Return database.]]></description>
          <long-description><![CDATA[<p>In this class we return <i>NULL</i>.</p>]]></long-description>
          <tag line="193" name="access" description="public"/>
          <tag line="193" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="218" package="MyWrapper\Persistence">
        <name>UnserialiseData</name>
        <full_name>UnserialiseData</full_name>
        <docblock line="218">
          <description><![CDATA[Unserialise provided data element.]]></description>
          <long-description><![CDATA[<p>This class does not handle custom data types, so this method will do nothing.</p>]]></long-description>
          <tag line="218" name="param" description="&amp;$theElement Element to encode." type="\reference" variable="$theElement">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="218" name="access" description="public"/>
        </docblock>
        <argument line="218">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="280" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="280">
          <description><![CDATA[Commit provided object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle array or ArrayObject data stores and we ensure
provided options are followed.</p>

<p>When {@link kFLAG_PERSIST_MODIFY modifying} the contents of the object, we perform
the following checks:</p>

<ul>
<li><i>Both matched object and provided object are arrays</i>: this is the default
    scenario. If the provided object element is <i>NULL</i>, the corresponding
    element in the matched object will be deleted; if not <i>NULL</i>, the provided
    object element will replace the eventual existing one or be set in the matched
    object.
<li><i>Matched object is array and provided object is scalar</i>: the provided
    object will be appended to the matched object.
<li><i>Matched object is scalar and provided object is array</i>: we transform the
    matched object by appending the existing element to an empty array, and we set
    all the elements of the provided element into the newly created array.
<li><i>Matched object and provided object are scalar</i>: we transform the matched
    object by appending the existing element to an empty array, and we append the
    provided object to it.
</ul>

<p>By default the object must be an array or ArrayObject, any other type will raise an
{@link kERROR_INVALID_PARAMETER exception}.</p>

<p>The provided identifier will be cast to a string. If it is <i>NULL</i>, it means that
the object is to be appended in the container and the method assumes the
{@link Commit() caller} has determined that it is an
{@link kFLAG_PERSIST_INSERT insert} operation.</p>

<p>Although the {@link Commit() caller} accepts the {@link kFLAG_PERSIST_DELETE delete}
option, in this class we do not, so we shall raise an
{@link kERROR_INVALID_PARAMETER exception}.</p>]]></long-description>
          <tag line="280" name="param" description="&amp;$theObject Object to commit." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="280" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="280" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="280" name="access" description="protected"/>
          <tag line="280" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="280" name="uses" description="\_Container()" refers="\_Container()"/>
        </docblock>
        <argument line="280">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="280">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="280">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="417" package="MyWrapper\Persistence">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="417">
          <description><![CDATA[Load object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle array or ArrayObject stores.</p>

<p>The method will cast the identifier to a string.</p>]]></long-description>
          <tag line="417" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="417" name="param" description="&amp;$theModifiers Load modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="417" name="param" description="Load options." type="mixed" variable="$theOptions">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="417" name="access" description="protected"/>
          <tag line="417" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="417" name="uses" description="\_Container()" refers="\_Container()"/>
        </docblock>
        <argument line="417">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="417">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="417">
          <name>$theOptions</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="455" package="MyWrapper\Persistence">
        <name>_Delete</name>
        <full_name>_Delete</full_name>
        <docblock line="455">
          <description><![CDATA[Delete object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle array or ArrayObject stores.</p>

<p>The method will cast the identifier to a string.</p>]]></long-description>
          <tag line="455" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="455" name="param" description="Delete modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="455" name="access" description="protected"/>
          <tag line="455" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="455" name="uses" description="\_Container()" refers="\_Container()"/>
        </docblock>
        <argument line="455">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="455">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="526" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="526">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We {@link CContainer::_PrepareCommit() overload} this method to perform the following
operations:</p>

<ul>
<li>Call the parent {@link CContainer::_PrepareCommit() method}.
<li>Check for object in container if required.
<li>Initialise identifier if required.
</ul>]]></long-description>
          <tag line="526" name="param" description="&amp;$theObject Object or data." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="526" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="526" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="526" name="access" description="protected"/>
          <tag line="526" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="526" name="uses" description="\_Container()" refers="\_Container()"/>
          <tag line="526" name="see" description="\kFLAG_PERSIST_REPLACE" refers="\kFLAG_PERSIST_REPLACE"/>
        </docblock>
        <argument line="526">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="526">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="526">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CArrayObject.php" hash="9a771ad2d855fa5dc68b3019eb3952e0" package="Default">
    <include line="30" type="Require Once" package="Default">
      <name/>
      <docblock line="30">
        <description><![CDATA[Library.]]></description>
        <long-description><![CDATA[<p>This include file contains the definitions of the {@link CObject CObject} class which
contains a static library of methods.</p>]]></long-description>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name/>
      <docblock line="38">
        <description><![CDATA[Attributes.]]></description>
        <long-description><![CDATA[<p>This include file contains the definitions of the {@link CAttribute CAttribute} class
which can be used to manage the object's attributes.</p>]]></long-description>
      </docblock>
    </include>
    <include line="45" type="Require Once" package="Default">
      <name/>
      <docblock line="45">
        <description><![CDATA[Offsets.]]></description>
        <long-description><![CDATA[<p>This include file contains all default offset definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="76" package="MyWrapper\Framework">
      <extends>ArrayObject</extends>
      <name>CArrayObject</name>
      <full_name>\CArrayObject</full_name>
      <docblock line="76">
        <description><![CDATA[Common ancestor.]]></description>
        <long-description><![CDATA[<p>This class represents the ancestor of most entity mapped classes, it maps objects to an
array by deriving from {@link ArrayObject ArrayObject} and it defines a couple of general
purpose utility static methods.</p>

<p>This class implements the following interfaces:</p>

<ul>
<li><i>Offsets</i>: In this class there cannot be an offset with a <i>NULL</i> value,
    the offset itself should be {@link offsetUnset() deleted} in that case. Because of
    this we also override the inherited behaviour by suppressing notices and warnings
    when {@link offsetGet() getting} non-existant offsets.
<li><i>String formatting</i>: We provide a generalised static method to
    {@link StringNormalise() format} strings which accepts a bitfield parameter that
    indicates which operation to perform, such as {@link kFLAG_MODIFIER_UTF8 UTF8}
    encode, {@link kFLAG_MODIFIER_LTRIM left} and {@link kFLAG_MODIFIER_RTRIM right}
    trim, {@link kFLAG_MODIFIER_NULL NULL} handling, {@link kFLAG_MODIFIER_NOCASE case}
    insensitive conversion, {@link kFLAG_MODIFIER_URL URL},
    {@link kFLAG_MODIFIER_HTML HTML} and {@link kFLAG_MODIFIER_HEX HEX} encoding and
    {@link kFLAG_MODIFIER_HASH hashing}.
<li><i>Time formatting</i>: We provide a generalised static
    {@link DurationString() method} to display duration strings.
</ul>]]></long-description>
        <tag line="76" name="package" description="MyWrapper"/>
        <tag line="76" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="108" package="MyWrapper\Framework">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="108">
          <description><![CDATA[Return a value at a given offset.]]></description>
          <long-description><![CDATA[<p>This method should return the value corresponding to the provided offset.</p>

<p>This method is overloaded to prevent notices from being triggered when seeking
non-existing offsets.</p>

<p>In this class no offset may have a <i>NULL</i> value, if this method returns a
<i>NULL</i> value, it means that the offset doesn't exist.</p>]]></long-description>
          <tag line="108" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="access" description="public"/>
          <tag line="108" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="MyWrapper\Framework">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="130">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>This method should set the provided value corresponding to the provided offset.</p>

<p>This method is overloaded to prevent setting <i>NULL</i> values: if this is the case,
the method will {@link offsetUnset() delete} the offset.</p>]]></long-description>
          <tag line="130" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="130" name="access" description="public"/>
          <tag line="130" name="uses" description="\offsetUnset()" refers="\offsetUnset()"/>
        </docblock>
        <argument line="130">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="130">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="162" package="MyWrapper\Framework">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="162">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>This method should reset the value corresponding to the provided offset.</p>

<p>We overload this method to prevent notices on non-existing offsets.</p>]]></long-description>
          <tag line="162" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="access" description="public"/>
        </docblock>
        <argument line="162">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="187" package="MyWrapper\Framework">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="187">
          <description><![CDATA[Return object's keys.]]></description>
          <long-description><![CDATA[<p>This method has the same function as array's <i>array_keys()</i>, it will return an
array comprised of all object's offsets.</p>]]></long-description>
          <tag line="187" name="access" description="public"/>
          <tag line="187" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="203" package="MyWrapper\Framework">
        <name>values</name>
        <full_name>values</full_name>
        <docblock line="203">
          <description><![CDATA[Return object's values.]]></description>
          <long-description><![CDATA[<p>This method has the same function as array's <i>array_values()</i>, it will return an
array comprised of all object's values.</p>]]></long-description>
          <tag line="203" name="access" description="public"/>
          <tag line="203" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CAttribute.php" hash="87c5f6a463a83a18488c811a8be2391b" package="Default">
    <source>eJztXetu3Eay/s15CtowEilQ5GyA/JEvyaw8SYS1bEMae7EIAoOa4Vg8miFnSY5kYdePcN7hPMw573W6qvpSfeNwdHOylrHYaMi+1q2rq75uPv1xebocDB5/880g/SZ9WjzfH7ZtXZys2vzp4+J5OplnTZNO81lRFm1RlbuiGJQcnxZNOivmeTqpyjYryiZtT3OveFrN0qcnVqMnz9OL02Jymtb5ss6bvGybNEubNmuLCbScqaLUmOww+WmZTc6yD3lyePn3Olsu8xqfNqsT9eLnOlvkF1V9pmpkq/a0qpPksJifVelwN/2//zmrZsX//nf6dLHbwJ+TnyYfiqzereoPz7HKeV43YtjJX3a/+y79/vvH3/3w+Pvv/vK9ePcYiPTsdv5B18F/3/A3hoi7gmeRQl712xkxkQMlYfRxki+B140lG0U5ma+meUBGclXBkxZs4fGgzv+5Kur8fVVO8q307M1w/Ov7lwd/PRoe/eP98eu3R/uj3Yf7ulsgxsN0+4kaUDIMChCNinosjMSli1wIybQBaayaoq3qSymeotCqyadpW6WLrBQCBo3866d5UZ6l+8O6zi5fn/xXPmmtH5/EbOriXFTDnvKvGyPPbCQ5H8ikms9FVaktzrAcVRHPFyd5nWaTSd40Va3LzSrQh7TCUQCds1Y0VdU5kLyo02VdCZVpi1z0KP4HI07zeb4A9duFETW56bOYz9PTrJzOcc6Cb1CzKncE69o6o6GK12Ku81yN20xTVEjzQnRbUz9NKsbJaCTbbDPB3mYHxuf2LR6V6UlO9D+57E91aJoIj9MEaTvJROuCOpIOEfr5rJnlWbsSRMdGZoJF1UVRflDl92T5p6s5Go6n8+K5MJ5yoIcoL69nsyZvt7atn5/Aqu7JRyCFk2ye1YKA8HI31hTN1W6PPbMbVWxFrpTEAzQRazoZXy7zqdMJe7ZRJ8C1SdbmH0CfgPiine6OQ1N0X0SHgD2rYaTxIZDUZm2mKqfn2XyFI0ufPiZebr7YPB6QyBgDPfjXIEk+84JxPB6OD/bT4Xh8dPDXt+NRejh8NfxldDh6NU4PXo1HRz8P90efdwUZJOkguRUiiZa/SbjeBWaW3MbUYFoJLESi9aiWi3f4HpcksihCVI3J00uOW3UnLUDeabkVRvS8mp/nqXjRCtu0g23WuZDB/BxslTHR+EPphdBYsGliRTgvpqI3qTSWjeZjVMYZjeaydS3iMgNVaIXjtKcroVlMlLqfPP/qkahzlM/yOhdGH3zAvVT/hOlCk2wFkf5CXsOEBS0u5YKCbSY11IRaRuNr+JuNf0f8Fo9xEULFp3WlLj58yLGsdkJ2+ThhmCQvNEaYvKSaO0g9ximsd0RQQfZq1dAgNVloLRaMFi0IBhNjp16378AQmV7RLsG8YNnOYKBI3cSQVpnSV29fviS7eJSLFYvGQoMW3sdkVdfMzvGKPw9fHo+o5guQkpzVtEsiHank0CYr8+Gtbsv8gncpjSuf8oe8fT2f0oRfAJ0Wgpbg7whitUbmkG81TixGgPHR25FHAEm/GRsW7G5OcuEK0M5GCNaF8BHyczH6VTafX1KjyaKaFrNCcShArPW9ZLOW6NWzE0Me8xf++gmlKK2VqoiaaZra2pQkw4ACmzq7vKVGSG/5AeyfEXXx47WWcUdCVb1F8TGfJqoeyqr4+5XisiWoVsWTqprnWYk1ieXwJ7As/QC2aD5lckIV5VYQ/ybOU/emRHtaVxeNdgv1VoD9+QlKPh4k0p2erUpyWy3XzKHkTmqIQn/jRNNnKeiYMK/2vzSVMxIFUDzS7UECC//jx/h/6f5pPjmzGEGvitmWsAfv0XRtpdYQoIkk/fe/0y37sfKXhagxJm9jceiSGoZOX1X1IpsXDdNk9dbMTox4i0Rhm835CRSyGjvOxPKiTIho1GqtgZeiITEXJKY14t9Yu+nvKY0UaPZjVzlZZg8J7g9Hap5r01QJoCvj2jPim+xZShKO+onNSNHys2fPvd6kUfTI6HejuS+ZQUWQPg/sUdDrbgmQRZNkVa6n6xMqm8+bXNayin/7nIb/1jQl68qanwbq/2zGo5/gTFx30jWiZ4Y2moFIDqkrG3JDFuygeCJECijsOnimnUQIlBlUpJT436cUZr5aLqu6Fcs6U1zxEm0OrmvGyGDjW+lDQV1dq3LM78MdKdRno6Oj10fv3746fvvmzeuj8eiFfnM4Oj4Wrvn78T/ejN5jMfVKSsjXmtpfp8+e+wLzRE/mwU8PaEIDmg63d7t343CzDZvLk7t0uu3doFlfhs42EWIw6pGMklxCVCLqmuPqIN1s3FFis1PjQvG9MbZjms3Ae19W1BLW6xEy2IlFpJQfj41jXEeUFOut7b17wwFDLiYsZlQW/1zl88tU7APKFh0S2DVn6WReNStRQC+bagDYqAzuLCHOMiXH2BBLeALTfJat5m2jfGY5xV+z5nSfGhYzZL9wrdZ9mcH/HcJAegOjpiG2BORv4TRO8km1EH5jvlgS23IigeIu+o+CecSe6f2+5rb3NbSpNc2JH/nHpRg6iYoomRmF26E2JUPzj4KjuFfltcuqNeX9rUEGrk7nxNnO6kW+zMspdFHR3Mr8Y2s4rdRe8yXVLBG/aKzk79JMcDetXgtyTfOPajOg4ktUUFkLqR4oiuv3c0hJ6k+0XUAwS0Z2LwTjM2qd3O4cJiT2F0ZL5EaDFHchXHBQnFIwE+K3k0wIjdhyYfiV2pMTVs1q+6YHLBtEJVmJntAdTA/k3kc5/4aYookGwhMoIGybtmNomXBOSqvBOgc+YVKJOaAY1CgrXIgVjaG6bBDEazp1N28oO2r/KlWrH0Wpz2omm0dmNDgGVQuEBTk8yQs9YlusRIV5U4HcQ2vNrvDRGTlFM3zfpiPjaKFB+IVCNsJA10J6BIdyHb9vrrBJl1ymMarNm1RLoJtgN+MzSbQUb16WvDJLnGlWRJbWCK7Nm1Nh9GmNsSJQopXgGiFF4pNej2jNFG1NVcRALQZKFgqKPYgWBemiwQcwh0pilUWEdZrJrh3X0OJN8xc/Z2KfRXtSUDKxoqfNRBQTYwYT0ygDY0UIlCU1HW0U1EFZVBMVMzRq2COu07OyCaYMp1Ob76oVVPrLamX4xwYsFw3JJn/COw491foM1G6lpVBtRZUYmYWiXQChhQPDdEQKhKjBjL8YmB6CHBv5ZTIEapakPW+JEaMT9nIuikEaKc+EPdV0nLHJxnsURqKdgOBfCPUjk1YJk9YsK1qMrOaKRhFPVVdrKhiRYrGcF8ponQgl52ZmsRI8bk4zyvqljXguelqVcUW4kyjcmrhbunnErTvGlsaia1z/pZUx/hDYJmCGtDXSF9AesHISs7QRpea54w3tBEANpSMnqD07uHo0p9VqPpUkxWQ0BGOUNXEagqrkqhtHvdbevOwDtbJaFG3LrDhTJlI8tcgGza2a6yct97DdkDOjBleNzIgevvgBKabsHDcvtEDKF2f5pWQak+cDpjcdagNsDenoDpof2JbJt3y3R61KLjakr9lyOb/ExbnqVj9vMNpCXikye/VYbI/o6ztlmMn17qih1zrROl/J5DJ29YCtqiSprfrb1z9/lUqVlVV5uYCVwN/m3WDAl0qjkFqi3RkM5pnn60WEQQQsencWtIPH0cbkJFITR/zsMeYj8uxdkxmIkerB22FQe15NPp/t7VkM82O/vyIeRSxx87ZYznN7e867tWdN/NrmwVkqCm0elGLtmFewGwKsDCmRKfFI2Agwls+IHnJUySNcUsVT/K/VDRVweiEW8fSIee0P2MiOjG5+9VW6xXpi79MHz1IajI4ZR6OUCQYq35n9ix5PQ/No0mmF2w30VR5qcYwHLpPO2GXCw5fUr45d4k8m8OnXelamEJ8oBjh5dDNGZWX21xBZyV6YxPrttQisV6A/AHnljEwRM0WKHXfT9qClHTFtfy3aglsnVliuBWKhfkQ7R+iM1n4r+yGr6jyDrRn69aOKmdEONdH5ErCYP9pvf1ND+Z2V2bPLMKV1h8YNGxvYRJuuqGCxQf3I3wQGtMffy3yON5pfcnAjwBy5g6Gnv6n2lDn11jYjpfElzhCJ+CZeaibwl7R0ibeKEtzyYd6BRAYWBxlBsYTHygHRBDqzQJTK8E3/rrdMyOg/3932SQ+6K8ObGrcTEBQRc1ASL5GtDUSdM+FlYNQIHXmKn6jwj5HoXc8QhWx8EnIagmvJkReWszqQJOUSIB0b00+Hc6OHsGPSdU8izAjR2eJEZ+4YheJOc8cHqHUBkWAKjKPCzsg9wt9dblHAo7B60Z4EWn3XkTC2kyKbwm6qrYiSC6z3GzcQW6wQpVvlz6C8IBPQ4NjjKaYfZabWNLvGjcGmcDx2UxoGgFR8L/Z77zGQ34gmRTdClGjy2iQiH9XEYCC/q+cO71DQhjwXkEVk7VCIEUb1Qylr1DoSOMcLlUO3OtVJ7o6V3kn5Evf0OCEwpRf4rvW9c3k3q7umAK3eGETQhdB5ItSVdpxkgl+lhe213aJbT0AFM003BKoADO7ajjxYhRFG2YyKfXhGtgN7wRbVo3xRnTut6PcKfWFJqgZceG29XU7BRTKqr1/CgJR36ajCGiQFaRQtnKZybAQ+XsW8NvgQSQX9JlbTFOgHVtkErcLhKhviVeS00TTQsKdW3ov5F1hmJG0lmST21sekdEgzw5JwuUfDkURKagvmirylDxBlrzDfMM8mtigy1UAL86DTYwF3NaQOjvy68BzXyksx5qKgGrqqqGpC/JpNuRdo0WFfLIVcfTZCHPn7/RuEHn3ZyCG2gbgj+BA7cpI4/+4Usw/L+NRHD1nPJXiIBZA9KJHMC5gTcBdVWrT5IooqKZ4DBViiC0q76QBMfgm7YQ642GlQCEBQZprC4TIxsMu7eSEM0ppuVHN4ZEa1CVEMsd/hTTrB8ZGfI2MEi6CO9LRgIJitqHV2HXJ82HJV5izt355Wq9au+AUDfA5Fx18syAd0pnvyUmy+diVdbdqlSsn0UVivvG5Bh67XLaqW6tZCC8T6JPOwHrRgNRYwGNQl6wlllqf+MOGNSzkH4PFs5nr8wrAkbB6NAIFIGjsDiep5VZ1B6/KIptZu4Q6d6ZQooVGIflL5tM2QKTsuAB3QgS8M/2NAOAhjMC3J07Ea4aPwXgo3VtPWCOzTdPpYuqcdGJ80iu6RDW6A8UnXoHtMi2swPrTCrdcUkCyhoPxg6E5K8iiXzxj+pyeILy5sGmdnbMFMj0lh+AA1QpzSyshtNsusxxAUa0eB3NZaxrtRcBnsX2fjnWUjNoSrgXaUA3SP2emj3XG2Zvbm0kzbOgLNBK6ffN2f5ut5mq8Tb6RJvQZwBBsGIy/UIyxARMaGQ2tBjTz5woita7h1LwdBxXO9wCsBcVILgyMHfuNAnHFQukjopAYbF8zisLS29v7uxnE9xitPEvib9xiuYTyZJBmj27auhvFCk+SFM6swIgjaTaj5jlLQVqKavJETnrcPGIrCfPj1Fi7MR8UiPZ5RXsxwhH4bers1kV8S9KOLBlBALvjnj4v0maxqTK3AXRczsXOOZ8/U9LvANsaRms0znVelEB+sVpIeHTga5o52YGq2NO1V1JRBPax32N92NEVAnQq7itaCkD9kV8iZafRizSviEB44xMEut1USDLjCMCf0EgAn7CGR08TYu8AnEE0cW1ecsEWAY0/QI2o47sKgUUyw8eDVu+HLgxfv3wyPhoej8ejIKtOBSmGhxzHSp7KzU0yXmD5QYauQ/ZqZNV0qrIZU1ioUg7mEQR8hGTVwC5JSMG8u5GHINkoh+UUF4BiObpiZW1ticFDo7PoBPBpJjsSrtWSUEGIfeD0lEyXewNy20x95SUm+Pf2DKl2cFnPIGWOX337bkWED++EBaDzMirk6R+EWmLlWzHWRK+o54SSvYLShIkhaijTgoIeIeAyn51k58aYjCQy7fp++lIJA0sp+FcVNeaIyO5F9TYQMBpgjkAz/WoAeYAxD3PWADF5WlouBMiSoUwalCinY9v0CEqugG+ibEHtZQbM64BVBrWnkBeDUwWTYCAxfog/Rhtqt2nafFhgUAXvxQU/yKyjAVwYH8iELBcAUrkyHK26p5785NSBT5lz7AC/N6oJLkqkf8xKs3lRhlbcdBQcbG6Kq9Qu3Sxq+EBktA5LIAWu/68rUFmv1JgS/Hs1EZ33JJqerulO5ewXfEaNVGXWtLRb3jc1Lf1clT4Ton1m2BCyJtSDK/B/untyEugH2yR2ylXnXpkj48ZGMd0/MCTnONwQ36d1ZB+REAdA5WTjkBHjSF3ESMR8KQgFGaT3i5Eh6wWsgJwRq60KcWMbdS+VT/ZsBnVwbSmKvQ1eBk7AWApCSV5VJc8zzWetKv1QKh4FGCO4SUOILtSX6ElHhI0q0sbIdTqUL1sKlkHIda4p+9GTgleT2R5bUPqQ1WIDBzIq6aTsRMM/8UyQ9RJlb/ZAL0rhoNCVOrgVQChd0KWI2ILG12cVrum4+ECLYvpFxanAt9HMjJI9DN+zCBe84Bv1mkDUoDpGyg/9kYA3b39wlsCZ+Oc9nANdELugJvIWckfAFVxO4kxdD0ITj6I+ike1oHI6+WZPwOTrlOA2my2Ua0E7MWw0rpMp6oI07Ep7gJKBNY4XRebJG3evR4qXJ5rxtncsLm3X6daP7g6lRCqOHguxiWYQ0hO4PJuvkrDyAAcShAJlpDR+zaYWYHDary2IS7ESdcr5rDA9H4/BUvLrKWzn1GyJu2LHcdUgVk6Gw72h1idoLfxJrTFrvq4FJrKtA9DWfzPe/WubdjNVOvhcSccFvloAMBGkXAlUoq5o1KqvFb5WANFOR6wuo6EYoWNO0HltS6Q3/Zi4HUcAnA6rJwVfLWplEU6kTVBW42HftDSIyL3e9a0TYJSB9Lw/prOJfGRIsfp81vtodsPcJzs+c4LyjuxSum9rsusZgYNy85KrBcl13TCHzeHIzCV+C8Ie8LjccEu8TpzBh83Do0CVxKNLRL36eJCx+bo5E6P6DIY9RcCjX69vZON/H7u9j9/ex+5uP3f/JIvWx06GRALruy4qc9T2wiSOKRLxjaQM7MhXIjHDyCvoOeB0/M+3fqSDH7y2d+rc5r2sRzDlmbw3C5qXFpCuEjB1W8iCrxXLp8yvHsh/L1ydNrsfzjkO6FtvdyGvoqKtsjW//vAOvMt8eQiWE79NYw/w402UbgXHK6K2zVpkitFox44jE7LMOWUOkWp5JbOjagB5rCJQMWUKmX9s8tbPG5+BxcgwjxymksiAxCrGkkBIE85KJwqyuFtyi8FKdCTk9KrvZQNzdKtKRm7tudi4youDxblaEp880qfrm6jbP1tkdXiljZybakbXThVSZBXwOzw388IIdeBtmlfnS+0aBogMGJWbJXIG7WvY3JGb36d9bSf8mbK2xE7zxlFdwFfcdtavkfZ2oTzTzS/lUyz52J1TdxTuQQdYpROmyWojFrgxywnyvrvwxQ0PezerrzPnY/vBJ/5SpvQ4/8VjcH8Qn77JZWLG0MIsh9xljMHHonsHOnDFGXQWuaDJZde14aJ68culscyPkrHVDCWSNIOXv1vsMDyxCnpB3ZgQ3hI2x6OQol4wVbYhG6NSnLwk88Jmu5vhbUYav57hTAIGVZm6dJIIFIzgrSn5dx4YoApjtlVEE1HU3imDHusW7C0bgABpUjeDNIDNzDF1dp8GqqOOq8kPb10Ir7NBRYPMBoAsxBlhXRMfyzJ8hkzeO1BrCGtQBu3cAzxw6CASkthIH9V1p8+VsmT61P9OC+mjjDdixGefTRqK3Pw3KwGjpemAAEO7aMIWbhyaQ6qmqeDwZWYxbkyf8AgKpNNZt95DOK2XCXN62D9eSnMyRGZMMbnakQ9Iy19gJjZD9o3LJ/uEqmkjDJi0M7csxhDv5D7+iwNJJ++LW27qooF+Xn+M8fffI7h4f4cA0bgEbEejhjr+Ne6tABu4K9QMy3AX0AUYl/jxQBnM9SuJA2bb1UAks6p/nvpXP/OJ3HEyWcdt7ehx8StGe7fWICcO+TsCEk8x3X5lWNoJSqKqmUjem4h48cQ+e+AOAJ6w1LIigiCfsTVI/zHRLk3ohJEyNAEICXv5RgBkxjEJ4ym7nsqALkrjFWZlySdIby9ELSGGEoAtIwRjbF3/Cq/SQhc+AfnFFoi8BNhOHW5xYT6n4cx9Xtey0+t7CLR9Qvd6RVH2lphe17X8wVeaW5BWq/OXVDqXe5yX/8HlJ/6KJTdKQN3fgFG1Z54FTe5nXjwIHTm/haOpNZVOvnVm0D7EmRsGveehYT30d43tlJiG/xj7O3CMrGTvQajUbSJjZGTY7Q7Uhj28kMXV/IPb6OS2j6XeU0iLf9KXgY+L8u9N0lvpIlsuZhucmTCYCsh/qjmadA+hqBrM0lKPil6FSQkR9FjyeBTvG7I0Ml6qUF0TYVT/mUutoBBKyFlhcBXrFgCcQ+ON3OlOJ3UhNU1Jf5uy+MPk9vLtYjlVGFr3Lt6n21/rLomfj4S/vXx68YN/Z/eRFZ5NKnreT4xuy26VZ95Nqsawa/FSAc+l/gDrhNGPk0n/xkCLUKtRsRzeT7kye06jkgaQj56nVZufxNEN9+mJWk5arRV4XE/waM6YF9HluujubpQsheJ2XePEhZQwhyI+pxqa6PwnsngTWvL/5fJu8a7U7F0WWgpKueVZDRCi/VLdBmxO2F6d5qRJHuPmSn6sTf6u0FZMaWRp2DrKw/O6e/NI8teleMUufWDAXyrOEA51QPwVfI7MAAPrmdp27MaMwsq+Oo8/EXkVfdc1PU6Z/hxGr5M6Our4aelI5foU3gHsX1dW57ojxFmwh0/woP76Q9zXSBKhFPgt1nLgRtfCbC/yefvV1bXk9JT72PqlAbcInDFtzV8D+G6E9goViHG/LoiXZ39uj/x5oi7i1nbqPrAsESOIhWGhxWaxBy3meNfIRlCrws6iTFcxc3rgIE6lqyZuihBQmnchUs9LXEMtknfvtCF8m9AioUTRR0yqnijPh3OOt80CsHWFy9O2eSGTkEM+mqlPZjnnsOjvunBCXTV3pyLaCfuor9ntfAB84zL22MdAWvXLiWIr+t5LbX3rgGVR5KB/5YFKoalTrb5jfUUYoW8JBebAYcB0AioeSnAQyi2XlfbwCjY+YsDE2mVdm1z1ybdOAWUCZCJ7yPGd7SrDMqvRWzmvkdclEKhOqvxeip7FR3pc+HMpT2RxMvDapa2jHps0varDG2sN92Nj8EH0+Mf9XWRu1Ahl7St+l6fLwmk9K1oytMotBo6x7Q/Ah9VUOFDb1mSK0QkLIL/HrFUUzyQWtpqvlnIAEX9zpe3QlxN9HfHG1nKf+h+uvm2cGd7HB6+tbXCzDGedopthsEDuSxOmVr6DVdd/J7y23gZPzduE+iWATzNBZYCd+8cyKwcRvlt5KHx6UgqaF8j7UbdFrr4ruuifaRA1oODpkYGdbAx8w9aZaR2TMnnnoo8+9Jh1s/oZp4EdO5GcMg1ETToJf8pKuha7povZz+u5J05H/f6c/yN55etrFkstqIRiAupo6qz+sTG5FBtGCl1tHvhrPvxXv3BFtf9bcKKVUjcjV0FdVS/b987YDPM9Ddz3h6KOPglEMYG/xspWQZSNz5KPVNj87OJpqPMc7iWWLYzn6HRHdwiLbtlR6InCcq9vlNS5ABVHpbuxYzp/zItYV3TTd1z0w1QMpAdVcDJcB8zCeAZ8HPoVDK1cchhWLRvFRIjG2eR6QilW5Vi5kGNz9ekMjZSrAEfOhBY8Cpp+bpoU98yN3Ps7crU/IO0ta53fHHaUnwUq3w6m9nteYc6FhYzwajY8ORu9G3ooTuRbB5hAtYYGv0ocOx3tf1JB210v7GvOKrbim1c/+vpUCxj7vbiVtpczY2ejwAXuCCTlyw8vInDRGn+kfgxJoT6e/aJ1bloJZ5HP3o72RM7yhyXsUGkfp0/1p7WMM0Zg9po4PN0HCWKad88zY9vO1hh1Lb2bcXSKGT8wf2hbefi8/uxK4OqdrNEH7b09cfbRFlNRPQjKT9pYaViNRdA4tFkyozLl4M+MucbfK+SIfFvqNJ5B4E7CXGX5MP6IWXCmcY/XqQJ/F8A7BWMj8cERAQFGYkDxzhaTbH+0SlHs+IZ9C9B8EymkbZBk75oswMzfQrwySSq83g0TDp85z+3EcUeL7xBxkxVZWdXeMhpt0LK9mWbqL9fURJQYYNjd5BNtI57j0l7MMG+kNLMjhtQR9Oz5R/l4TWGpBp/GRbAo0A4cWi9JyAhh40NINFQz3KHbvKNw7Cp/TUQjO4ApTSLwpRJcgMwU+tojS2mViimtU12vTVV+7gKfCXIFZq91KfO/Y3MvVHcrVbThi/kqDRCurqvzWzWA2zsoDzgnhKxn1BrqvgGeXOK6Q/60hjjAn5vS9yS8KDX+gweHgTEWw4Ztgp/vi0hlQO9jXsd/TjhykS0v/GEIHRBfpthZ2ez3n2qC1ByxoJamh73ekkJrr1kYc5XD033GyA86vOmnGVm3vXhzfxeKCFvR/Y0fVPG21XGluDQOWcFMr6Pu9QScPSKFy7p5fFzFygXaO+GdGeQvyDiagtEI8vwu01XmohpuhyKmaAJscRnr2S77SquZzba0HHD1naLmBG7m/1/N+4xsvbvltvz3s+F7L7/Xc3tDavvHK3t/n7doDBJZMeyfguCXBcMvmLkk/jyTmUwXV1CoU9UciLToKa7e1TmlZq67ihr0WX3XD/kfAP/FFOeTM6FLrXN8b8HzvpetPKl0BwfFXFtcHNmuMu4JofygSiDQnkBAW2HUISZLXOYWEhPJINJC9AtiATlo2jjP111UhXDs1Fp6N1UlKP1nvZBHlITOrkQ1cUXPp5CDgcHa4m7bDyI4hvXOTZ7ysdW7HYDHwDNJgcCtHduDfAGGYgX/f8DfH4+H4YD/df/n6+O3RKD14NR4d/TzcH4XKeq3czsDhzM+tn2YSerI/r+AcRWBmd3GUCQyyAs85x5YktE7iWknM6CN3ZVVeLgDeq2F3CBkWdRDcmTUSsTrLAEWkfENseUKz1TV3ANirSiIA/qLit7lleCinPM/xDFxbSZQjngmAwzqZuoYuej+N7DGKFzQsgOtn/mU0SpUh1YU7dP6yo//83myqZHGxnlpn67ECXSvgPf9+mxT/k6usTGEHzOTKAd768bpfsyYqj3cikDCA25bHU9FHXBzpvJ0UucY+vWBA9uwKOhRFPRps9aQos/oyPXzxA3YGB3iK9jpSyviyVkg9wVxMf9hKPRHcSRGA21cM2QhuXQrRiegQxbsQRHJkTu/FMSSOLoOUTCLx4tTDDm+PfrdEwC4K6hlpGnIiUnv47HFMY0fqiAumxxm+VZI2XYNCCzvLDxyw6UjdQiDd5jiI2j11rk6LwH7goUHaxs6cd4OnGXpajkhjp9kIA/hxe69wIDZ8itPuLoFTzv/wuCEqAZMtGY5e+OVgMaGf8N6Y888hueUo+LVv2ly7Gko2e4DvJvOsadhF5eLd4Mfng/8HsFb2fg==</source>
  </file>
  <file path="classes/CCodedUnitObject.php" hash="109ac87afcd31b076982da705e48dda0" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="54" package="MyWrapper\Framework">
      <extends>CRelatedUnitObject</extends>
      <name>CCodedUnitObject</name>
      <full_name>\CCodedUnitObject</full_name>
      <docblock line="54">
        <description><![CDATA[Coded unit object.]]></description>
        <long-description><![CDATA[<p>Objects derived from this class have the following predefined properties:</p>

<ul>
<li><i>{@link kTAG_CODE kTAG_CODE}</i>: This attribute represents the current object's
    {@link Code() code}, identifier or acronym.
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: This attribute represents the current object's
    {@link Kind() kind} or type.
<li><i>{@link kTAG_CREATED kTAG_CREATED}</i>: This offset holds the object's creation
    {@link Created() time stamp}.
<li><i>{@link kTAG_MODIFIED kTAG_MODIFIED}</i>: This offset holds the object's last
    modification time stamp, this property should be used to mark all objects.
</ul>

<p>By default, the unique {@link _index() identifier} of the object is its
{@link Code() code}, which is also its {@link _id() id}.</p>

<p>Objects of this class require at least the {@link Code() code} {@link kTAG_CODE offset}
to have an {@link _IsInited() initialised} {@link kFLAG_STATE_INITED status}.</p>]]></long-description>
        <tag line="54" name="package" description="MyWrapper"/>
        <tag line="54" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="87">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentObject::__construct() overload} the constructor to initialise
the {@link _IsInited() inited} {@link kFLAG_STATE_INITED flag} if the
{@link Code() code} attribute is set.</p>]]></long-description>
          <tag line="87" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="87" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="87" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="87" name="access" description="public"/>
          <tag line="87" name="uses" description="\_IsInited" refers="\_IsInited"/>
          <tag line="87" name="see" description="\kTAG_CODE" refers="\kTAG_CODE"/>
        </docblock>
        <argument line="87">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="MyWrapper\Framework">
        <name>Code</name>
        <full_name>Code</full_name>
        <docblock line="140">
          <description><![CDATA[Manage code.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_CODE code}, it uses the
standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_CODE offset}.</p>

<p>The code represents the object's {@link _index() identifier}.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() ManageOffset} method, in which the first parameter
will be the constant {@link kTAG_CODE kTAG_CODE}.</p>]]></long-description>
          <tag line="140" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="140" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="140" name="access" description="public"/>
          <tag line="140" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="140" name="see" description="\kTAG_CODE" refers="\kTAG_CODE"/>
        </docblock>
        <argument line="140">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="MyWrapper\Framework">
        <name>Kind</name>
        <full_name>Kind</full_name>
        <docblock line="176">
          <description><![CDATA[Manage kind.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_KIND kinds}, it uses the
standard accessor {@link CAttribute::ManageArrayOffset() method} to manage the list of
kinds.</p>

<p>Each element of this list should indicate a function or quality of the current
object</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_KIND kTAG_KIND}.</p>]]></long-description>
          <tag line="176" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="176" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="176" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="176" name="access" description="public"/>
          <tag line="176" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="176" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="176" name="see" description="\kTAG_KIND" refers="\kTAG_KIND"/>
        </docblock>
        <argument line="176">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="176">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="176">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="219" package="MyWrapper\Framework">
        <name>Created</name>
        <full_name>Created</full_name>
        <docblock line="219">
          <description><![CDATA[Manage object creation time stamp.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object {@link kTAG_CREATED creation}
time-stamp, it uses the standard accessor {@link CAttribute::ManageOffset() method}
to manage the {@link kTAG_MODIFIED offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="219" name="param" description="Object creation date." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="219" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="219" name="access" description="public"/>
          <tag line="219" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="219" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="219" name="see" description="\kTAG_CREATED" refers="\kTAG_CREATED"/>
        </docblock>
        <argument line="219">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="262" package="MyWrapper\Framework">
        <name>Modified</name>
        <full_name>Modified</full_name>
        <docblock line="262">
          <description><![CDATA[Manage object last modification time stamp.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object last {@link kTAG_MODIFIED modification}
time-stamp, or the date in which the last modification was made on the object, it
uses the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_MODIFIED offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="262" name="param" description="Object last modification date." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="262" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="262" name="access" description="public"/>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="262" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="262" name="see" description="\kTAG_MODIFIED" refers="\kTAG_MODIFIED"/>
        </docblock>
        <argument line="262">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="295" package="MyWrapper\Framework">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="295">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if {@link kTAG_CODE code} property is
set.</p>]]></long-description>
          <tag line="295" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="295" name="access" description="public"/>
        </docblock>
        <argument line="295">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="326" package="MyWrapper\Framework">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="326">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if {@link kTAG_CODE code} property is
set.</p>]]></long-description>
          <tag line="326" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="326" name="access" description="public"/>
        </docblock>
        <argument line="326">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="363" package="MyWrapper\Framework">
        <name>_index</name>
        <full_name>_index</full_name>
        <docblock line="363">
          <description><![CDATA[Return the object's unique index.]]></description>
          <long-description><![CDATA[<p>In this class we consider the {@link kTAG_CODE code} to be the object's unique
{@link kTAG_LID identifier}.</p>]]></long-description>
          <tag line="363" name="access" description="protected"/>
          <tag line="363" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CContact.php" hash="d75ee225d700d789c188e28f7d455679" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Address.]]></description>
        <long-description><![CDATA[<p>This include file contains the address class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="63" package="MyWrapper\Entities">
      <extends>CEntity</extends>
      <name>CContact</name>
      <full_name>\CContact</full_name>
      <docblock line="63">
        <description><![CDATA[Contact.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CEntity ancestor} to implement a contact entity.</p>

<p>Contacts are entities that need to be tracked by {@link Mail() mail},
{@link Phone() telephone} or {@link Email() e-mail}.</p>

<p>The class features the following properties:</p>

<ul>
<li><i>{@link kOFFSET_MAIL kOFFSET_MAIL}</i>: The contact {@link Mail() mailing} address
    list.
<li><i>{@link kOFFSET_PHONE kOFFSET_PHONE}</i>: The contact {@link Phone() telephone}
    list.
</ul>

<p>These three properties are managed as an array of elements discriminated by the
{@link kTAG_KIND kTAG_KIND} offset, no two elements may share the same
{@link kTAG_KIND kind}.</p>

<p>The object inherits the {@link _IsInited() inited} {@link kFLAG_STATE_INITED status}, it
is the responsibility of concrete classes to implement this feature.</p>]]></long-description>
        <tag line="63" name="package" description="MyWrapper"/>
        <tag line="63" name="subpackage" description="Entities"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="MyWrapper\Entities">
        <name>Mail</name>
        <full_name>Mail</full_name>
        <docblock line="124">
          <description><![CDATA[Manage mailing address.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the contact {@link kOFFSET_MAIL mailing} address,
it manages an array of structures with the following offsets:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: The mailing address kind, this could be
    <i>home</i>, <i>work</i> or <i>other</i>. This element represents the array
    key, although technically it is implemented as an element to allow searching on
    all values.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The mailing address structure or string,
    this element should hold the actual address.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theType</b>: The element type, kind or index:
 <ul>
    <li><i>NULL</i>: This value indicates that the adress has no type or kind, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the kind or type of
        the address.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="124" name="param" description="Mailing address or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="124" name="param" description="Mailing address kind or index." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="124" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="124" name="access" description="public"/>
          <tag line="124" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="182" package="MyWrapper\Entities">
        <name>Phone</name>
        <full_name>Phone</full_name>
        <docblock line="182">
          <description><![CDATA[Manage telephone numbers.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the contact {@link kOFFSET_PHONE telephone}
numbers, it manages an array of strings with the following offsets:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: The telephone number kind, this could be
    <i>home</i>, <i>work</i> or <i>other</i>. This element represents the array
    key, although technically it is implemented as an element to allow searching on
    all values.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The telephone number string, this element
    should hold the actual phone number.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theType</b>: The element type, kind or index:
 <ul>
    <li><i>NULL</i>: This value indicates that the phone has no type or kind, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the kind or type of
        the phone number.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="182" name="param" description="Telephone number or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="182" name="param" description="Mailing address kind or index." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="182" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="182" name="access" description="public"/>
          <tag line="182" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="240" package="MyWrapper\Entities">
        <name>Fax</name>
        <full_name>Fax</full_name>
        <docblock line="240">
          <description><![CDATA[Manage telefax numbers.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the contact {@link kOFFSET_FAX telephone}
numbers, it manages an array of strings with the following offsets:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: The telephone number kind, this could be
    <i>home</i>, <i>work</i> or <i>other</i>. This element represents the array
    key, although technically it is implemented as an element to allow searching on
    all values.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The telephone number string, this element
    should hold the actual phone number.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theType</b>: The element type, kind or index:
 <ul>
    <li><i>NULL</i>: This value indicates that the phone has no type or kind, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the kind or type of
        the phone number.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="240" name="param" description="Telephone number or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="240" name="param" description="Mailing address kind or index." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="240" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="240" name="access" description="public"/>
          <tag line="240" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CContainer.php" hash="f0a69a6d4447d414216b05965d008349" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Types.]]></description>
        <long-description><![CDATA[<p>This include file contains all type definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="59" package="MyWrapper\Persistence">
      <extends>CObject</extends>
      <name>CContainer</name>
      <full_name>\CContainer</full_name>
      <docblock line="59">
        <description><![CDATA[Persistent objects data store ancestor.]]></description>
        <long-description><![CDATA[<p>This <i>abstract</i> class is the ancestor of all container classes in this library, it
implements the interface and workflow which all derived classes wrapping databases and
other data stores will implement.</p>

<p>The public interface declares three main operations:</p>

<ul>
<li><i>{@link Commit() Commit}</i>: This method will insert, replace or modify objects
    in the current container.
<li><i>{@link Load() Load}</i>: This method will retrieve objects from the current
    container.
<li><i>{@link Delete() Delete}</i>: This method will remove objects from the current
    container.
</ul>

<p>The class features a {@link Container() member} that holds the native data store.</p>]]></long-description>
        <tag line="59" name="package" description="MyWrapper"/>
        <tag line="59" name="subpackage" description="Persistence"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="68" namespace="" package="Default">
        <name>$mContainer</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="68">
          <description><![CDATA[Persistent data store.]]></description>
          <long-description><![CDATA[<p>This data member holds the native persistent store.</p>]]></long-description>
          <tag line="68" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="100">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>You instantiate the class with a native data store, the method expects a single
parameter that will be handled specifically by specialised derived classes.</p>

<p>Derived classes should overload this method if a default value is possible; to check
for specific container types they should rather overload the member accessor
{@link Container() method}.</p>]]></long-description>
          <tag line="100" name="param" description="Native object store." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="uses" description="\Container()" refers="\Container()"/>
        </docblock>
        <argument line="100">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="126" package="MyWrapper\Persistence">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="126">
          <description><![CDATA[Return container name.]]></description>
          <long-description><![CDATA[<p>This method should return the current container's name.</p>

<p>All derived concrete classes should implement this method, all containers must be
able to return a name.</p>]]></long-description>
          <tag line="126" name="access" description="public"/>
          <tag line="126" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="170" package="MyWrapper\Persistence">
        <name>Container</name>
        <full_name>Container</full_name>
        <docblock line="170">
          <description><![CDATA[Manage persistent container.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the persistent container, it accepts a single
parameter which represents either the container or the requested operation,
depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing containers; if <i>FALSE</i>, it will return the currently set
value.</p>

<p>In derived classes you should overload this method to check if the provided container
is of the correct type, in this class we accept anything.</p>]]></long-description>
          <tag line="170" name="param" description="Persistent container or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="170" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="170" name="access" description="public"/>
          <tag line="170" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="170" name="uses" description="\ManageMember()" refers="\ManageMember()"/>
        </docblock>
        <argument line="170">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="199" package="MyWrapper\Persistence">
        <name>Database</name>
        <full_name>Database</full_name>
        <docblock line="199">
          <description><![CDATA[Return database.]]></description>
          <long-description><![CDATA[<p>This method should return the current container's database, if this is not relevant,
it should return <i>NULL</i>.</p>]]></long-description>
          <tag line="199" name="access" description="public"/>
          <tag line="199" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="324" package="MyWrapper\Persistence">
        <name>Commit</name>
        <full_name>Commit</full_name>
        <docblock line="324">
          <description><![CDATA[Commit provided object.]]></description>
          <long-description><![CDATA[<p>This method can be used to commit the provided object to the current data store, it
expects three parameters:</p>

<ul>
<li><b>$theObject</b>: The object or data to be committed.
<li><b>$theIdentifier</b>: This parameter is expected to be the object's unique
    identifier within the container, it will be the {@link Load() access} key to the
    object once committed. If the value is <i>NULL</i>, it means that it is the duty
    of the current container to set it, this will generally be the case when
    inserting objects; in all other cases the parameter is required.
<li><b>$theModifiers</b>: This parameter represents the commit operation options, by
    default we assume it is a bitfield where the following values apply:
 <ul>
    <li><i>{@link kFLAG_PERSIST_INSERT kFLAG_PERSIST_INSERT}</i>: The provided
        object will be inserted in the container, it is assumed that no other
        element in the container shares the same identifier, in that case the method
        must raise an {@link kERROR_DUPLICATE exception}.
    <li><i>{@link kFLAG_PERSIST_UPDATE kFLAG_PERSIST_UPDATE}</i>: The provided
        object will replace the existing object. In this case the method expects
        the container to have an entry with the same key as the provided identifier,
        if this is not the case the method must raise an
        {@link kERROR_NOT_FOUND exception}. With this option it is assumed that the
        provided object's attributes will replace all the existing object's ones.
    <li><i>{@link kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY}</i>: This option can be
        used to apply modifications to a subset of the object. In this case, the
        provided object contains a series of key/value pairs in which the key
        represents the field to operate on, and the value represents the modifier.
        A series of other flags determine what are the exact operations:
     <ul>
        <li><i>{@link kFLAG_MODIFY_MASK kFLAG_MODIFY_MASK} off</i>: If none of
             flags in this mask are set, it means that the provided key/value pairs
            represent a list of elements to add or to remove from the object: if the
            value is <i>NULL</i>, the field corresponding to the key will be
            removed; if the value is not <i>NULL</i>, the field value will be set or
            replaced.
        <li><i>{@link kFLAG_MODIFY_INCREMENT kFLAG_MODIFY_INCREMENT}</i>: This
            option represents an increment or decrement operation, depending on the
            provided value. The provided values will increment the fields
            corresponding to the provided keys, if the fields do not exist, these
            will be set with the provided values.
        <li><i>{@link kFLAG_MODIFY_APPEND kFLAG_MODIFY_APPEND}</i>: This option will
            append the provided values to the arrays of the corresponding fields. If
            the field does not exist, it will be created with an array composed of
            the provided value. If the field exists and its value is not an array,
            an error should occur.
        <li><i>{@link kFLAG_MODIFY_ADDSET kFLAG_MODIFY_ADDSET}</i>: This option is
            equivalent to the {@link kFLAG_MODIFY_APPEND previous} one, except that
            the value will only be appended if it doesn't already exist in the
            field.
        <li><i>{@link kFLAG_MODIFY_POP kFLAG_MODIFY_POP}</i>: This option will
            remove the first or last element of the array contained by the field:
            if the value is 1, the last element will be removed, if it is -1, the
            first element will be removed.
        <li><i>{@link kFLAG_MODIFY_PULL kFLAG_MODIFY_PULL}</i>: This option will
            remove all occurrences of the provided value from the field's array; if
            the field does not hold an array, an error should be raised.
     </ul>
    <li><i>{@link kFLAG_PERSIST_REPLACE kFLAG_PERSIST_REPLACE}</i>: The provided
        object will be {@link kFLAG_PERSIST_INSERT inserted}, if the identifier
        doesn't match any container elements, or it will
        {@link kFLAG_PERSIST_UPDATE replace} the existing object. As with
        {@link kFLAG_PERSIST_UPDATE update}, it is assumed that the provided
        object's attributes will replace all the existing object's ones.
    <li><i>{@link kFLAG_PERSIST_DELETE kFLAG_PERSIST_DELETE}</i>: This option
        assumes you want to remove the object from the container, although this
        operation has its own public {@link Delete() method}, derived classes can
        use this option to implement a <i>deleted state</i>, rather than actually
        removing the object from the container.
    <li><i>{@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED}</i>: This option can be
        used to work with objects in which complex or custom data types are
        represented by derived concrete instances of {@link CDataType CDataType}.
        If the option is ON, the contents of the object will be
        {@link CContainer::UnserialiseObject() unserialised}
        {@link _PrepareCommit() prior} to {@link Commit() committing} it, and
        {@link CDataType::SerialiseData() serialised} {@link FinishCommit() after}.
        In general, this flag will be passed to method by the provided object.
 </ul>
</ul>

<p>The method will return the object's key within the container or raise an exception if
the operation was not successful.</p>

<p>The operation is performed by a protected interface whose workflow is as follows:</p>

<ul>
<li><i>{@link _PrepareCommit() _PrepareCommit}()</i>: This method can be used to
    check the parameters and initialise the resources.
<li><i>{@link _Commit() _Commit}()</i>: This method will perform the actual commit.
<li><i>{@link _FinishCommit() _FinishCommit}()</i>: This method can be used to perform
    eventual post-flight adjustments.
</ul>]]></long-description>
          <tag line="324" name="param" description="&amp;$theObject Object to commit." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="324" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="324" name="param" description="Commit modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="324" name="access" description="public"/>
          <tag line="324" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="324" name="uses" description="\_PrepareCommit()" refers="\_PrepareCommit()"/>
          <tag line="324" name="uses" description="\_Commit()" refers="\_Commit()"/>
          <tag line="324" name="uses" description="\_FinishCommit()" refers="\_FinishCommit()"/>
          <tag line="324" name="see" description="\kFLAG_PERSIST_INSERT" refers="\kFLAG_PERSIST_INSERT"/>
          <tag line="324" name="see" description="\kFLAG_PERSIST_REPLACE" refers="\kFLAG_PERSIST_REPLACE"/>
        </docblock>
        <argument line="324">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="325">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_PERSIST_REPLACE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="389" package="MyWrapper\Persistence">
        <name>Load</name>
        <full_name>Load</full_name>
        <docblock line="389">
          <description><![CDATA[Load object.]]></description>
          <long-description><![CDATA[<p>This method can be used to load an object from the current data store, it expects two
parameters:</p>

<ul>
<li><b>$theIdentifier</b>: This parameter is expected to be the object's unique
    identifier within the container, it will be the access key to the object.
<li><b>$theModifiers</b>: This parameter represents the load operation options,
    please see the {@link __construct() constructor} documentation for more
    information on this parameter.
</ul>

<p>The method should return the found object, or <i>NULL</i> if not found.</p>

<p>The actual operation is performed by a protected interface:</p>

<ul>
<li><i>{@link _PrepareLoad() _PrepareLoad}</i>: Normalise parameters and initialise
    resources.
<li><i>{@link _Load() _Load}</i>: Find and load object.
<li><i>{@link _FinishLoad() _FinishLoad}</i>: Cleanup after the operation.
</ul>]]></long-description>
          <tag line="389" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="389" name="param" description="Load modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="389" name="access" description="public"/>
          <tag line="389" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="389" name="uses" description="\_PrepareLoad()" refers="\_PrepareLoad()"/>
          <tag line="389" name="uses" description="\_Load()" refers="\_Load()"/>
          <tag line="389" name="uses" description="\_FinishLoad()" refers="\_FinishLoad()"/>
          <tag line="389" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="389">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="452" package="MyWrapper\Persistence">
        <name>Delete</name>
        <full_name>Delete</full_name>
        <docblock line="452">
          <description><![CDATA[Delete object.]]></description>
          <long-description><![CDATA[<p>This method can be used to remove an object from the current data store, it expects
two parameters:</p>

<ul>
<li><b>$theIdentifier</b>: This parameter is expected to be the object's unique
    identifier within the container, it will be the access key to the object.
<li><b>$theModifiers</b>: This parameter represents the delete operation options,
    please see the {@link __construct() constructor} documentation for more
    information on this parameter.
</ul>

<p>The method should return the deleted object, or <i>NULL</i> if not found.</p>

<p>The actual operation is performed by a protected interface:</p>

<ul>
<li><i>{@link _PrepareDelete() _PrepareDelete}</i>: Normalise parameters and
    initialise resources.
<li><i>{@link _Delete() _Delete}</i>: Remove object from container.
<li><i>{@link _FinishDelete() _FinishDelete}</i>: Cleanup after the operation.
</ul>]]></long-description>
          <tag line="452" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="452" name="param" description="Delete modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="452" name="access" description="public"/>
          <tag line="452" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="452" name="uses" description="\_PrepareDelete()" refers="\_PrepareDelete()"/>
          <tag line="452" name="uses" description="\_Delete()" refers="\_Delete()"/>
          <tag line="452" name="uses" description="\_FinishDelete()" refers="\_FinishDelete()"/>
          <tag line="452" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="452">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="452">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="550" package="MyWrapper\Persistence">
        <name>Reference</name>
        <full_name>Reference</full_name>
        <docblock line="550">
          <description><![CDATA[Convert an object to a reference.]]></description>
          <long-description><![CDATA[<p>This method accepts an object derived from
{@link CPersistentUnitObject CPersistentUnitObject} and returns a structure that can
be used as a reference to that object and stored as a property.</p>

<p>The method will return an array composed by the following offsets:</p>

<ul>
<li><i>{@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID}</i>: The object identifier,
    if the provided object does not have an {@link kTAG_LID identifier}, this
    method will raise an exception.
<li><i>{@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER}</i>: The
    container name.
<li><i>{@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE}</i>: The
    database name.
<li><i>{@link kTAG_CLASS kTAG_CLASS}</i>: The object's class name.
</ul>

<p>The method accepts two parameters:</p>

<ul>
<li><b>$theObject</b>: The object to be referenced, it must be derived from
    {@link CPersistentUnitObject CPersistentUnitObject} or the method will raise an
    exception.
<li><b>$theModifiers</b>: This bitfield determines what elements should be included
    in the reference:
 <ul>
    <li><i>{@link kFLAG_REFERENCE_IDENTIFIER kFLAG_REFERENCE_IDENTIFIER}</i>: The
        object {@link kTAG_LID identifier} will be stored under the
        {@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID} offset. If the object does
        not have this identifier, the method will raise an exception. This is the
        default option.
    <li><i>{@link kFLAG_REFERENCE_CONTAINER kFLAG_REFERENCE_CONTAINER}</i>: The
        current container name will be stored under the
        {@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER} offset. If
        the provided value is empty, the offset will not be set.
    <li><i>{@link kFLAG_REFERENCE_DATABASE kFLAG_REFERENCE_DATABASE}</i>: The
        current container's database name will be stored under the
        {@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE} offset. If the
        current object's {@link Database() database} name is <i>NULL</i>, the
        offset will not be set.
    <li><i>{@link kFLAG_REFERENCE_CLASS kFLAG_REFERENCE_CLASS}</i>: The provided
        object's class name will be stored under the
        {@link kTAG_CLASS kTAG_CLASS} offset.
 </ul>
</ul>]]></long-description>
          <tag line="550" name="param" description="Object to reference." type="\CPersistentUnitObject" variable="$theObject">
            <type by_reference="false">\CPersistentUnitObject</type>
          </tag>
          <tag line="550" name="param" description="Referencing options." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="550" name="access" description="public"/>
          <tag line="550" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="550" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="550" name="uses" description="\__toString()" refers="\__toString()"/>
          <tag line="550" name="uses" description="\Database()" refers="\Database()"/>
          <tag line="550" name="see" description="\kFLAG_REFERENCE_IDENTIFIER" refers="\kFLAG_REFERENCE_IDENTIFIER"/>
          <tag line="550" name="see" description="\kFLAG_REFERENCE_DATABASE" refers="\kFLAG_REFERENCE_DATABASE"/>
        </docblock>
        <argument line="550">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="550">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_REFERENCE_IDENTIFIER]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="661" package="MyWrapper\Persistence">
        <name>UnserialiseObject</name>
        <full_name>UnserialiseObject</full_name>
        <docblock line="661">
          <description><![CDATA[Unserialise provided object.]]></description>
          <long-description><![CDATA[<p>This method will convert concrete derived instances of {@link CDataType CDataType} or
equivalent structures into native data types suitable to be stored in containers.</p>

<p>This method will scan the provided object or structure and pass all instances derived
from {@link CDataType CDataType} to another public {@link UnserialiseData() method}
that will convert these objects into native data types that are compatible with the
specific container type.</p>

<p>The method will scan the provided structure and select all elements which are arrays,
ArrayObjects or objects derived from {@link CDataType CDataType}, these elements will
be sent to the {@link UnserialiseData() UnserialiseData} method that will take care
of converting these structures into native data types that are compatible with the
specific container type.</p>

<p>The method will perform the conversion directly into the provided reference and will
use recursion to traverse the provided structures.</p>

<p>Elements sent to the {@link UnserialiseData() conversion} method are selected as
follows:</p>

<ul>
<li><i>{@link CDataType CDataType}</i>: All instances derived from this class are
    sent to the {@link UnserialiseData() UnserialiseData} method.
<li><i>Array</i> or <i>ArrayObject</i>: If the structure is composed of exactly 2
    offsets and these elements are {@link kTAG_TYPE kTAG_TYPE} and
    {@link kTAG_DATA kTAG_DATA}, it will be sent to the
    {@link UnserialiseData() UnserialiseData} method. If the above condition is not
    satisfied, the structure will be sent recursively to this method.
</ul>]]></long-description>
          <tag line="661" name="param" description="&amp;$theObject Object to encode." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="661" name="access" description="public"/>
          <tag line="661" name="uses" description="\UnserialiseData()" refers="\UnserialiseData()"/>
          <tag line="661" name="see" description="\kTAG_TYPE" refers="\kTAG_TYPE"/>
        </docblock>
        <argument line="661">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="814" package="MyWrapper\Persistence">
        <name>UnserialiseData</name>
        <full_name>UnserialiseData</full_name>
        <docblock line="814">
          <description><![CDATA[Unserialise provided data element.]]></description>
          <long-description><![CDATA[<p>This method should convert the provided structure into a custom data type compatible
with the current container.</p>

<p>This method is called by a public {@link UnserialiseObject() interface} which
traverses an object and provides this method with all elements that satisfy the
following conditions:</p>

<ul>
<li><i>{@link CDataType CDataType}</i>: All instances derived from this class are
    sent to this method.
<li><i>Array</i> or <i>ArrayObject</i>: If the structure is composed of exactly 2
    offsets and these elements are {@link kTAG_TYPE kTAG_TYPE} and
    {@link kTAG_DATA kTAG_DATA}, it will be sent to this method.
</ul>

<p>Derived concrete classes will implement this method to intercept all structures that
can be converted to a native data type compatible with the current container.</p>

<p>The elements to be converted are provided by reference, which means that they have to
be converted in place.</p>

<p>This class is abstract, so we force derived classes to implement this method.</p>]]></long-description>
          <tag line="814" name="param" description="&amp;$theElement Element to encode." type="\reference" variable="$theElement">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="814" name="access" description="public"/>
          <tag line="814" name="see" description="\kTAG_TYPE" refers="\kTAG_TYPE"/>
        </docblock>
        <argument line="814">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="840" package="MyWrapper\Persistence">
        <name>_Container</name>
        <full_name>_Container</full_name>
        <docblock line="840">
          <description><![CDATA[Get container reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to retrieve a reference to the native container member, this
can be useful when the native {@link Container() container} is not an object passed
by reference.</p>]]></long-description>
          <tag line="840" name="access" description="protected"/>
          <tag line="840" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="" line="873" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="873">
          <description><![CDATA[Commit provided object.]]></description>
          <long-description><![CDATA[<p>Derived classes must implement this method to actually store the provided object in
the container, the method expects the same parameters as the public
{@link Commit() interface}, except that in this method these are passed by reference.</p>

<p>The method should return the object's key within the container or raise an exception
if the operation was not successful.</p>]]></long-description>
          <tag line="873" name="param" description="&amp;$theObject Object to commit." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="873" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="873" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="873" name="access" description="protected"/>
          <tag line="873" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="873">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="873">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="873">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="" line="895" package="MyWrapper\Persistence">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="895">
          <description><![CDATA[Load object.]]></description>
          <long-description><![CDATA[<p>Derived classes must implement this method to actually retrieve the provided object
from the container, the method expects the same parameters as the public
{@link Load() interface}, except that in this method these are passed by reference.</p>

<p>The method should return the found object or <i>NULL</i> if not found.</p>]]></long-description>
          <tag line="895" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="895" name="param" description="&amp;$theModifiers Load modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="895" name="access" description="protected"/>
          <tag line="895" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="895">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="895">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="" line="917" package="MyWrapper\Persistence">
        <name>_Delete</name>
        <full_name>_Delete</full_name>
        <docblock line="917">
          <description><![CDATA[Load object.]]></description>
          <long-description><![CDATA[<p>Derived classes must implement this method to actually remove the object from the
container, the method expects the same parameters as the public
{@link Delete() interface}, except that in this method these are passed by reference.</p>

<p>The method should return the removed object or <i>NULL</i> if not found.</p>]]></long-description>
          <tag line="917" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="917" name="param" description="&amp;$theModifiers Delete modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="917" name="access" description="protected"/>
          <tag line="917" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="917">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="917">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="975" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="975">
          <description><![CDATA[Prepare before a {@link _Commit() commit}.]]></description>
          <long-description><![CDATA[<p>This method will be called before the {@link _Commit() store} operation, its duty is
to prepare the object and check the parameters, please refer to {@link Commit() this}
documentation for a reference of the method's parameters. Note that in this method
all three parameters are passed by reference.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>Ensure the current object has a container.
<li>Ensure the identifier is provided if the operation is not an
    {@link kFLAG_PERSIST_INSERT insert}.
<li>Ensure the method has the correct options.
<li>Get the {@link CPersistentObject::_IsEncoded() encoded} status
    {@link kFLAG_STATE_ENCODED flag} from the object and pass it to the current
    container.
<li>{@link UnserialiseObject() Unserialise} the object if
    {@link kFLAG_STATE_ENCODED necessary}.
<li>{@link UnserialiseData() Unserialise} the identifier if
    {@link kFLAG_STATE_ENCODED necessary}.
</ul>

<p>In derived classes you should always call the parent method, remember to check this
method to determine whether to implement your custom changes before or after calling
this method.</p>]]></long-description>
          <tag line="975" name="param" description="&amp;$theObject Object or data." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="975" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="975" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="975" name="access" description="protected"/>
          <tag line="975" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="975" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="975" name="uses" description="\UnserialiseObject()" refers="\UnserialiseObject()"/>
          <tag line="975" name="uses" description="\UnserialiseData()" refers="\UnserialiseData()"/>
          <tag line="975" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="975">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="975">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="975">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1070" package="MyWrapper\Persistence">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="1070">
          <description><![CDATA[Prepare before a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to ensure that the parameters provided to the
{@link _Load() find} operation are valid.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>Ensure the current object has a container.
<li>Ensure the identifier is provided.
<li>{@link CDataType::SerialiseData() Serialise} the identifier if
    {@link kFLAG_STATE_ENCODED necessary}.
</ul>

<p>In derived classes you should always call the parent method, remember to check this
method to determine whether to implement your custom changes before or after calling
this method.</p>]]></long-description>
          <tag line="1070" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1070" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1070" name="access" description="protected"/>
          <tag line="1070" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="1070" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="1070" name="uses" description="\UnserialiseData()" refers="\UnserialiseData()"/>
          <tag line="1070" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="1070">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1070">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1134" package="MyWrapper\Persistence">
        <name>_PrepareDelete</name>
        <full_name>_PrepareDelete</full_name>
        <docblock line="1134">
          <description><![CDATA[Prepare before a {@link _Delete() delete}.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to ensure that the parameters provided to the
{@link _Delete() delete} operation are valid.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>Ensure the current object has a container.
<li>Ensure the identifier is provided.
<li>{@link CDataType::SerialiseData() Serialise} the identifier if
    {@link kFLAG_STATE_ENCODED necessary}.
</ul>

<p>In derived classes you should always call the parent method, remember to check this
method to determine whether to implement your custom changes before or after calling
this method.</p>]]></long-description>
          <tag line="1134" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1134" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1134" name="access" description="protected"/>
          <tag line="1134" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="1134" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="1134" name="uses" description="\UnserialiseData()" refers="\UnserialiseData()"/>
          <tag line="1134" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="1134">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1134">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1197" package="MyWrapper\Persistence">
        <name>_FinishCommit</name>
        <full_name>_FinishCommit</full_name>
        <docblock line="1197">
          <description><![CDATA[Normalise after a {@link _Commit() store}.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to clean up or restore the object after the
{@link _Commit() store} operation.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>{@link CDataType::SerialiseObject() Serialise} the object if
    {@link kFLAG_STATE_ENCODED necessary}.
<li>{@link CDataType::SerialiseData() Serialise} the identifier if
    {@link kFLAG_STATE_ENCODED necessary}.
</ul>

<p>In derived classes you should always call the parent method, remember to check this
method to determine whether to implement your custom changes before or after calling
this method.</p>]]></long-description>
          <tag line="1197" name="param" description="&amp;$theObject Object or data." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1197" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1197" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1197" name="access" description="protected"/>
          <tag line="1197" name="uses" description="\CDataType::SerialiseObject()" refers="\CDataType::SerialiseObject()"/>
          <tag line="1197" name="uses" description="\CDataType::SerialiseData()" refers="\CDataType::SerialiseData()"/>
          <tag line="1197" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="1197">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1197">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1197">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1252" package="MyWrapper\Persistence">
        <name>_FinishLoad</name>
        <full_name>_FinishLoad</full_name>
        <docblock line="1252">
          <description><![CDATA[Normalise after a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to clean up or restore the object after the
{@link _Load() load} operation.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>{@link CDataType::SerialiseObject() Serialise} the object if
    {@link kFLAG_STATE_ENCODED necessary}.
<li>{@link CDataType::SerialiseData() Serialise} the identifier if
    {@link kFLAG_STATE_ENCODED necessary}.
</ul>

<p>In derived classes you should always call the parent method, remember to check this
method to determine whether to implement your custom changes before or after calling
this method.</p>]]></long-description>
          <tag line="1252" name="param" description="&amp;$theObject Object reference." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1252" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1252" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1252" name="access" description="protected"/>
          <tag line="1252" name="uses" description="\CDataType::SerialiseObject()" refers="\CDataType::SerialiseObject()"/>
          <tag line="1252" name="uses" description="\CDataType::SerialiseData()" refers="\CDataType::SerialiseData()"/>
          <tag line="1252" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="1252">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1252">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1252">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1304" package="MyWrapper\Persistence">
        <name>_FinishDelete</name>
        <full_name>_FinishDelete</full_name>
        <docblock line="1304">
          <description><![CDATA[Normalise after a store.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to clean up or restore the object after the
{@link _Delete() delete} operation.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>{@link CDataType::SerialiseData() Serialise} the identifier if
    {@link kFLAG_STATE_ENCODED necessary}.
</ul>

<p>In derived classes you should always call the parent method, remember to check this
method to determine whether to implement your custom changes before or after calling
this method.</p>]]></long-description>
          <tag line="1304" name="param" description="&amp;$theObject Object or data." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1304" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1304" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1304" name="access" description="protected"/>
          <tag line="1304" name="uses" description="\CDataType::SerialiseData()" refers="\CDataType::SerialiseData()"/>
          <tag line="1304" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="1304">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1304">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1304">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CDataset.php" hash="896099e00af8faa19261ea33f3167986" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Grid container.]]></description>
        <long-description><![CDATA[<p>This include file contains the file grid class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="66" package="MyWrapper\Persistence">
      <extends>CRelatedUnitObject</extends>
      <name>CDataset</name>
      <full_name>\CDataset</full_name>
      <docblock line="66">
        <description><![CDATA[Dataset object.]]></description>
        <long-description><![CDATA[<p>Besides the inherited properties. datasets have the following attributes:</p>

<ul>
<li><i>{@link Title() Title}</i>: The dataset {@link kTAG_TITLE title} represents the
    dataset name or identifier provided by the dataset creator, this attribute is used
    in the object's {@link LID() identifier}.
<li><i>{@link User() User}</i>: The dataset {@link kENTITY_USER user} represents the
    {@link kTAG_LID identifier} of the {@link CUser user} that created the dataset, this
    attribute is used in the object's {@link LID() identifier}.
<li><i>{@link Name() Name}</i>: The dataset {@link kTAG_NAME name} represents the name
    or label by which the dataset is referred to. Unlike the {@link Title() title} which
    has an identification purpose, this attribute has a documentation purpose and can be
    expressed in several languages.
<li><i>{@link Description() Description}</i>: The dataset
    {@link kTAG_DESCRIPTION description} represents a description or definition of the
    dataset, it can be expressed in several languages.
</ul>

<p>By default, the unique {@link _index() identifier} of the object is its
{@link Code() code}, which is also its {@link _id() id}.</p>

<p>Objects of this class require at least the {@link Code() code} {@link kTAG_CODE offset}
to have an {@link _IsInited() initialised} {@link kFLAG_STATE_INITED status}.</p>]]></long-description>
        <tag line="66" name="package" description="MyWrapper"/>
        <tag line="66" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="99">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentObject::__construct() overload} the constructor to initialise
the {@link _IsInited() inited} {@link kFLAG_STATE_INITED flag} if the
{@link Code() code} attribute is set.</p>]]></long-description>
          <tag line="99" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="99" name="access" description="public"/>
          <tag line="99" name="uses" description="\_IsInited" refers="\_IsInited"/>
          <tag line="99" name="see" description="\kTAG_CODE" refers="\kTAG_CODE"/>
        </docblock>
        <argument line="99">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="101">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="MyWrapper\Persistence">
        <name>GID</name>
        <full_name>GID</full_name>
        <docblock line="143">
          <description><![CDATA[Manage dataset global identifier.]]></description>
          <long-description><![CDATA[<p>The term global {@link kTAG_GID identifier} represents the un-hashed version of the
term local {@link kTAG_LID identifier}.</p>

<p>This value is set automatically by a protected {@link _PrepareCommit() method}, so
this method is read-only.</p>]]></long-description>
          <tag line="143" name="access" description="public"/>
          <tag line="143" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="see" description="\kTAG_GID" refers="\kTAG_GID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="MyWrapper\Persistence">
        <name>Title</name>
        <full_name>Title</full_name>
        <docblock line="174">
          <description><![CDATA[Manage title.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_TITLE title}, it uses the
standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_TITLE offset}.</p>

<p>The title represents the object's identifier provided by its creator, it should be
unique within all datasets created by the same user.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() ManageOffset} method, in which the first parameter
will be the constant {@link kTAG_TITLE kTAG_TITLE}.</p>]]></long-description>
          <tag line="174" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="174" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="174" name="access" description="public"/>
          <tag line="174" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="174" name="see" description="\kTAG_TITLE" refers="\kTAG_TITLE"/>
        </docblock>
        <argument line="174">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="174">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="213" package="MyWrapper\Persistence">
        <name>User</name>
        <full_name>User</full_name>
        <docblock line="213">
          <description><![CDATA[Manage title.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kENTITY_USER title}, it uses
the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kENTITY_USER offset}.</p>

<p>The user represents the object's creator, it should be provided either as an object
{@link kTAG_LID identifier} or as an object itself.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kENTITY_USER kENTITY_USER}.</p>

<p>In this class we feed the value to the
{@link CPersistentUnitObject::NormaliseRelatedObject() NormaliseRelatedObject} method
that will take care of handling object references.</p>]]></long-description>
          <tag line="213" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="213" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="213" name="access" description="public"/>
          <tag line="213" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="213" name="see" description="\kENTITY_USER" refers="\kENTITY_USER"/>
        </docblock>
        <argument line="213">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="213">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="276" package="MyWrapper\Persistence">
        <name>Name</name>
        <full_name>Name</full_name>
        <docblock line="276">
          <description><![CDATA[Manage name.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the dataset {@link kTAG_NAME name}, it manages an
array of structures with the following offsets:</p>

<ul>
<li><i>{@link kTAG_LANGUAGE kTAG_LANGUAGE}</i>: The name's language, this element
    represents the code of the language in which the next element is expressed in.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The dataset name or label.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The name or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theLanguage</b>: The name's language code:
 <ul>
    <li><i>NULL</i>: This value indicates that the name has no language, in general,
        when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the language code.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="276" name="param" description="Term name or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="276" name="param" description="Term name language code." type="mixed" variable="$theLanguage">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="276" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="276" name="access" description="public"/>
          <tag line="276" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="uses" description="\CAttribute::ManageTypedOffset()" refers="\CAttribute::ManageTypedOffset()"/>
          <tag line="276" name="see" description="\kTAG_NAME" refers="\kTAG_NAME"/>
        </docblock>
        <argument line="276">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$theLanguage</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="336" package="MyWrapper\Persistence">
        <name>Description</name>
        <full_name>Description</full_name>
        <docblock line="336">
          <description><![CDATA[Manage dataset description.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kTAG_DESCRIPTION description}, it
manages an array of structures with the following offsets:</p>

<ul>
<li><i>{@link kTAG_LANGUAGE kTAG_LANGUAGE}</i>: The description's language, this
    element represents the code of the language in which the next element is
    expressed in.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The dataset description or comment.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The description or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theLanguage</b>: The description's language code:
 <ul>
    <li><i>NULL</i>: This value indicates that the description has no language, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the language code.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="336" name="param" description="Term description or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="336" name="param" description="Term description language code." type="mixed" variable="$theLanguage">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="336" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="336" name="access" description="public"/>
          <tag line="336" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="336" name="uses" description="\CAttribute::ManageTypedOffset()" refers="\CAttribute::ManageTypedOffset()"/>
          <tag line="336" name="see" description="\kTAG_DESCRIPTION" refers="\kTAG_DESCRIPTION"/>
        </docblock>
        <argument line="336">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="336">
          <name>$theLanguage</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="336">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="375" package="MyWrapper\Persistence">
        <name>Domain</name>
        <full_name>Domain</full_name>
        <docblock line="375">
          <description><![CDATA[Manage domains.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_DOMAIN domains}, it uses
the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage the
list of domains.</p>

<p>Each element of this list should indicate a domain to which the current object
belongs to.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_CATEGORY kTAG_CATEGORY}.</p>]]></long-description>
          <tag line="375" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="375" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="375" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="375" name="access" description="public"/>
          <tag line="375" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="375" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="375" name="see" description="\kTAG_DOMAIN" refers="\kTAG_DOMAIN"/>
        </docblock>
        <argument line="375">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="412" package="MyWrapper\Persistence">
        <name>Category</name>
        <full_name>Category</full_name>
        <docblock line="412">
          <description><![CDATA[Manage categories.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_CATEGORY categories}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of categories.</p>

<p>Each element of this list should indicate a category to which the current object
belongs to.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_CATEGORY kTAG_CATEGORY}.</p>]]></long-description>
          <tag line="412" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="412" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="412" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="412" name="access" description="public"/>
          <tag line="412" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="412" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="412" name="see" description="\kTAG_CATEGORY" refers="\kTAG_CATEGORY"/>
        </docblock>
        <argument line="412">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="412">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="412">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="455" package="MyWrapper\Persistence">
        <name>Created</name>
        <full_name>Created</full_name>
        <docblock line="455">
          <description><![CDATA[Manage object creation time stamp.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object {@link kTAG_CREATED creation}
time-stamp, it uses the standard accessor {@link CAttribute::ManageOffset() method}
to manage the {@link kTAG_MODIFIED offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="455" name="param" description="Object creation date." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="455" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="455" name="access" description="public"/>
          <tag line="455" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="455" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="455" name="see" description="\kTAG_CREATED" refers="\kTAG_CREATED"/>
        </docblock>
        <argument line="455">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="455">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="498" package="MyWrapper\Persistence">
        <name>Modified</name>
        <full_name>Modified</full_name>
        <docblock line="498">
          <description><![CDATA[Manage object last modification time stamp.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object last {@link kTAG_MODIFIED modification}
time-stamp, or the date in which the last modification was made on the object, it
uses the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_MODIFIED offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="498" name="param" description="Object last modification date." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="498" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="498" name="access" description="public"/>
          <tag line="498" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="498" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="498" name="see" description="\kTAG_MODIFIED" refers="\kTAG_MODIFIED"/>
        </docblock>
        <argument line="498">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="563" package="MyWrapper\Persistence">
        <name>StoreFile</name>
        <full_name>StoreFile</full_name>
        <docblock line="563">
          <description><![CDATA[Store a file.]]></description>
          <long-description><![CDATA[<p>This method can be used to store a file in a grid
{@link CMongoGridContainer container}, it will take care of adding a
{@link CDatasetFile::Dataset() reference} to the current dataset in the provided file
metadata {@link CDatasetFile record}.</p>

<p>This method accepts the following parameters:</p>

<ul>
<li><b>$theFile</b>: The file path or object (SplFileInfo).
<li><b>$theContainer</b>: The grid container in the form of a
    {@link CMongoGridContainer CMongoGridContainer} or a MongoGridFS; any other
    type will raise an exception.
<li><b>$theMetadata</b>: An array or preferably a {@link CDatasetFile CDatasetFile}
    record containing the file's metadata, which will be added to the MongoGridFS
    record under the "metadata" label. If the parameter is omitted, a
    {@link CDatasetFile CDatasetFile} record will be initialised with a reference to
    the current dataset.
<li><b>$theModifiers</b>: A bitfield containing the operation options, the only
    relevant flag is {@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED} which
    determines whether custom data types are to be encoded
    (set by default in this class).
</ul>

<p><b><i>The current dataset must have been {@link Commit() committed} before calling
this method, or an exception will be raised: no files can be saved from this class
without a valid dataset reference</i></b>.</p>

<p>The mnethod will return the newly created file reference ID.</p>]]></long-description>
          <tag line="563" name="param" description="File path." type="string" variable="$theFile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="563" name="param" description="File grid container." type="\CMongoGridContainer" variable="$theContainer">
            <type by_reference="false">\CMongoGridContainer</type>
          </tag>
          <tag line="563" name="param" description="File metadata." type="mixed" variable="$theMetadata">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="563" name="param" description="Operation modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="563" name="access" description="public"/>
          <tag line="563" name="return" description="" type="\CDatasetFile">
            <type by_reference="false">\CDatasetFile</type>
          </tag>
          <tag line="563" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="563" name="see" description="\kTAG_TITLE" refers="\kTAG_TITLE"/>
        </docblock>
        <argument line="563">
          <name>$theFile</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$theMetadata</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="564">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="642" package="MyWrapper\Persistence">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="642">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if {@link kTAG_CODE code} property is
set.</p>]]></long-description>
          <tag line="642" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="642" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="642" name="access" description="public"/>
        </docblock>
        <argument line="642">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="642">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="674" package="MyWrapper\Persistence">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="674">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if {@link kTAG_CODE code} property is
set.</p>]]></long-description>
          <tag line="674" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="674" name="access" description="public"/>
        </docblock>
        <argument line="674">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="718" package="MyWrapper\Persistence">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="718">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>We overload this method to enforce the {@link kFLAG_STATE_ENCODED encoded} modifier.</p>]]></long-description>
          <tag line="718" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="718" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="718" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="718" name="access" description="protected"/>
          <tag line="718" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="718" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="718">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="718">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="718">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="754" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="754">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentUnitObject::_PrepareCommit() overload} this method to
{@link Commit() commit} eventual object references stored as instances. We scan the
{@link User() user} references and process all elements stored as instances.</p>]]></long-description>
          <tag line="754" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="754" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="754" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="754" name="access" description="protected"/>
          <tag line="754" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="754" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="754">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="754">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="754">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="802" package="MyWrapper\Persistence">
        <name>_index</name>
        <full_name>_index</full_name>
        <docblock line="802">
          <description><![CDATA[Return the object's unique index.]]></description>
          <long-description><![CDATA[<p>In this class we build the object {@link kTAG_LID ID} by concatenating the dataset
dataset {@link User() creator} with the {@link Title() title} separated by the
{@link kTOKEN_INDEX_SEPARATOR kTOKEN_INDEX_SEPARATOR} token.</p>]]></long-description>
          <tag line="802" name="access" description="protected"/>
          <tag line="802" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CDatasetFile.php" hash="4ee007231705f01b97ce9cde3a8d3cbf" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="67" package="MyWrapper\Traits">
      <extends>CArrayObject</extends>
      <name>CDatasetFile</name>
      <full_name>\CDatasetFile</full_name>
      <docblock line="67">
        <description><![CDATA[Dataset file.]]></description>
        <long-description><![CDATA[<p>This class implements a dataset file, it wraps the {@link CArrayObject parent} class
around a structure that records a dataset file's attributes.</p>

<p>In general instances of this class will be embedded in a {@link CDataset dataset} objects
to add lists of file references, the current class does not feature any persistence
functions, it only concentrates in managing a file reference as a set of properties:</p>

<ul>
<li><i>{@link File() File}</i>: This {@link kOFFSET_FILE property} defines a file, it
    represents the GridFS record identifier for the file.
<li><i>{@link Referenced() Referenced}</i>: This {@link kTAG_REFS property} holds the
    list of file {@link File() references}, this attribute all files that were generated
    taking the current file as a model. For instance, this list would contain all CSV
    files generated from all the workbooks of an Excel file.
<li><i>{@link Status() Status}</i>: This {@link kTAG_STATUS property} holds the list of
    states in which the current file is.
<li><i>{@link Kind() Kind}</i>: This {@link kTAG_KIND property} holds the list of kinds
    or types assigned to the file.
<li><i>{@link Column() Columns}</i>: This {@link kOFFSET_COLS property} holds the list
    of column headers and associated metadata structured as follows:
 <ul>
    <li><i>{@link kTAG_TAG kTAG_TAG}</i>: The {@link COntologyTag tag} associated with
        the data in the current column.
    <li><i>{@link Title() Title}</i>: The original header {@link kTAG_TITLE title}
        provided in the file and used for the annotation.
 </ul>
</ul>

<p>You should always instantiate this class from the {@link CDataset dataset} by using its
{@link CDataset::NewFile() static} method rather than instantiating the class on its own,
this is because this way it is guaranteed that the record points to an existing file.</p>]]></long-description>
        <tag line="67" name="package" description="MyWrapper"/>
        <tag line="67" name="subpackage" description="Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="MyWrapper\Traits">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="93">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor will instantiate an object either from an array, by loading all
corresponding properties, or as an empty object.</p>]]></long-description>
          <tag line="93" name="param" description="File structure." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="93" name="access" description="public"/>
        </docblock>
        <argument line="93">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="MyWrapper\Traits">
        <name>Dataset</name>
        <full_name>Dataset</full_name>
        <docblock line="149">
          <description><![CDATA[Manage dataset.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the file's {@link CDataset dataset}
{@link kTAG_LID reference} or the operation to be performed:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="149" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="149" name="access" description="public"/>
          <tag line="149" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="149" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="149" name="see" description="\kTAG_DATASET" refers="\kTAG_DATASET"/>
        </docblock>
        <argument line="149">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="187" package="MyWrapper\Traits">
        <name>Referenced</name>
        <full_name>Referenced</full_name>
        <docblock line="187">
          <description><![CDATA[Manage referenced file references.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_REFS references}, it uses
the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage the
list of referenced files.</p>

<p>Each element of this list should indicate a the eventual file that the system
generated according to the current file: for instance, an Excel file will generate
as many CSV files as it has non-empty worksheets.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_REFS kTAG_REFS}.</p>]]></long-description>
          <tag line="187" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="187" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="187" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="187" name="access" description="public"/>
          <tag line="187" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="187" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="187" name="see" description="\kTAG_REFS" refers="\kTAG_REFS"/>
        </docblock>
        <argument line="187">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="MyWrapper\Traits">
        <name>Status</name>
        <full_name>Status</full_name>
        <docblock line="224">
          <description><![CDATA[Manage the file status.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's list of {@link kTAG_STATUS states}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of status tags associated with the file.</p>

<p>Each element of this list should indicate an object state, status or quality. This
information indicates in which state the file is in.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_STATUS kTAG_STATUS}.</p>]]></long-description>
          <tag line="224" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="224" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="224" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="224" name="access" description="public"/>
          <tag line="224" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="224" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="224" name="see" description="\kTAG_STATUS" refers="\kTAG_STATUS"/>
        </docblock>
        <argument line="224">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="261" package="MyWrapper\Traits">
        <name>Kind</name>
        <full_name>Kind</full_name>
        <docblock line="261">
          <description><![CDATA[Manage the file kind.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's list of {@link kTAG_KIND kinds}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of kind or type tags associated with the file.</p>

<p>Each element of this list should indicate a kind or type associated with the object.
This information indicates what kind or type of file the current object is.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_KIND kTAG_KIND}.</p>]]></long-description>
          <tag line="261" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="261" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="261" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="261" name="access" description="public"/>
          <tag line="261" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="261" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="261" name="see" description="\kTAG_KIND" refers="\kTAG_KIND"/>
        </docblock>
        <argument line="261">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="261">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="261">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="328" package="MyWrapper\Traits">
        <name>Column</name>
        <full_name>Column</full_name>
        <docblock line="328">
          <description><![CDATA[Manage the file columns.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's list of {@link kOFFSET_COLS columns},
it uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to
manage each of the file's column metadata.</p>

<p>Each element of this list represents a column of the file and holds the following
information:</p>

<ul>
<li><i>{@link kTAG_TAG kTAG_TAG}</i>: This element holds the
    {@link kTAG_LID identifier} of the ontology {@link COntologyTag tag} associated
    with the data contained in the current file's column.
<li><i>{@link kTAG_TITLE kTAG_TITLE}</i>: This element holds the original header
    contents which were used to determine the column {@link COntologyTag tag}.
</ul>

<p>The method accepts three parameters:</p>

<ul>
<li><b>$theColumn</b>: The column index as an integer (zero based), or the operation
    to be performed on the whole list:
 <ul>
    <li><i>NULL</i>: Return all columns metadata.
    <li><i>FALSE</i>: Delete all columns metadata, the method will return the old
        value.
    <li><i>other</i>: Any other type of value will be interpreted as an integer
        indicating the column index (zero based) to be considered.
 </ul>
<li><b>$theTag</b>: The {@link kTAG_GID identifier} of the {@link COntologyTag tag}
    associated with the current column, or the operation to be performed:
 <ul>
    <li><i>NULL</i>: Return the full contents of the current column, the next
        parameter is ignored in this case.
    <li><i>FALSE</i>: Delete the current column, the next parameter is ignored in
        this case.
    <li><i>other</i>: Any other type of value will be interpreted as the
        {@link COntologyTag tag} {@link kTAG_GID identifier} associated with the
        column.
 </ul>
<li><b>$theTitle</b>: The original header contents used to annotate the column.
</ul>]]></long-description>
          <tag line="328" name="param" description="Column index." type="integer" variable="$theColumn">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="328" name="param" description="Column tag or operation." type="mixed" variable="$theTag">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="328" name="param" description="Column original header." type="string" variable="$theTitle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="access" description="public"/>
          <tag line="328" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="328" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="328" name="see" description="\kOFFSET_COLS" refers="\kOFFSET_COLS"/>
        </docblock>
        <argument line="328">
          <name>$theColumn</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$theTag</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$theTitle</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CDataType.php" hash="da1070d4f7d244620912a9086bae2337" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Data types.]]></description>
        <long-description><![CDATA[<p>This include file contains all default data type definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="83" package="MyWrapper\Framework">
      <extends>CArrayObject</extends>
      <name>CDataType</name>
      <full_name>\CDataType</full_name>
      <docblock line="83">
        <description><![CDATA[Data types ancestor.]]></description>
        <long-description><![CDATA[<p>This abstract class is the ancestor of data type classes in this library, classes derived
from this one can be used to wrap special data types in a standard class so that it can
be converted to a custom data type by {@link CDataWrapper wrappers} and
{@link CContainer containers}.</p>

<p>This may become necessary when {@link CPersistentObject::Commit() storing} objects in
persistent data {@link CDataWrapper stores}.</p>

<p>Current derived classes are:</p>

<ul>
<li><i>{@link kTYPE_INT32 kTYPE_INT32}</i>: 32 bit integer, this data type is
    generally available, but it might be useful to distinguish it from the
    {@link kTYPE_INT64 64} bit version.
<li><i>{@link kTYPE_INT64 kTYPE_INT64}</i>: 64 bit integer, this data type is
    supported only on 64 bit systems.
<li><i>{@link kTYPE_STAMP kTYPE_STAMP}</i>: Time stamp, we create this type to
    have a standard way of representing a time-stamp.
<li><i>{@link kTYPE_BINARY kTYPE_BINARY}</i>: Binary string, binary strings
    are supported by PHPO, but they must be encoded for transport over the network or
    for storing in databases.
<li><i>{@link kTYPE_REGEX kTYPE_REGEX}</i>: Regular expression query.
</ul>

<p>Other specialised data types are:</p>

<ul>
<li><i>{@link kTYPE_MongoId kTYPE_MongoId}</i>: MongoDB _id.
<li><i>{@link kTYPE_MongoCode kTYPE_MongoCode}</i>: MongoDB map/reduce
    javascript code.
</ul>

<p>The object derives from {@link CArrayObject CArrayObject} and holds the following default
offsets:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: Data type code, this element indicates the data
    type.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: This element holds the serialised data.
</ul>]]></long-description>
        <tag line="83" name="package" description="MyWrapper"/>
        <tag line="83" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="120">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>This class enforces a standard constructor that accepts one parameter which
represents the custom data contents, these will be stored in the
{@link kTAG_DATA kTAG_DATA} offset, this element must be filled.</p>

<p>The method will ensure that this parameter is not <i>NULL</i> and not an array; it
may be an ArrayObject, but it must then have the _toString() method.</p>

<p>No <i>NULL</i> concrete instance is allowed, all instances derived from this class
must have a value.</p>

<p>The @link kTAG_TYPE kTAG_TYPE} offset will be set by derived classes.</p>]]></long-description>
          <tag line="120" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="access" description="public"/>
          <tag line="120" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="158" package="MyWrapper\Framework">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="158">
          <description><![CDATA[Return string representation.]]></description>
          <long-description><![CDATA[<p>This method should return a string representation of the custom data type contents,
this method must be implemented for all concrete classes.</p>

<p>By default this method expects the custom data part to be convertable to string, if
this is not the case, overload this method.</p>]]></long-description>
          <tag line="158" name="access" description="public"/>
          <tag line="158" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="188" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="188">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>This method should return the custom data value in the closest type possible in PHP.</p>

<p>By default we return the string representation of the data, this is the last resort
if the actual data type cannot be represented in PHP; derived classes that can be
represented in PHP should overload this method.</p>]]></long-description>
          <tag line="188" name="access" description="public"/>
          <tag line="188" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="188" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="233" package="MyWrapper\Framework">
        <name>SerialiseObject</name>
        <full_name>SerialiseObject</full_name>
        <docblock line="233">
          <description><![CDATA[Serialise provided object.]]></description>
          <long-description><![CDATA[<p>This method will take an object and convert all data elements that are compatible
with one of the concrete classes derived from this one into a derived concrete
instance.</p>

<p>This method is useful when encoding objects in a format suitable for being
transmitted, or just after {@link CPersistentObject::Commit() committing} them to
a persistent {@link CContainer container}.</p>

<p>This method will ensure that the object contains data types compatible with PHP and
this library; it will be the duty of persistent {@link CContainer containers} to
convert these structures into custom data types compatible with their storage
engines.</p>

<p>The method will scan the provided data elements: array or ArrayObject elements will
be recursed, scalar elements will be sent to the public
{@link SerialiseData() SerialiseData} method that will take care of performing the
actual data conversion.</p>

<p>If an element of the provided structure is converted, it will <i>always</i> be an
object derived from this class, and all conversions will be performed on the object
itself, which means that you should expect the provided object to be modified.</p>]]></long-description>
          <tag line="233" name="param" description="&amp;$theObject Object to decode." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="233" name="static" description=""/>
        </docblock>
        <argument line="233">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="298" package="MyWrapper\Framework">
        <name>SerialiseElement</name>
        <full_name>SerialiseElement</full_name>
        <docblock line="298">
          <description><![CDATA[Serialise provided element.]]></description>
          <long-description><![CDATA[<p>This method can be used to enforce converting custom data types to a standard format
that can be serialised and transmitted through the network. This method accepts two
parameters: the data type and the value: depending on their combination, the method
will convert in place the data and the type.</p>]]></long-description>
          <tag line="298" name="param" description="&amp;$theElement Element to encode." type="\reference" variable="$theElement">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="298" name="param" description="&amp;$theType Element data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="298" name="static" description=""/>
        </docblock>
        <argument line="298">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="298">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="534" package="MyWrapper\Framework">
        <name>SerialiseData</name>
        <full_name>SerialiseData</full_name>
        <docblock line="534">
          <description><![CDATA[Serialise provided data element.]]></description>
          <long-description><![CDATA[<p>This method can be used to convert custom data types to a standard format that can
be serialised and transmitted through the network. This method is generally called
by {@link SerialiseObject() SerialiseObject} which passes each scalar element as a
reference to this method which should decide whether the provided element is to be
converted or not.</p>

<p>This method will check if the provided parameter corresponds to a custom data type
that needs to be converted, if so, it will convert it to an instance derived from
this class.</p>

<p>The following data types will be converted:</p>

<ul>
<li><i>MongoId</i>: We convert into a {@link CDataTypeMongoId CDataTypeMongoId}
    object.
<li><i>MongoCode</i>: We convert into a
    {@link CDataTypeMongoCode CDataTypeMongoCode} object.
<li><i>MongoDate</i>: We convert into a {@link CDataTypeStamp CDataTypeStamp}
    object.
<li><i>MongoRegex</i>: We convert into a
    {@link CDataTypeRegex CDataTypeRegex} object.
<li><i>MongoBinData</i>: We convert into a {@link CDataTypeBinary CDataTypeBinary}
    object.
<li><i>MongoInt32</i>: We convert into a {@link CDataTypeInt32 CDataTypeInt32}
    object.
<li><i>MongoInt64</i>: We convert into a {@link CDataTypeInt64 CDataTypeInt64}
    object.
</ul>]]></long-description>
          <tag line="534" name="param" description="&amp;$theElement Element to encode." type="\reference" variable="$theElement">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="534" name="static" description=""/>
        </docblock>
        <argument line="534">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CDataTypeBinary.php" hash="dc418f83708eb16cae59f6cbed3b6401" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="57" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeBinary</name>
      <full_name>\CDataTypeBinary</full_name>
      <docblock line="57">
        <description><![CDATA[Binary string.]]></description>
        <long-description><![CDATA[<p>This class represents a binary string, the object records the following information in
its offsets:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_BINARY kTYPE_BINARY}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The following structure:
 <ul>
    <li><i>{@link kTYPE_BINARY_STRING kTYPE_BINARY_STRING}</i>: The binary string in
        hexadecimal.
    <li><i>{@link kTYPE_BINARY_TYPE kTYPE_BINARY_TYPE}</i>: The binary string
        type (integer):
     <ul>
        <li><i>1</i>: Function.
        <li><i>2</i>: Byte array (use as default).
        <li><i>3</i>: UUID.
        <li><i>5</i>: MD5.
        <li><i>128</i>: Custom.
     </ul>
 </ul>
</ul>]]></long-description>
        <tag line="57" name="package" description="MyWrapper"/>
        <tag line="57" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="86">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We overload the parent constructor to set the default
{@link kTYPE_BINARY offset} and to set the binary string into the
{@link kTAG_DATA kTAG_DATA} offset.</p>]]></long-description>
          <tag line="86" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="86" name="access" description="public"/>
          <tag line="86" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="125">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>This method will return the actual binary string.</p>]]></long-description>
          <tag line="125" name="access" description="public"/>
          <tag line="125" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="125" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="157" package="MyWrapper\Framework">
        <name>FromHex</name>
        <full_name>FromHex</full_name>
        <docblock line="157">
          <description><![CDATA[Create from hex.]]></description>
          <long-description><![CDATA[<p>This method will return an object created from the provided hexadecimal value.</p>]]></long-description>
          <tag line="157" name="param" description="Binary hexadecimal value." type="string" variable="$theHex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="access" description="public"/>
          <tag line="157" name="return" description="" type="\CDataTypeBinary">
            <type by_reference="false">\CDataTypeBinary</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$theHex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJzdV9tuGkkQfZ75ilIUyRh5B5so0srB2IBvSLbXwlhRnlAz02N6GaZJT4/BivwJ+w/7Mcl/bfUF5sKw3jx4E4UH1NStq6rrVBWt4/lk7rqNet2FOrRYu3dKJBk+zWmXxUQ8tRqsDX5EkgQCGrKYScZjD2WV+HDCEghZRMHnsSQsTkBO6IY48BBa403L4zYsJsyfwEKQuVJFa1pX2SaCp3EABMZaGhIpWPxgb3ZO5sSfkgfqXD99ROU5FZqapOMV41yQGV1wMV1pkFROuHCcaxZNOXQ8+Pb3lIfs61/QmnmJOvon/gMjwuPioa1VHqlI0H/nwNvfh+ZBY/9do7l/0EReQ6Xs6HU+6urKTz3PKWXTw2esFtww8Tpem5TosujEPk0kF4UyYbEfpQGtKJc5ETSWG1WTeDrPgn5OmaAjjkZrML3tDC9HV/3uoDP4NLr7437QO/PerHOhsvAGdj+sXelWFI/xx1wn6FzQBK9PypW2p33j4z+pL1HM5yIw7oY8ivgCJTCkkIsZ0SXOYmWZoR0ehgmVyaG9rJVGuphaEWsjvL6cRCyewnTYuRgNP92eZadnBbVDdE6nJ5EklvoZ1xooM+r2bzDwwo9nb4v5086wk51y5rMIMNTUl6mgyltn7euGtey20d1w0L+5qKLlbihk0uQGi29ClySgPpuRyHvpGpubEmXbFca+xAqAGoslfaBiV4eUi2l124GxcZ7G/qqXZcymYXafJMUOJMgT1NIEj7owSRrJ3aL8OyN/f98/LTLeG8b16fsi/aD5u+H0UoTIzLNONqyX69P68P3druGa2i51CKBLSeMgR3e/uI7zwxsZduTORb+3lfu/dS/XAdd5lWSg5bozGmlYK8BVRea8RmgqLEe1QrQOfdNUGJF2RHuKrFkfsdPhsIs4CQoteeUwFyA5YFvTXAsFrVnVnUwHfAaC8zunVm4KyEJy0cpm27LWMl8RDFjsMGNLGujcvUUrqqTVUNSgggB/5RSIj/MogXk6jpifkeVE8EUCZ0ufzlUnUNSG6xgxCG1/gNy71WB1FxzBzf3VFey6jgJRo6G/oEeiqCJ53krEsA4Pq23i3EI8Ztau1HOYCbS28FZtSb+1TVLuKKqvB8he8RW0tS3iKrN76kGa2JNrUDNvsptzRau7zjOoqPKR/Awt4/a+e9Xvga6U/s3wbHDe6Z394u3jkUQprQzq9TvHgOKOEGtYgfYjA5fepWYUV+sAFgyrXxhZBXiCqwWJygv8dljCiVUOsRHJ7waq9qxmEWkt1dbsEV2yRCY12MGSb6JPO6rIUdKBY7AkjcUMLxcFvCjxVdIRFEdHba18CGoGo9nL+s7eS/ofSvoWYDanPwO07oadIUJrA1W/KqzOBZ9d0uUPAlZPUDWNQ3RC1eDLsCLx6i+Jr1UDo6tntuCPLEBKbs0uo9XOTgNFFaRq+DZ8uyX+m/Z2xJZ2zS0Itck2Iw8PG+OTx7iFSLU0mKaRjb3ADN3/hOcSoFc3Kc4GWg3TDl4bTEwXuLREIWoHZi4XCqMEXhuUpyvV1aTK/RsF3OO2+w8Ug3fe</source>
  </file>
  <file path="classes/CDataTypeInt32.php" hash="11280327fab9c9bdfedba1fee6314216" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="43" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeInt32</name>
      <full_name>\CDataTypeInt32</full_name>
      <docblock line="43">
        <description><![CDATA[32 bit signed integer.]]></description>
        <long-description><![CDATA[<p>This class represents a 32 bit signed integer, the object is structured as follows:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_INT32 kTYPE_INT32}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: An integer representing the integer :-)
</ul>]]></long-description>
        <tag line="43" name="package" description="MyWrapper"/>
        <tag line="43" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>In this class we store {@link kTYPE_INT32 kTYPE_INT32} in the
{@link kTAG_TYPE kTAG_TYPE} offset and the integer in the
{@link kTAG_DATA kTAG_DATA} offset.</p>

<p>The method will check if the provided data (converted to string) is numeric, if this
is not the case, it will raise an exception. This is to handle miscellaneous objects.</p>]]></long-description>
          <tag line="75" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="75" name="access" description="public"/>
          <tag line="75" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="124">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>In this class we return the integer value, since PHP handles it.</p>]]></long-description>
          <tag line="124" name="access" description="public"/>
          <tag line="124" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="124" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVtFu2zYUfZa+4jYYUNtwpcR5c203qqOmBpzWUJwOfRJoibY5y5RKUnGDIJ+wf9jHbP+1S0qy5cXJ0Advw/wQKOS9l+denXOo3rtsmdm222rZ0IIeGwwviSLT+4yOuDrv9Fw2gCghUkJM54wzxVLuYKiOni6ZhDlLKEQpV4RxCWpJn4RDOofe7Enh2QA2SxYtYSNIpjOxmEnVpYlIcx4DAckWnMZw3oEZU8C4ogsqSgDWRUaiFVlQ6/r+ZyySUWFWZT6rNj4IsqabVKyqDJKrZSos65olqxQ8B/74bZXO2e+/Qm/tSP0YXUQLRoSTisXApNxRIbEN68w5PYXOmXt67nZOzzq45+rB9Y/z00cf/LXqO/tDdfBdHo57UuE4oIuJGHJ4PKJSpWKPLIxHSR7TA6TJiKBcPeGOdMyYBf2WM0HDFIs2YDXxph/D8eh94AVfw5vPt8HQd062o9BTOIHm2y2UkjwllfY5VOAqjhU0E1QiDInEO5jUNljT2S80QjJKkErkkcoFRhCUQpok6UZ2y8q9PDEE6iVsgMJ6uEgYX8Fq6l2F068Tf/f0qFXWRSRmJlIRrsy722ZgTDj6NEVItedH55nil97U2z2VxT1e9bBrk/GF6afa6L5pGtxuAfzHFebaxSD3WQn0u6I8ri3bD7Zl/evaQRPwrkbDZ3f/McXYFtjWUYaBlVtWGBpWaaYe6sw6Rmu6LUvLD6vDqOA0I6q8HBy9XG7VjB82FLRlUPgb5iNjNXFNhRdkhRfPXFIFBG+SOs+fyf6LbsrsHVatzzXF6yOGDUsSiJY0WgGbF/4l0jsWow/EyHFo4MTx2lD4v0q1S6DUmtoweL6mgkXtIo1JU1ivp6q4O4mkuKmKEwRhkiJ8VFBEM3P1lj4qdd0lNoY+umYyoklCOE1zWZpTbcQoYZQoRn2nsXnlP+FBWon6+shx3muDuZZAIrRuCVk+S1i0W1ZLge4GfoVFr7q2VYTBPOeRue1rdGtAdRb04dPteAxN29Lad13zB4YEu6ysv8rSd0YZUmx1u4drosWjjeyqjVMSl/1vK7B5A6cVlnPH5LhA06heyq6aBmfQ6Qkx+WZQEOCG4plbUrX3SGkQPBeuWdSGRsm6Znl0BfoREPEXkrC4Gr9epYmkuqSZNXC6geF23g04GfG7bcZJ265EDLDyg+BzgKi+eOPRZTjxAu/an/rBXsy1f3PjXfmmj9Ak1LeJEOS+Aa/1MF5Df7A3mbc6BgG/ungF/f7ARqymgWH9pf0XTH1y+348GoLRMr4jP/jgDf3/ucEjJ3J6sKnje3tA8fOHF65ncLzg7aKIrVuxSWnjVxZ+2MHk46T0NHQ49ZIhwUVZy7jaD1uUObXR1DN6sMpKNZ3W5Xy1J2cthEfzOm1D/0OfO6gD+93A/hPshX1/</source>
  </file>
  <file path="classes/CDataTypeInt64.php" hash="a8139ca2f4e6a66b2de9f8cf7b7c802f" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="45" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeInt64</name>
      <full_name>\CDataTypeInt64</full_name>
      <docblock line="45">
        <description><![CDATA[64 bit signed integer.]]></description>
        <long-description><![CDATA[<p>This class represents a 64 bit signed integer, the object is structured as follows:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_INT64 kTYPE_INT64}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: A string representing the integer.
</ul>

<p>This class is necessary, because to date PHP doesn't handle 64 bit integers.</p>]]></long-description>
        <tag line="45" name="package" description="MyWrapper"/>
        <tag line="45" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="80">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>In this class we store {@link kTYPE_INT64 kTYPE_INT64} in the
{@link kTAG_TYPE kTAG_TYPE} offset and the integer in the
{@link kTAG_DATA kTAG_DATA} offset.</p>

<p>The method will check if the provided data (converted to string) is numeric, if this
is not the case, it will raise an exception. This is to handle miscellaneous objects.</p>

<p>The number will be stored in the {@link kTAG_DATA kTAG_DATA} offset as an integer, if
the current system is 64 bits.</p>]]></long-description>
          <tag line="80" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="80" name="access" description="public"/>
          <tag line="80" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="131">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>In this class we return the integer value, if PHP handles 8 byte integers, or we call
the {@link CDataType::value() parent} method.</p>]]></long-description>
          <tag line="131" name="access" description="public"/>
          <tag line="131" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="131" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVl1u4zYQfpZOMRsUiBO4dpIuFoVjO9E62sSAs2s4zhbbF4GWaJu1THlJKl5jkSP0Dj1Me68OKUqWEif9AdIWzUMgkzPDjzPzfcP22Wq+ct3m4aELh9Bm3d4FUWS8WdE+V29et5usC2FMpISIThlniiW8gabaejxnEqYsphAmXBHGJag5fWQOyRTak0eBJ11Yz1k4h7UgK+2JwYyrDk1EkvIICEg24zSCN69hwhQwruiMCgvAOV+RcEFm1Lne/IBBVlSYVZlO8o13gizpOhGL3IOkap4Ix7lm8SIBrwG//bJIpuzXn6G9bEj9GZ6HM0ZEIxGzrnG5o0LiNZzjxtERnBw3j75rnhwdn+BeUyeu8zJ/+uidf4flnWpSG1jL3XaPIrwM6Cwjpjk8HlKpElFpFsbDOI3ojqZZEUG5etQ7smHSLOjnlAkaJBi0BouhN74KBv23I2/0Kbj5cDvq+Y29IhU6C3twcFpAsc1jW6naQxmu7FhBV4JKhCGx8XY61Q3WZPITDbEZJUgl0lClAi0IUiGJ42QtWzZyO41NA7Vj1kVifT2PGV/AYuxdBuNPQ3/7da9Z1kIkJidSEa5M7QoPtAn678cIqfR933gi+IU39rZfNrinsTI+215S/9C3KeUD2s0M84PE4AenWE5JxKYOExqSVFJQCUREURheDSFKqOT7CuaER1jaKl3l3+Nr081Or/Y40C+K8qi07H51HedfZyJKinfZ7z25+4/xz3XAdV4kGRj50AkC06O673fdzHmJq+lrOZrMGB36GUOYbj3TIA29bLdKYwTWFLQAUfgDHmGbaiKYCM+QFMfYVFIF2OFl3jzl/YCF1nuLVbN9SXEYRbBmcQzhnIYLYNNMDUVyxyJUFSQYgRpmHIeQwt/IuYzHB4aU6ZIKFtYzNyZNYL2eqGwSE0lxU2UnCMKQtYQjg0K6MoPcqrLUcS11l0yGNI4Jp0kqrdTJKmw8doIXN0EnNsmRzcOfyIGWSkRRSCqbmsgGcCrMGJAbqehSA8uUpAQANQQ1AmF+oZHpuW/QUUuBnoYpYlmapJUcSKilC1bpJGbhdlnNBYo1+Hky9GrTdTIzmKY8NI+XUr/XID8LOvD+djCAA9fR4tNsmn/QI5iRfJLlXnoEWpNsq9XaHRMnFurYNtogIZEtQBGBTWuYlcAWHp2jDE0t74ptNA3OoNMZYvLbbpb9G4pnFl1dr7DCIHjKXJewDjUt99o8uOn/6EMbvseTzjIc7gM1AGhBzZb5wELNL3kPeMOPJGZRXi69SmNJdRRTG5w5a+gV9anBXp/fFR57dXd7zsIfjT6MENZHb9C/CIbeyLv2x/6oYnPt39x4l765d2AcyttECLKpwb5O3j50upVMnmobBPzq/BV0Ol0XsZoL9MpF/i9MoeHt20G/B4Z4WCR/9M7r+f/ziYQ9kdKdl3r5YTSi+PrjmUwbHM8MI5HZlmeHcTHyrR9RmQJLpNRkowojWYdEaP8Q1aVQSiuzxSOo1TKxagdWf+7tcHlOB+HcQjJi+peV0R5YlcCrygMw03FZka+KfnQ7WkA0DS2Ukl6UZeiyIkOWkBknDR+1eNgIuchaeKfVpsgdLIFtzXSHumZh15MT992zrvs7x+v/Zg==</source>
  </file>
  <file path="classes/CDataTypeMongoCode.php" hash="ed0cc00a19f255fd13eb149c4a16853e" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="47" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeMongoCode</name>
      <full_name>\CDataTypeMongoCode</full_name>
      <docblock line="47">
        <description><![CDATA[Time-stamp.]]></description>
        <long-description><![CDATA[<p>This class represents a MongoCode object, it is structured as follows:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_MongoCode kTYPE_MongoCode}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The following structure:
 <ul>
    <li><i>{@link kOBJ_TYPE_CODE_SRC kOBJ_TYPE_CODE_SRC}</i>: The javascript source.
    <li><i>{@link OBJ_TYPE_CODE_SCOPE OBJ_TYPE_CODE_SCOPE}</i>: The key/values list.
 </ul>
</ul>]]></long-description>
        <tag line="47" name="package" description="MyWrapper"/>
        <tag line="47" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="74">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>In this class we can only instantiate such an object from a MongoCode object.</p>]]></long-description>
          <tag line="74" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="74" name="access" description="public"/>
          <tag line="74" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="123" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="123">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>In this class we return the MongoCode object.</p>]]></long-description>
          <tag line="123" name="access" description="public"/>
          <tag line="123" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="123" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVuFu4kYQ/m0/xSSKdBxK7CT9lwKH43CUCkJkSKtTdbIWs4Q9jNe3a4egUx6h73APc32vzq6NMcE56X7QVvUPZHZmvv1mduZbN97F89g07XrdhDo0WMu9IQkZr2M64NEDd/mUNmzWgiAkUsKUzljEEsYjC91VxHjOJMxYSCHgUUJYJCGZ0z134DNoTCrBJy1YzVkwh5UgsYpmUgFnCETwNJoCgSIA+OQTDZJ8f6Mdk2BBHqgxWP+O8TEVelWmk43hvSBLuuJisYkgaTLnwjAGLFxwcCz46+uCz9i3P6GxtKR6DdrBAyPC4uKhpUMeqZCYhXFhnZ/D5YV9/pN9eX5xiTZb1a55mEdtXfnUS5b9klp4opWu+yCH4Z0VRbeHEwVUJlzstAuLgjDFk9xvm5gIGiV73SMtXWlBP6dMUJ8jaA0Wd874F7/fu/Yc74M/Gt57bsc6LsqhqnAMb38uqIzZkp7JhCzjHTLZXoLGgkrcW1b02imwBNBVJiINklRQbEhseh6GfCWvcrBGGupeaYSshWP0pR2yaAGLsdP1xx/uOtu3ZzVPV7i5zh0JRYk+oyICffwthRf/n61XNrlxxs72rbRJxpNFD1v+irNRMH6JNrz+VRP13eFNxx95bsVSCf8TeSQyECxOQPJUBNSqAH0B4A6xIhVrJdgFXduPJEyphJBJPe9I2c44Fy8/LgG2mZ34/twAfUpoNC2ZzC+mYfzbA47PwOn23Fet/9hMmwaYxkGKgch1w/f1PKgercrMOERqKi1DCQSiQy+bRkaS/AKz1HJu0hdTrhYrtBO806JwjWK2DZIpXmPKoGUDZoIvK6+uDSp2LnYmLNkTneosT1AEVfMpXU9RN5cwxX+lABKgnkqI00nIgu1yMhcoRdB5CmisBFOt2qaRucEsjQJ9CZcqXIPNXtCE2/t+H96ahmp329Y/4JIwLPR4E6WEPHfJTFdX1Ziouzg5JbQ5DRabZLJVNqvB0TYiq2NA8UNhWzDkZBg6OYjoCtwiwRoc9yKUBzbVoMen5qZRABYdzxt6fu/2N6ffu/HvHM8ZdMYdb8dn0BmNnG4nEyAdUDYTIci6Bm8UszfQbJUSw9SUD+Z01D6CZrO1m2ifk+n2nLPlE9U6Zy0+m0majCjWqbgMTvf0XlfulQil7KcbchU6XSJ61goQbZsTPlUavBMhAx5TnaGJKT2DOrfyyf8XxPDu/rrfc0Hfdr1bPNX3jtv5nwujvgYrkzq8JnoUPxgiPWSgeXxHE0Xmqz7kvqN5exIG7TxQ6+APi5pmVXuhXl2a7KrNyTSTup3J6u5MViFaOR2lOEUeqG0K4Y+qsftYjBlsvKpm7WMuHZqgFo58yPK6qi4y9cJrXyjoY75rmX8Da6OLhw==</source>
  </file>
  <file path="classes/CDataTypeMongoId.php" hash="8487a34e221cc7001014f939a50323c6" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="43" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeMongoId</name>
      <full_name>\CDataTypeMongoId</full_name>
      <docblock line="43">
        <description><![CDATA[Binary string.]]></description>
        <long-description><![CDATA[<p>This class represents a MongoId object:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_MongoId kTYPE_MongoId}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The HEX string.
</ul>]]></long-description>
        <tag line="43" name="package" description="MyWrapper"/>
        <tag line="43" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="72">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We overload the parent constructor to set the default
{@link kTYPE_MongoId offset} and to set the HEX string into the
{@link kTAG_DATA kTAG_DATA} offset.</p>]]></long-description>
          <tag line="72" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="72" name="access" description="public"/>
          <tag line="72" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="117" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="117">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>In this class we return the MongoId object.</p>]]></long-description>
          <tag line="117" name="access" description="public"/>
          <tag line="117" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="117" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVt1S2kAUvt48xRnHC2BsovaOIhoRlRm0DuJYr5glLLAl7qabjeg4PELfoQ/TvlfPboAEiBde0HbKBZPs+T/n+86mdhyNI8fxKhUHKlDj9cYZ1bT7ErErKUayNah5vA5BSOMYBmzIBddcCheVjX53zGMY8pBBIIWmXMSgx2xDHeQQav0C1/06TMc8GMNU0cjYojtrbJxTJRMxAApzdZD9ryzQ89jkJKLBhI4YuXq5R+uIKXsaJ/2F4FzRRzaVarKwoIkeS0XIFQ8nEnwXfv2YyCH/+R1qj25sHoOTYMSpcqUa1a3JE1MxVkAO3P19ODzw9j96h/sHhyjzTNeOtvMzoQt/lbxkvZ8ujrJQccPFdrJOW2KB4YuAxVqqFaBwEYTJgBUAJqKKCb2Bm9i1fVbsW8IV60l0WoLJjd+97LVbpx2/89C7/XzXaTTdnWUvTBN2oPxpmcopF1S9QKwVF6OVfNJwikWKxRg+3oBada5dS0KLhlrI60iR15OQiwlMuv5Fr/tw08yeZoYtVfRu64s1FdrOYWmBOr1FjJW3mftGgDO/62dPuQCXzS+5oqDmpUm+nxqekzZiHU7AnjUTg5zAeXUI+euwR/76F63Gm9I/hnWHgEO20gz0XCG9nsWQSgJdVBnZRmmmLGKIg96hlSKYUz1f6a45tqJ7BhJXYyjpYIXAi4SlAi0hZtpKkdE0CbW1LKSCHA5RdwYU933OLoM47g48x7NVH5v8mLvKMkUuINbhkT+zge3cLnoxgDYLNMEd9QgDfMsZ0AB3VwxR0g95kB3rsZLTGJrPAYvMcjKnnkNSNRgmIrBXXW5qJVjEgiO4vmu3oewQQyHPs39wifWGy/ZA68xdCPkwb3yUmWf5o0/BpouNVcKNh9zMfDdoGBaMZRkhFVWrxfmue2ubQS/u3/nxrrmuP9TTht8yNF/uwb21+Vp3b+ibse1BKZ1zeTUFh8zA1JLP/19YQTd3p+1WAyz2WtfdZufcbzT/83X0RMOEFRa1/U3UYTpRwhIVbB4ZXVsi99kIU4b3udU1+2P9w/FtisPJ3MzuiXeT3uZUKuNFT+Z+8tSEFeRfrCAfygh0MrPDcyzYiy9jxL1zXHd+A+FxAg4=</source>
  </file>
  <file path="classes/CDataTypeRegex.php" hash="752ce89bb8c3ca55a60ec49017016f86" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="45" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeRegex</name>
      <full_name>\CDataTypeRegex</full_name>
      <docblock line="45">
        <description><![CDATA[Regular expression.]]></description>
        <long-description><![CDATA[<p>This class is a wrapper around a regular expression string, its function is only to
indicate that the string is to be considered a regular expression pattern; its structure
is as follows:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_REGEX kTYPE_REGEX}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The regular expression string.
</ul>]]></long-description>
        <tag line="45" name="package" description="MyWrapper"/>
        <tag line="45" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="73">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>In this class we instantiate such an object from a MongoRegex object or from a
string.</p>]]></long-description>
          <tag line="73" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="112" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="112">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>In this class we return the MongoRegex object.</p>]]></long-description>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="112" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVc1uEzEQPnufYoQ4tFHZbcuthNAlhBIphSqkAk6RsztJTDb2YnubVlUfgXfgYeC9GHs3f0qCxCGA2EPk2DPf/Pj7xvUX+TgPgqhWC6AGddFovuKW9+5y7OIIb+uRaECScWMgxaGQwgolQzJ11r2xMDAUGUKipOVCGrBj3DAHNYT6YAN40IDZWCRjENM8wylKa4A7WI2jIuMa8DbXaIxHGHzGxFZx2XnOkwkfIbu8+6B5nqP2u6YYzA9eaz7FmdKTuQcv7Fhpxi5FNlEQh/Dj20QNxfevUJ+Gxi2T82QkuA6VHjW8yw1qF5udhMfHcHoSHT+NTo9PTukscv16vp/Phd761VZP1nsZ0hVut9tA2E/SZUc8J2KZoLFKr3FEyCQrUtzClZxruvgNypjQt1njl0Jo7CsCPYDJVdx70++0X3bj7qf++3fX3WYrfLRohevCIzh8tkilu8GjtaTKmLTgMCtZBFyrQqa0sYWCxmohR0cgiKbDQiae2eStZHYHVjlYIVORcItUGbe+vNLJmVkFA1+7ESlq3BEk59ails98FHIuElto9NiUJwVWWaZm5qyqo15knqv1TDRIuvfnmZATmPTii37v01VruXpwOj6jussULJfW02ThQTb9buui9XF1/RDuAH8V9+LlagV8Z99Cn25U5vv7Go6C8rbWeU9hLMp0ZTu4Dxj76+qkMRNftJs7T/+YJgMGAdtLMwi5xvp9TybH0m2VsX2U5spiTuCEDu2SysJpzhMkdNvVEQlwofIZkjiXtqagZ4fPnxUYajUlPV4qOVIlsaoDpaszDzln8jwEUZgoClNxi6kv+TFJ3jHRDeiChuAUUvq34sATGo4G8mKQiWS5bceaRA2t2wRzN1bcbhSw0mw5bFbafQDzWPAc3l53OnAYMMf9KPI/0ORZthiucy83lSuT8ujsbDsmDVGS0RKto3i6eIOr7ceuvU8aajg0aN8juS+mzdHaQPFgO6zd+DiCg7Kzh+sJBOwBXCWr2f8L6r66ftlpN8HPwPbbXqv7Om62/nOl3/CswK1F7V/kXaQ3UHopgc/jFyLXpa17ejfU/Csdwnnl6cX828r0aR0clj25ZxXWGucv1jhPBGcP/tICT/JtrxuxPXjRCH4CV0YKRQ==</source>
  </file>
  <file path="classes/CDataTypeStamp.php" hash="c679fb606714f0776a2637bce9819779" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="50" package="MyWrapper\Framework">
      <extends>CDataType</extends>
      <name>CDataTypeStamp</name>
      <full_name>\CDataTypeStamp</full_name>
      <docblock line="50">
        <description><![CDATA[Time-stamp.]]></description>
        <long-description><![CDATA[<p>This class represents a time-stamp which is equivalent to a unix timestamp, the object
records the following information in its offsets:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The constant
    {@link kTYPE_STAMP kTYPE_STAMP}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The following structure:
 <ul>
    <li><i>{@link kTYPE_STAMP_SEC kTYPE_STAMP_SEC}</i>: The number of seconds
        since midnight January 1st 1970 GMT, an integer.
    <li><i>{@link kTYPE_STAMP_USEC kTYPE_STAMP_USEC}</i>: The milliseconds part
        of the value, or zero.
 </ul>
</ul>]]></long-description>
        <tag line="50" name="package" description="MyWrapper"/>
        <tag line="50" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="92">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We overload the parent constructor to handle different types of data:</p>

<ul>
<li><i>float</i>: If the data is a float, we assume it is the result of
    <i>microtime( TRUE )</i> in which the integral part of the number represents the
    number of seconds since January 1st 1970 GMT, and the fractional part represents
    the microseconds.
<li><i>integer</i>: If the data is an integer, we assume it represents the number of
    seconds since January 1st 1970 GMT.
<li><i>MongoDate</i>: We use the object's elements.
<li><i>DateTime</i>: We get the date seconds count.
<li><i>other</i>: We assume the data is a date time string.
</ul>

<p>No <i>NULL</i> concrete instance is allowed, all instances derived from this class
must have a value.</p>]]></long-description>
          <tag line="92" name="param" description="Custom data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="access" description="public"/>
          <tag line="92" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="186" package="MyWrapper\Framework">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="186">
          <description><![CDATA[Return string representation.]]></description>
          <long-description><![CDATA[<p>This method should return a string representation of the custom data type contents,
this method must be implemented for all concrete classes.</p>

<p>By default this method expects the custom data part to be convertable to string, if
this is not the case, overload this method.</p>]]></long-description>
          <tag line="186" name="access" description="public"/>
          <tag line="186" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="222" package="MyWrapper\Framework">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="222">
          <description><![CDATA[Return data value.]]></description>
          <long-description><![CDATA[<p>This method will return a floating point number equivalent to the result of the
<i>microtime( TRUE )</i> function.</p>]]></long-description>
          <tag line="222" name="access" description="public"/>
          <tag line="222" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="222" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CDataWrapper.inc.php" hash="c775143c035dd75930196dd87ed40f57" package="Default">
    <constant namespace="" line="33" package="Default">
      <name>kAPI_OP_COUNT</name>
      <full_name>\kAPI_OP_COUNT</full_name>
      <value><![CDATA['@COUNT']]></value>
      <docblock line="33">
        <description><![CDATA[COUNT web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the COUNT web-service operation, used to return the
total number of elements satisfying a query.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="41" package="Default">
      <name>kAPI_OP_MATCH</name>
      <full_name>\kAPI_OP_MATCH</full_name>
      <value><![CDATA['@MATCH']]></value>
      <docblock line="41">
        <description><![CDATA[MATCH web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the MATCH web-service operation, used to retrieve objects
based on a list of possible matches.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="49" package="Default">
      <name>kAPI_OP_GET</name>
      <full_name>\kAPI_OP_GET</full_name>
      <value><![CDATA['@GET']]></value>
      <docblock line="49">
        <description><![CDATA[GET web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the GET web-service operation, used to retrieve objects
from the data store.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="57" package="Default">
      <name>kAPI_OP_SET</name>
      <full_name>\kAPI_OP_SET</full_name>
      <value><![CDATA['@SET']]></value>
      <docblock line="57">
        <description><![CDATA[SET web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the SET web-service operation, used to insert or update
objects in the data store.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="67" package="Default">
      <name>kAPI_OP_UPDATE</name>
      <full_name>\kAPI_OP_UPDATE</full_name>
      <value><![CDATA['@UPDATE']]></value>
      <docblock line="67">
        <description><![CDATA[UPDATE web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the UPDATE web-service operation, used to update existing
objects in the data store.</p>

<p>This option implies that the object already exists, or the operation should fail.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="77" package="Default">
      <name>kAPI_OP_INSERT</name>
      <full_name>\kAPI_OP_INSERT</full_name>
      <value><![CDATA['@INSERT']]></value>
      <docblock line="77">
        <description><![CDATA[INSERT web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the INSERT web-service operation, used to insert new
objects in the data store.</p>

<p>This option implies that the object does not exists, or the operation should fail.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="87" package="Default">
      <name>kAPI_OP_BATCH_INSERT</name>
      <full_name>\kAPI_OP_BATCH_INSERT</full_name>
      <value><![CDATA['@BINSERT']]></value>
      <docblock line="87">
        <description><![CDATA[BATCH-INSERT web-service.]]></description>
        <long-description><![CDATA[<p>This service is equivalent to the {@link kAPI_OP_INSERT kAPI_OP_INSERT} command, except
that in this case you provide a list ov objects to insert.</p>

<p>This option implies that the objects do not exists, or the operation should fail.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="97" package="Default">
      <name>kAPI_OP_MODIFY</name>
      <full_name>\kAPI_OP_MODIFY</full_name>
      <value><![CDATA['@MODIFY']]></value>
      <docblock line="97">
        <description><![CDATA[MODIFY web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the MODIFY web-service operation, used to modify partial
contents of objects in the data store.</p>

<p>This option implies that the object already exists, or the operation should fail.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="105" package="Default">
      <name>kAPI_OP_DEL</name>
      <full_name>\kAPI_OP_DEL</full_name>
      <value><![CDATA['@DELETE']]></value>
      <docblock line="105">
        <description><![CDATA[DELETE web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the DELETE web-service operation, used to delete objects
from the data store.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="118" package="Default">
      <name>kAPI_DATABASE</name>
      <full_name>\kAPI_DATABASE</full_name>
      <value><![CDATA[':@database']]></value>
      <docblock line="118">
        <description><![CDATA[Web-service database.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the database on which we want to operate.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="127" package="Default">
      <name>kAPI_CONTAINER</name>
      <full_name>\kAPI_CONTAINER</full_name>
      <value><![CDATA[':@container']]></value>
      <docblock line="127">
        <description><![CDATA[Web-service database container.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the database container on which we want to operate.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="138" package="Default">
      <name>kAPI_PAGE_START</name>
      <full_name>\kAPI_PAGE_START</full_name>
      <value><![CDATA[':@page-start']]></value>
      <docblock line="138">
        <description><![CDATA[Page start tag.]]></description>
        <long-description><![CDATA[<p>This tag is used to define the starting page or record number.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="147" package="Default">
      <name>kAPI_PAGE_LIMIT</name>
      <full_name>\kAPI_PAGE_LIMIT</full_name>
      <value><![CDATA[':@page-limit']]></value>
      <docblock line="147">
        <description><![CDATA[Page limit tag.]]></description>
        <long-description><![CDATA[<p>This tag is used to define the maximum number of elements to be returned by a request,
this should not be confused with the {@link kAPI_PAGE_COUNT count} tag which defines
the total number of elements affected by a request.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="156" package="Default">
      <name>kAPI_PAGE_COUNT</name>
      <full_name>\kAPI_PAGE_COUNT</full_name>
      <value><![CDATA[':@page-count']]></value>
      <docblock line="156">
        <description><![CDATA[Page count tag.]]></description>
        <long-description><![CDATA[<p>This tag is used to define the <i>actual</i> number of elements returned by a request,
this value will be smaller or equal {@link kAPI_PAGE_LIMIT limit} tag which defines
the maximum number of elements to be returned by a request.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="169" package="Default">
      <name>kAPI_DATA_QUERY</name>
      <full_name>\kAPI_DATA_QUERY</full_name>
      <value><![CDATA[':@query']]></value>
      <docblock line="169">
        <description><![CDATA[Data store filter.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the data store filter or query.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="179" package="Default">
      <name>kAPI_DATA_FIELD</name>
      <full_name>\kAPI_DATA_FIELD</full_name>
      <value><![CDATA[':@field']]></value>
      <docblock line="179">
        <description><![CDATA[Data store object fields.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the data store object elements that should be returned:
if omitted it is assumed that the whole object is to be returned.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="189" package="Default">
      <name>kAPI_DATA_SORT</name>
      <full_name>\kAPI_DATA_SORT</full_name>
      <value><![CDATA[':@sort']]></value>
      <docblock line="189">
        <description><![CDATA[Data store sort order.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the data store sort elements that should be used for
sorting the results.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="199" package="Default">
      <name>kAPI_DATA_OBJECT</name>
      <full_name>\kAPI_DATA_OBJECT</full_name>
      <value><![CDATA[':@object']]></value>
      <docblock line="199">
        <description><![CDATA[Data store object.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the data store object, this value is used when committing
data back to the data store.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="217" package="Default">
      <name>kAPI_DATA_OPTIONS</name>
      <full_name>\kAPI_DATA_OPTIONS</full_name>
      <value><![CDATA[':@options']]></value>
      <docblock line="217">
        <description><![CDATA[Data store options.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the data store options, this value is used to provide
additional options to the operation. It is structured as a key/value pair having the
following default key elements:</p>

<ul>
<li><i>{@link kAPI_OPT_SAFE kAPI_OPT_SAFE}</i>: Safe commit option.
<li><i>{@link kAPI_OPT_FSYNC kAPI_OPT_FSYNC}</i>: Safe and sync commit option.
<li><i>{@link kAPI_OPT_TIMEOUT kAPI_OPT_TIMEOUT}</i>: Operation timeout.
<li><i>{@link kAPI_OPT_SINGLE kAPI_OPT_SINGLE}</i>: Single object selection.
</ul>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="230" package="Default">
      <name>kAPI_DATA_PAGING</name>
      <full_name>\kAPI_DATA_PAGING</full_name>
      <value><![CDATA['_paging']]></value>
      <docblock line="230">
        <description><![CDATA[Paging.]]></description>
        <long-description><![CDATA[<p>This offset represents the collector tag for request paging parameters.</p>

<p><i>Note: this is a <b>reserved offset tag</b>.</i></p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="243" package="Default">
      <name>kAPI_OPT_SAFE</name>
      <full_name>\kAPI_OPT_SAFE</full_name>
      <value><![CDATA['safe']]></value>
      <docblock line="243">
        <description><![CDATA[SAFE option.]]></description>
        <long-description><![CDATA[<p>Can be a boolean or integer, defaults to FALSE. If FALSE, the program continues executing
without waiting for a database response. If TRUE, the program will wait for the database
response and throw an exception if the operation did not succeed.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="251" package="Default">
      <name>kAPI_OPT_FSYNC</name>
      <full_name>\kAPI_OPT_FSYNC</full_name>
      <value><![CDATA['fsync']]></value>
      <docblock line="251">
        <description><![CDATA[FSYNC option.]]></description>
        <long-description><![CDATA[<p>Boolean, defaults to FALSE. Forces the update to be synced to disk before returning
success. If TRUE, a safe update is implied and will override setting safe to FALSE.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="260" package="Default">
      <name>kAPI_OPT_TIMEOUT</name>
      <full_name>\kAPI_OPT_TIMEOUT</full_name>
      <value><![CDATA['timeout']]></value>
      <docblock line="260">
        <description><![CDATA[TIMEOUT option.]]></description>
        <long-description><![CDATA[<p>Integer, if "safe" is set, this sets how long (in milliseconds) for the client to wait
for a database response. If the database does not respond within the timeout period, an
exception will be thrown.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="268" package="Default">
      <name>kAPI_OPT_SINGLE</name>
      <full_name>\kAPI_OPT_SINGLE</full_name>
      <value><![CDATA['justOne']]></value>
      <docblock line="268">
        <description><![CDATA[SINGLE option.]]></description>
        <long-description><![CDATA[<p>Boolean, used in the {@link kAPI_OP_DEL delete} operation: if TRUE, only one object will
be deleted; if not, all matching objects will be deleted.</p>]]></long-description>
      </docblock>
    </constant>
    <source>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</source>
  </file>
  <file path="classes/CDataWrapper.php" hash="e939cfa6e5038d8552ffefc6345990a8" package="Default">
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name/>
      <docblock line="35">
        <description><![CDATA[Query definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the definitions of the {@link CQuery query} class.</p>]]></long-description>
      </docblock>
    </include>
    <include line="42" type="Require Once" package="Default">
      <name/>
      <docblock line="42">
        <description><![CDATA[Local definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions to this class.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="183" package="MyWrapper\Wrappers">
      <extends>CWrapper</extends>
      <name>CDataWrapper</name>
      <full_name>\CDataWrapper</full_name>
      <docblock line="183">
        <description><![CDATA[Data wrapper.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CWrapper ancestor} to implement a web service that wraps
a data store, it represents a framework for building concrete data store web-service
wrappers.</p>

<p>The class introduces a series of new operations and filter options that must be
implemented in derived classes which implement a specific data store.</p>

<p>These new functionalities require a new set of parameters:</p>

<ul>
<li><i>Data store parameters</i>: In order to refer to a specific data store we need
    two parameters:
 <ul>
    <li><i>{@link kAPI_DATABASE kAPI_DATABASE}</i>: <i>Database</i>, this parameter
        should indicate the database or equivalent concept where the data should be
        stored or retrieved. This parameter can be compared to the database part of an
        SQL table reference (<i>DATABASE</i>.TABLE).
    <li><i>{@link kAPI_CONTAINER kAPI_CONTAINER}</i>: <i>Container</i>, this parameter
        should indicate which container within the {@link kAPI_DATABASE database} should
        be used to store or retrieve the data. This parameter can be compared to the
        table part of an SQL table reference (DATABASE.<i>TABLE</i>).
 </ul>
<li><i>Paging parameters</i>: Query results may possibly return large amounts of data,
    this means that a paging mechanism should be set in place:
 <ul>
    <li><i>{@link kAPI_PAGE_START kAPI_PAGE_START}</i>: <i>Page start</i>, this
        parameter indicates the starting page or record.
    <li><i>{@link kAPI_PAGE_LIMIT kAPI_PAGE_LIMIT}</i>: <i>Page count</i>, this
        parameter indicates the maximum number of pages or records that the operation
        should return.
 </ul>
<li><i>Data parameters</i>: A query is formed by a series of sections, each of which is
    provided with the following parameters:
 <ul>
    <li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: <i>Query</i>, this parameter is
        used when retrieving data, it represents the filter or selection query; it must
        be expressed as one of the query {@link CQuery class} siblings. This parameter
        can be compared to the <i>WHERE</i> part of an SQL query.
    <li><i>{@link kAPI_DATA_FIELD kAPI_DATA_FIELD}</i>: <i>Fields</i>, this parameter
        indicates which elements of the selected objects we want returned. This
        parameter can be compared to the <i>SELECT</i> part of an SQL query.
    <li><i>{@link kAPI_DATA_SORT kAPI_DATA_SORT}</i>: <i>Sort fields</i>, this parameter
        indicates the sort order, the list of data elements by which the result is to
        be sorted. This parameter can be compared to the {@link kAPI_DATA_FIELD field}
        parameter or to the <i>ORDER BY</i> part of an SQL query.
    <li><i>{@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT}</i>: <i>Object data</i>, this
        parameter represents the data to be stored in the database, the type should
        ideally be abstracted from the data store engine. This parameter can be compared
        to the <i>VALUES</i> or <i>SET</i> part of an SQL query.
    <li><i>{@link kAPI_DATA_OPTIONS kAPI_DATA_OPTIONS}</i>: <i>Options</i>, this
        parameter represents the options governing data store and retrieve operations.
        In general it will cover the options when storing data and the actual
        implementation is the responsibility of derived classes:
     <ul>
        <li><i>{@link kAPI_OPT_SAFE kAPI_OPT_SAFE}</i>: Safe commit option, this is
            relevant only when committing data. If this option is <i>OFF</i>, it means
            we want to perform an asynchronous operation: the store operation will occur
            in the background and the program execution will not wait for it to finish;
            this also means that the client is responsible for checking whether the
            operation completed. If the option is <i>ON</i>, the operation is
            synchronous, which means that the program will wait for the store operation
            to complete.
        <li><i>{@link kAPI_OPT_FSYNC kAPI_OPT_FSYNC}</i>: File sync option, this tag is
            relevant only when committing data. If the option is <i>ON</i>, it means
            that the store operation will wait until the data is actually written to
            disk; which may not necessarily be the case even if the
            {@link kAPI_OPT_SAFE kAPI_OPT_SAFE} option was on. When this option is set,
            it is implied that the {@link kAPI_OPT_SAFE kAPI_OPT_SAFE} option is also
            on. If the option is <i>OFF</i>, it means that the data will be synched to
            disk only when the buffer is flushed.
        <li><i>{@link kAPI_OPT_TIMEOUT kAPI_OPT_TIMEOUT}</i>: Operation timeout, it
            represents the time in milliseconds beyond which the client will stop
            waiting for a response and expect a time out status.
        <li><i>{@link kAPI_OPT_SINGLE kAPI_OPT_SINGLE}</i>: First element, this option
            is used by the {@link kAPI_OP_DEL delete} operation: if <i>ON</i>, only the
            first object satisfying the {@link kAPI_DATA_QUERY query} will be deleted;
            if <i>OFF</i> all selected elements will be deleted.
        <li><i>{@link kAPI_OPT_SINGLE kAPI_OPT_SINGLE}</i>: First element, this option
     </ul>
 </ul>
</ul>

<p>The new operations declared in this class are:</p>

<ul>
<li><i>{@link kAPI_OP_COUNT kAPI_OP_COUNT}</i>: This operation requests a count, which
    is an integer indicating the total number of elements satisfying the provided
    {@link kAPI_DATA_QUERY query}. This number is not to be confused with the page
    element {@link kAPI_PAGE_COUNT count} described further.
<li><i>{@link kAPI_OP_MATCH kAPI_OP_MATCH}</i>: This operation is equivalent to a read
    query, except that it will try to match one {@link kAPI_DATA_QUERY query} clause at
    the time and will return a result on the first match.
<li><i>{@link kAPI_OP_GET kAPI_OP_GET}</i>: This operation is equivalent to a read
    query, it requests a list of objects satisfying the provided
    {@link kAPI_DATA_QUERY query}.
<li><i>{@link kAPI_OP_SET kAPI_OP_SET}</i>: This operation is equivalent to an insert
    for new objects or an update for existing objects, the operation will replace the
    object in the data store with the one provided in the
    {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter.
<li><i>{@link kAPI_OP_UPDATE kAPI_OP_UPDATE}</i>: This operation is equivalent to an
    update operation, this implies that the object must already exist in the data store
    and that the operation will replace the object in the data store with the one
    provided in the {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter.
<li><i>{@link kAPI_OP_INSERT kAPI_OP_INSERT}</i>: This operation is equivalent to an
    insert operation, this implies that the object must not already exist in the data
    store.
<li><i>{@link kAPI_OP_BATCH_INSERT kAPI_OP_BATCH_INSERT}</i>: This operation is
    equivalent to the {@link kAPI_OP_INSERT kAPI_OP_INSERT} operation, except that we
    provide here a list of objects to be inserted.
<li><i>{@link kAPI_OP_MODIFY kAPI_OP_MODIFY}</i>: This operation indicates that we want
    to modify the contents of an existing object and that the
    {@link kAPI_DATA_OBJECT provided} data represents only the changed elements.
<li><i>{@link kAPI_OP_DEL kAPI_OP_DEL}</i>: This operation indicates that we want to
    delete the elements matching the provided {@link kAPI_DATA_QUERY query}: the
    first one only, if the provided {@link kAPI_OPT_SINGLE kAPI_OPT_SINGLE} option is
    on, or all if off or omitted.
</ul>

<p>The added functionality implies that a series of additional sections will be returned in
the response:</p>

<ul>
<li><i>{@link kAPI_DATA_PAGING kAPI_DATA_PAGING}</i>: Paging section, this section will
    return the paging information of the current operation, besides the provided
    {@link kAPI_PAGE_START start} and {@link kAPI_PAGE_LIMIT limit} parameters, it will
    also feature:
 <ul>
    <li><i>{@link kAPI_PAGE_COUNT kAPI_PAGE_COUNT}</i>: This element will hold the
        actual number of returned objects, this number will be either equal or smaller
        than the provided {@link kAPI_PAGE_LIMIT limit} parameter.
 </ul>
</ul>]]></long-description>
        <tag line="183" name="package" description="MyWrapper"/>
        <tag line="183" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="208" package="MyWrapper\Wrappers">
        <name>_InitOptions</name>
        <full_name>_InitOptions</full_name>
        <docblock line="208">
          <description><![CDATA[Initialise options.]]></description>
          <long-description><![CDATA[<p>We overload this method to normalise the {@link kAPI_DATA_PAGING paging} options.</p>]]></long-description>
          <tag line="208" name="access" description="protected"/>
          <tag line="208" name="see" description="\kAPI_PAGE_START" refers="\kAPI_PAGE_START"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="289" package="MyWrapper\Wrappers">
        <name>_ParseRequest</name>
        <full_name>_ParseRequest</full_name>
        <docblock line="289">
          <description><![CDATA[Parse request.]]></description>
          <long-description><![CDATA[<p>This method should be used to parse the request, check the request elements and make
any necessary adjustments before the request is {@link _ValidateRequest() validated}.</p>

<p>This is also where the relevant request elements will be logged to the relative
response sections.</p>

<p>The method is called by the {@link __construct() constructor} and should be
overloaded to handle derived classes custom elements.</p>

<p>In this class we handle the paging request.</p>]]></long-description>
          <tag line="289" name="access" description="protected"/>
          <tag line="289" name="uses" description="\_ParseRequest()" refers="\_ParseRequest()"/>
          <tag line="289" name="uses" description="\_ParsePaging()" refers="\_ParsePaging()"/>
          <tag line="289" name="uses" description="\_ParseDatabase()" refers="\_ParseDatabase()"/>
          <tag line="289" name="uses" description="\_ParseContainer()" refers="\_ParseContainer()"/>
          <tag line="289" name="uses" description="\_ParseQuery()" refers="\_ParseQuery()"/>
          <tag line="289" name="uses" description="\_ParseFields()" refers="\_ParseFields()"/>
          <tag line="289" name="uses" description="\_ParseSort()" refers="\_ParseSort()"/>
          <tag line="289" name="uses" description="\_ParseObject()" refers="\_ParseObject()"/>
          <tag line="289" name="uses" description="\_ParseOptions()" refers="\_ParseOptions()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="330" package="MyWrapper\Wrappers">
        <name>_FormatRequest</name>
        <full_name>_FormatRequest</full_name>
        <docblock line="330">
          <description><![CDATA[Format request.]]></description>
          <long-description><![CDATA[<p>This method should perform any needed formatting before the request will be handled.</p>

<p>In this class we handle the parameters to be decoded</p>]]></long-description>
          <tag line="330" name="access" description="protected"/>
          <tag line="330" name="uses" description="\_FormatQuery()" refers="\_FormatQuery()"/>
          <tag line="330" name="uses" description="\_FormatFields()" refers="\_FormatFields()"/>
          <tag line="330" name="uses" description="\_FormatSort()" refers="\_FormatSort()"/>
          <tag line="330" name="uses" description="\_FormatObject()" refers="\_FormatObject()"/>
          <tag line="330" name="uses" description="\_FormatOptions()" refers="\_FormatOptions()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="370" package="MyWrapper\Wrappers">
        <name>_ValidateRequest</name>
        <full_name>_ValidateRequest</full_name>
        <docblock line="370">
          <description><![CDATA[Validate request.]]></description>
          <long-description><![CDATA[<p>This method should check that the request is valid and that all required parameters
have been sent.</p>

<p>In this class we check the {@link kAPI_FORMAT format} and
{@link kAPI_OPERATION operation} codes (their presence is checked by the
{@link __construct() constructor}.</p>]]></long-description>
          <tag line="370" name="access" description="protected"/>
          <tag line="370" name="uses" description="\_ValidateRequest()" refers="\_ValidateRequest()"/>
          <tag line="370" name="uses" description="\_ValidateFields()" refers="\_ValidateFields()"/>
          <tag line="370" name="uses" description="\_ValidateSort()" refers="\_ValidateSort()"/>
          <tag line="370" name="uses" description="\_ValidateOptions()" refers="\_ValidateOptions()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="411" package="MyWrapper\Wrappers">
        <name>_ParsePaging</name>
        <full_name>_ParsePaging</full_name>
        <docblock line="411">
          <description><![CDATA[Parse paging.]]></description>
          <long-description><![CDATA[<p>This method will parse the request pager.</p>]]></long-description>
          <tag line="411" name="access" description="protected"/>
          <tag line="411" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="411" name="see" description="\kAPI_PAGE_START" refers="\kAPI_PAGE_START"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="478" package="MyWrapper\Wrappers">
        <name>_ParseDatabase</name>
        <full_name>_ParseDatabase</full_name>
        <docblock line="478">
          <description><![CDATA[Parse database.]]></description>
          <long-description><![CDATA[<p>This method will parse the request database.</p>]]></long-description>
          <tag line="478" name="access" description="protected"/>
          <tag line="478" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="478" name="see" description="\kAPI_DATABASE" refers="\kAPI_DATABASE"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="508" package="MyWrapper\Wrappers">
        <name>_ParseContainer</name>
        <full_name>_ParseContainer</full_name>
        <docblock line="508">
          <description><![CDATA[Parse container.]]></description>
          <long-description><![CDATA[<p>This method will parse the request container.</p>]]></long-description>
          <tag line="508" name="access" description="protected"/>
          <tag line="508" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="508" name="see" description="\kAPI_CONTAINER" refers="\kAPI_CONTAINER"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="538" package="MyWrapper\Wrappers">
        <name>_ParseQuery</name>
        <full_name>_ParseQuery</full_name>
        <docblock line="538">
          <description><![CDATA[Parse query.]]></description>
          <long-description><![CDATA[<p>This method will parse the request query.</p>]]></long-description>
          <tag line="538" name="access" description="protected"/>
          <tag line="538" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="538" name="see" description="\kAPI_DATA_QUERY" refers="\kAPI_DATA_QUERY"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="568" package="MyWrapper\Wrappers">
        <name>_ParseFields</name>
        <full_name>_ParseFields</full_name>
        <docblock line="568">
          <description><![CDATA[Parse fields.]]></description>
          <long-description><![CDATA[<p>This method will parse the request fields.</p>]]></long-description>
          <tag line="568" name="access" description="protected"/>
          <tag line="568" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="568" name="see" description="\kAPI_DATA_FIELD" refers="\kAPI_DATA_FIELD"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="598" package="MyWrapper\Wrappers">
        <name>_ParseSort</name>
        <full_name>_ParseSort</full_name>
        <docblock line="598">
          <description><![CDATA[Parse sort.]]></description>
          <long-description><![CDATA[<p>This method will parse the request sort.</p>]]></long-description>
          <tag line="598" name="access" description="protected"/>
          <tag line="598" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="598" name="see" description="\kAPI_DATA_SORT" refers="\kAPI_DATA_SORT"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="628" package="MyWrapper\Wrappers">
        <name>_ParseObject</name>
        <full_name>_ParseObject</full_name>
        <docblock line="628">
          <description><![CDATA[Parse object.]]></description>
          <long-description><![CDATA[<p>This method will parse the request object.</p>]]></long-description>
          <tag line="628" name="access" description="protected"/>
          <tag line="628" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="628" name="see" description="\kAPI_DATA_OBJECT" refers="\kAPI_DATA_OBJECT"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="658" package="MyWrapper\Wrappers">
        <name>_ParseOptions</name>
        <full_name>_ParseOptions</full_name>
        <docblock line="658">
          <description><![CDATA[Parse options.]]></description>
          <long-description><![CDATA[<p>This method will parse the request options.</p>]]></long-description>
          <tag line="658" name="access" description="protected"/>
          <tag line="658" name="uses" description="\_OffsetManage()" refers="\_OffsetManage()"/>
          <tag line="658" name="see" description="\kAPI_DATA_OPTIONS" refers="\kAPI_DATA_OPTIONS"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="697" package="MyWrapper\Wrappers">
        <name>_FormatQuery</name>
        <full_name>_FormatQuery</full_name>
        <docblock line="697">
          <description><![CDATA[Format query.]]></description>
          <long-description><![CDATA[<p>This method will format the request query.</p>]]></long-description>
          <tag line="697" name="access" description="protected"/>
          <tag line="697" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="697" name="see" description="\kAPI_DATA_QUERY" refers="\kAPI_DATA_QUERY"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="715" package="MyWrapper\Wrappers">
        <name>_FormatFields</name>
        <full_name>_FormatFields</full_name>
        <docblock line="715">
          <description><![CDATA[Format fields.]]></description>
          <long-description><![CDATA[<p>This method will format the request fields.</p>]]></long-description>
          <tag line="715" name="access" description="protected"/>
          <tag line="715" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="715" name="see" description="\kAPI_DATA_FIELD" refers="\kAPI_DATA_FIELD"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="733" package="MyWrapper\Wrappers">
        <name>_FormatSort</name>
        <full_name>_FormatSort</full_name>
        <docblock line="733">
          <description><![CDATA[Format sort.]]></description>
          <long-description><![CDATA[<p>This method will format the request sort.</p>]]></long-description>
          <tag line="733" name="access" description="protected"/>
          <tag line="733" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="733" name="see" description="\kAPI_DATA_SORT" refers="\kAPI_DATA_SORT"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="751" package="MyWrapper\Wrappers">
        <name>_FormatObject</name>
        <full_name>_FormatObject</full_name>
        <docblock line="751">
          <description><![CDATA[Format object.]]></description>
          <long-description><![CDATA[<p>This method will format the request object.</p>]]></long-description>
          <tag line="751" name="access" description="protected"/>
          <tag line="751" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="751" name="see" description="\kAPI_DATA_OBJECT" refers="\kAPI_DATA_OBJECT"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="769" package="MyWrapper\Wrappers">
        <name>_FormatOptions</name>
        <full_name>_FormatOptions</full_name>
        <docblock line="769">
          <description><![CDATA[Format options.]]></description>
          <long-description><![CDATA[<p>This method will format the request options.</p>]]></long-description>
          <tag line="769" name="access" description="protected"/>
          <tag line="769" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="769" name="see" description="\kAPI_DATA_OPTIONS" refers="\kAPI_DATA_OPTIONS"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="796" package="MyWrapper\Wrappers">
        <name>_ValidateOperation</name>
        <full_name>_ValidateOperation</full_name>
        <docblock line="796">
          <description><![CDATA[Validate request operation.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_OPERATION operation} parameter is valid.</p>]]></long-description>
          <tag line="796" name="access" description="protected"/>
          <tag line="796" name="see" description="\kAPI_OPERATION" refers="\kAPI_OPERATION"/>
          <tag line="796" name="see" description="\kAPI_DATABASE" refers="\kAPI_DATABASE"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="976" package="MyWrapper\Wrappers">
        <name>_ValidateFields</name>
        <full_name>_ValidateFields</full_name>
        <docblock line="976">
          <description><![CDATA[Validate field selection reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_DATA_FIELD field} parameter is valid.</p>

<p>In this class we ensure that the fields list is an array.</p>]]></long-description>
          <tag line="976" name="access" description="protected"/>
          <tag line="976" name="see" description="\kAPI_DATA_FIELD" refers="\kAPI_DATA_FIELD"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1020" package="MyWrapper\Wrappers">
        <name>_ValidateSort</name>
        <full_name>_ValidateSort</full_name>
        <docblock line="1020">
          <description><![CDATA[Validate sort selection reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_DATA_SORT sort} parameter is valid.</p>

<p>In this class we ensure that the sort list is an array.</p>]]></long-description>
          <tag line="1020" name="access" description="protected"/>
          <tag line="1020" name="see" description="\kAPI_DATA_SORT" refers="\kAPI_DATA_SORT"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1065" package="MyWrapper\Wrappers">
        <name>_ValidateOptions</name>
        <full_name>_ValidateOptions</full_name>
        <docblock line="1065">
          <description><![CDATA[Validate sort selection reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_DATA_SORT sort} parameter is valid.</p>

<p>In this class we ensure that the sort list is an array.</p>]]></long-description>
          <tag line="1065" name="access" description="protected"/>
          <tag line="1065" name="see" description="\kAPI_DATA_OPTIONS" refers="\kAPI_DATA_OPTIONS"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1117" package="MyWrapper\Wrappers">
        <name>_Handle_ListOp</name>
        <full_name>_Handle_ListOp</full_name>
        <docblock line="1117">
          <description><![CDATA[Handle {@link kAPI_OP_HELP list} operations request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_HELP kAPI_OP_HELP} request, which
should return the list of supported operations.</p>]]></long-description>
          <tag line="1117" name="param" description="Receives operations list." type="\reference" variable="$theList">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1117" name="access" description="protected"/>
        </docblock>
        <argument line="1117">
          <name>$theList</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1237" package="MyWrapper\Wrappers">
        <name>_DecodeParameter</name>
        <full_name>_DecodeParameter</full_name>
        <docblock line="1237">
          <description><![CDATA[Decode parameter.]]></description>
          <long-description><![CDATA[<p>This method can be used to decode a parameter according to the provided format,
{@link kTYPE_JSON JSON} or {@link kTYPE_PHP PHP}.</p>

<p>The method will return the decoded parameter.</p>]]></long-description>
          <tag line="1237" name="param" description="Parameter offset." type="string" variable="$theParameter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1237" name="access" description="protected"/>
          <tag line="1237" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1237" name="uses" description="\CObject::JsonDecode()" refers="\CObject::JsonDecode()"/>
          <tag line="1237" name="see" description="\kTYPE_JSON" refers="\kTYPE_JSON"/>
        </docblock>
        <argument line="1237">
          <name>$theParameter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CDataWrapperClient.php" hash="c57c3fa5f98f55adf4a0798e80c44ce3" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Server definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all definitions of the server object.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="76" package="MyWrapper\Wrappers">
      <extends>CWrapperClient</extends>
      <name>CDataWrapperClient</name>
      <full_name>\CDataWrapperClient</full_name>
      <docblock line="76">
        <description><![CDATA[Data wrapper client.]]></description>
        <long-description><![CDATA[<p>This class represents a web-services data wrapper client, it facilitates the job of
requesting information from servers derived from the {@link CDataWrapper CDataWrapper}
class.</p>

<p>This class adds the following properties to its {@link CWrapperClient ancestor}:</p>

<ul>
<li><i>{@link Database() Database}</i>: This element represents the web-service
    database, it is stored in the {@link kAPI_DATABASE kAPI_DATABASE} offset.
<li><i>{@link Container() Container}</i>: This element represents the web-service
    database container, it is stored in the {@link kAPI_CONTAINER kAPI_CONTAINER}
    offset.
<li><i>Page {@link Start() start}</i>: This element represents the start page requested
    from the web-service, it is stored in the {@link kAPI_PAGE_START kAPI_PAGE_START}
    offset.
<li><i>Page {@link Limit() limit}</i>: This element represents the max page count
    requested from the web-service, it is stored in the
    {@link kAPI_PAGE_LIMIT kAPI_PAGE_LIMIT} offset.
<li><i>{@link Query() Query}</i>: This element represents the {@link CQuery query} that
    will be sent to the web-service, it is stored in the
    {@link kAPI_DATA_QUERY kAPI_DATA_QUERY} offset.
<li><i>{@link Fields() Fields}</i>: This element represents the list of fields that
    should be returned by the web-service, it is stored in the
    {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} offset.
<li><i>{@link Sort() Sort}</i>: This element represents the list of fields that will
    be used to sort the reqults returned by the web-service, it is stored in the
    {@link kAPI_DATA_SORT kAPI_DATA_SORT} offset.
<li><i>{@link Object() Object}</i>: This element represents the object to be sent to the
    web-service, it is stored in the {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} offset.
<li><i>{@link Options() Options}</i>: This element represents a list of options sent to
    the web-service, it is stored in the {@link kAPI_DATA_OPTIONS kAPI_DATA_OPTIONS}
    offset.
</ul>]]></long-description>
        <tag line="76" name="package" description="MyWrapper"/>
        <tag line="76" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="MyWrapper\Wrappers">
        <name>Operation</name>
        <full_name>Operation</full_name>
        <docblock line="134">
          <description><![CDATA[Manage operation.]]></description>
          <long-description><![CDATA[<p>We {@link CWrapperClient::Operation() overload} this method to add the following
allowed operations:</p>

<ul>
<li><i>{@link kAPI_OP_COUNT kAPI_OP_COUNT}</i>: COUNT web-service operation, used to
    return the total number of elements satisfying a query.
<li><i>{@link kAPI_OP_MATCH kAPI_OP_MATCH}</i>: This operation is equivalent to a
    read query, except that it will try to match one {@link kAPI_DATA_QUERY query}
    clause at the time and will return a result on the first match.
<li><i>{@link kAPI_OP_GET kAPI_OP_GET}</i>: GET web-service operation, used to
    retrieve objects from the data store.
<li><i>{@link kAPI_OP_SET kAPI_OP_SET}</i>: SET web-service operation, used to
    insert or update objects in the data store.
<li><i>{@link kAPI_OP_UPDATE kAPI_OP_UPDATE}</i>: UPDATE web-service operation, used
    to update existing objects in the data store.
<li><i>{@link kAPI_OP_INSERT kAPI_OP_INSERT}</i>: INSERT web-service operation, used
    to insert new objects in the data store.
<li><i>{@link kAPI_OP_BATCH_INSERT kAPI_OP_BATCH_INSERT}</i>: This service is
    equivalent to the {@link kAPI_OP_INSERT kAPI_OP_INSERT} command, except that in
    this case you provide a list ov objects to insert.
<li><i>{@link kAPI_OP_MODIFY kAPI_OP_MODIFY}</i>: MODIFY web-service operation, used
    to modify partial contents of objects in the data store.
<li><i>{@link kAPI_OP_DEL kAPI_OP_DEL}</i>: DELETE web-service operation, used to
    delete objects from the data store.
</ul>]]></long-description>
          <tag line="134" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="134" name="access" description="public"/>
          <tag line="134" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="134" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="134" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="134" name="see" description="\kAPI_OPERATION" refers="\kAPI_OPERATION"/>
          <tag line="134" name="see" description="\kAPI_OP_HELP" refers="\kAPI_OP_HELP"/>
        </docblock>
        <argument line="134">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="196" package="MyWrapper\Wrappers">
        <name>Database</name>
        <full_name>Database</full_name>
        <docblock line="196">
          <description><![CDATA[Manage database.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_DATABASE database}, it accepts a
string which represents either the database name or the requested operation,
depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="196" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="196" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="196" name="access" description="public"/>
          <tag line="196" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="196" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="196" name="see" description="\kAPI_DATABASE" refers="\kAPI_DATABASE"/>
        </docblock>
        <argument line="196">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="234" package="MyWrapper\Wrappers">
        <name>Container</name>
        <full_name>Container</full_name>
        <docblock line="234">
          <description><![CDATA[Manage container.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the database {@link kAPI_CONTAINER container}, it
accepts a string which represents either the container name or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="234" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="234" name="access" description="public"/>
          <tag line="234" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="234" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="234" name="see" description="\kAPI_CONTAINER" refers="\kAPI_CONTAINER"/>
        </docblock>
        <argument line="234">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="272" package="MyWrapper\Wrappers">
        <name>Start</name>
        <full_name>Start</full_name>
        <docblock line="272">
          <description><![CDATA[Manage page start.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the page {@link kAPI_PAGE_START start}, it accepts
a number which represents either the page start or the requested operation, depending
on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="272" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="272" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="272" name="access" description="public"/>
          <tag line="272" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="272" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="272" name="see" description="\kAPI_PAGE_START" refers="\kAPI_PAGE_START"/>
        </docblock>
        <argument line="272">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="310" package="MyWrapper\Wrappers">
        <name>Limit</name>
        <full_name>Limit</full_name>
        <docblock line="310">
          <description><![CDATA[Manage page limit.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the page {@link kAPI_PAGE_LIMIT limit}, it accepts
a number which represents either the page limit or the requested operation, depending
on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="310" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="310" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="310" name="access" description="public"/>
          <tag line="310" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="310" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="310" name="see" description="\kAPI_PAGE_LIMIT" refers="\kAPI_PAGE_LIMIT"/>
        </docblock>
        <argument line="310">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="310">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="353" package="MyWrapper\Wrappers">
        <name>Query</name>
        <full_name>Query</full_name>
        <docblock line="353">
          <description><![CDATA[Manage data query.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the data {@link kAPI_DATA_QUERY query}, it accepts
an array or ArrayObject which represents either the data query or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>If the provided value is not an array or an ArrayObject, the method will raise an
exception.</p>]]></long-description>
          <tag line="353" name="param" description="Value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="353" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="353" name="access" description="public"/>
          <tag line="353" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="353" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="353" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="353" name="see" description="\kAPI_DATA_QUERY" refers="\kAPI_DATA_QUERY"/>
        </docblock>
        <argument line="353">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="353">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="409" package="MyWrapper\Wrappers">
        <name>Fields</name>
        <full_name>Fields</full_name>
        <docblock line="409">
          <description><![CDATA[Manage query fields.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_DATA_FIELD fields} list, it accepts
an array or ArrayObject which represents either the list of fields to be returned, or
the requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>If the provided value is not an array or an ArrayObject, the method will raise an
exception.</p>]]></long-description>
          <tag line="409" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="409" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="409" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="409" name="access" description="public"/>
          <tag line="409" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="409" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="409" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="409" name="see" description="\kAPI_DATA_FIELD" refers="\kAPI_DATA_FIELD"/>
        </docblock>
        <argument line="409">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="409">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="409">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="465" package="MyWrapper\Wrappers">
        <name>Sort</name>
        <full_name>Sort</full_name>
        <docblock line="465">
          <description><![CDATA[Manage sort fields.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link Query() query}
{@link kAPI_DATA_SORT sort} fields, it accepts an array or ArrayObject which
represents either the {@link Query() query} list of sort fields, or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>If the provided value is not an array or an ArrayObject, the method will raise an
exception.</p>]]></long-description>
          <tag line="465" name="param" description="Value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="465" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="465" name="access" description="public"/>
          <tag line="465" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="465" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="465" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="465" name="see" description="\kAPI_DATA_SORT" refers="\kAPI_DATA_SORT"/>
        </docblock>
        <argument line="465">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="465">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="521" package="MyWrapper\Wrappers">
        <name>Object</name>
        <full_name>Object</full_name>
        <docblock line="521">
          <description><![CDATA[Manage query object.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link Query() query}
{@link kAPI_DATA_OBJECT object}, it accepts an array or ArrayObject which represents
the object to be sent to the web-service, or the requested operation, depending on
its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>If the provided value is not an array or an ArrayObject, the method will raise an
exception.</p>]]></long-description>
          <tag line="521" name="param" description="Value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="521" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="521" name="access" description="public"/>
          <tag line="521" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="521" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="521" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="521" name="see" description="\kAPI_DATA_OBJECT" refers="\kAPI_DATA_OBJECT"/>
        </docblock>
        <argument line="521">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="521">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="608" package="MyWrapper\Wrappers">
        <name>Options</name>
        <full_name>Options</full_name>
        <docblock line="608">
          <description><![CDATA[Manage options.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link Query() query} data
{@link kAPI_DATA_OPTIONS options}, with it you can add, retrieve and delete elements
of the options list, to operate on the whole list you should use its
{@link kAPI_DATA_OPTIONS offset}.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theOption</b>: This parameter represents the option, it can take the
    following values:
 <ul>
    <li><i>{@link kAPI_OPT_SAFE kAPI_OPT_SAFE}</i>: Can be a boolean or integer,
        defaults to FALSE. If FALSE, a database query will not wait for a response.
        If TRUE, the program will wait for the database response and throw an
        exception if the operation did not succeed.
    <li><i>{@link kAPI_OPT_FSYNC kAPI_OPT_FSYNC}</i>: Boolean, defaults to FALSE.
        Forces the update to be synced to disk before returning success. If TRUE, a
        {@link kAPI_OPT_SAFE safe} update is implied and will override setting safe
        to FALSE.
    <li><i>{@link kAPI_OPT_TIMEOUT kAPI_OPT_TIMEOUT}</i>: Integer, if "safe" is set,
        this sets how long (in milliseconds) for the client to wait for a database
        response. If the database does not respond within the timeout period, an
        exception will be thrown.
    <li><i>{@link kAPI_OPT_SINGLE kAPI_OPT_SINGLE}</i>: Boolean, used in the
        {@link kAPI_OP_DEL delete} or {@link kAPI_OP_UPDATE update} operatiosn: if
        TRUE, only the first object will be affected; if not, all matching objects
        will be considered.
 </ul>
<li><b>$theValue</b>: This parameter represents either the option value, or the
    operation to perform:
 <ul>
    <li><i>NULL</i>: This value indicates that we want to retrieve the value of the
        option provided in the previous parameter.
    <li><i>FALSE</i>: This value indicates that we want to delete the option
        provided in the previous parameter.
    <li><i>other</i>: Any other value is interpreted as the value of the option
        selected by the first parameter. Note that, in general, missing options are
        equivalent to setting the option to <i>FALSE</i>, when the value is a
        boolean, so turning off an option is the same as removing it.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the element or list <i>before</i> it was eventually
        modified.
    <li><i>FALSE</i>: Return the element or list <i>after</i> it was eventually
        modified.
 </ul>
</ul>]]></long-description>
          <tag line="608" name="param" description="Option selector." type="mixed" variable="$theOption">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="608" name="param" description="Option value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="608" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="608" name="access" description="public"/>
          <tag line="608" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="608" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="608" name="see" description="\kAPI_DATA_OPTIONS" refers="\kAPI_DATA_OPTIONS"/>
        </docblock>
        <argument line="608">
          <name>$theOption</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="608">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="608">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CEntity.inc.php" hash="b0ce8ef3a13227088e9f401a1d8cdf34" package="Default">
    <constant namespace="" line="30" package="Default">
      <name>kENTITY_CONTAINER</name>
      <full_name>\kENTITY_CONTAINER</full_name>
      <value><![CDATA['ENTITIES']]></value>
      <docblock line="30">
        <description><![CDATA[Container name.]]></description>
        <long-description><![CDATA[<p>This tag will hold the default container name.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9UkFOwzAQPMevWPVSiJCTtkdK26gEqRINEgQhTshN3cSKY0e2A6oQT+APfQz8C9cQVAQ9lr14tTuznvV4OK6LGqHAPztMIPC9P8Pf7UxjYZhZYyYybPXsQf3iH0ayHyCwD7K9AJ4nnIkSvvS15wss6YoJZpgUGlvcFpoWTMOKcQqZFIYwoW1SVVLsgqHRdAmLNZiC7h2ecaLbsd6kJllJcurN13eK1DVVrqqbRdtwNEZ1SyCNKaTyvDnjpYQIw/umlCv29grDCuttmk2ynBGFpcpHjvJIlbbyvB4OQ+gNgnAQ9MNe3/aCA/+N8/giur1MYXqVpNEsia8hiebxv5rdej39tI0qEKSiP2w1JIcnxjkUki+dd9ZT0nDTer1DCpDzmx5Bp4yTdJbeP3wv1zlx63RdfRbfdOH4FKHxCH0AKnfhjg==</source>
  </file>
  <file path="classes/CEntity.php" hash="8972d955aed86e135a642e4a072a3e80" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="63" package="MyWrapper\Entities">
      <extends>CCodedUnitObject</extends>
      <name>CEntity</name>
      <full_name>\CEntity</full_name>
      <docblock line="63">
        <description><![CDATA[Entity.]]></description>
        <long-description><![CDATA[<p>An entity can be an individual, and organisation or a legal entity that exists as a unit,
rather than being embedded in another object.</p>

<p>In this class we add to the {@link CCodedUnitObject parent} the following properties:</p>

<ul>
<li><i>{@link kTAG_NAME kTAG_NAME}</i>: This offset represents the entity name, the
    class features a member accessor {@link Name() method} to manage this property.
<li><i>{@link kOFFSET_EMAIL kOFFSET_EMAIL}</i>: This offset represents the entity e-mail
    address, it is a scalar property and the class features a member accessor
    {@link Email() method} to manage it.
</ul>

<p>The class also features a static {@link DefaultContainer() method} that returns the
default container name for objects of this type.</p>

<p>Objects derived from this class will have their {@link _IsEncoded() encoded}
{@link kFLAG_STATE_ENCODED flag} set by default and must implement a protected
{@link _TokeniseIdentifier() method} that must add tokens to the object
{@link _index() index} in order to ensure a unique identifier.</p>]]></long-description>
        <tag line="63" name="package" description="MyWrapper"/>
        <tag line="63" name="subpackage" description="Entities"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="MyWrapper\Entities">
        <name>GID</name>
        <full_name>GID</full_name>
        <docblock line="93">
          <description><![CDATA[Manage entity global identifier.]]></description>
          <long-description><![CDATA[<p>The term global {@link kTAG_GID identifier} represents the un-hashed version of the
term local {@link kTAG_LID identifier}.</p>

<p>This value is set automatically by a protected {@link _PrepareCommit() method}, so
this method is read-only.</p>]]></long-description>
          <tag line="93" name="access" description="public"/>
          <tag line="93" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="see" description="\kTAG_GID" refers="\kTAG_GID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="MyWrapper\Entities">
        <name>Name</name>
        <full_name>Name</full_name>
        <docblock line="125">
          <description><![CDATA[Manage entity name.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the entity {@link kTAG_NAME name}, it uses the
standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_NAME offset}.</p>

<p>This value should be a string that can be used as a label or as a short definition
of the entity. The name may be language dependent, so the type of data stored in this
offset is the responsibility of concrete classes.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kTAG_NAME kTAG_NAME}.</p>]]></long-description>
          <tag line="125" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="125" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="125" name="access" description="public"/>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="125" name="see" description="\kTAG_NAME" refers="\kTAG_NAME"/>
        </docblock>
        <argument line="125">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="MyWrapper\Entities">
        <name>Email</name>
        <full_name>Email</full_name>
        <docblock line="163">
          <description><![CDATA[Manage entity e-mail.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the entity {@link kOFFSET_EMAIL e-mail}, it uses
the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kOFFSET_EMAIL offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="163" name="param" description="Entity e-mail or operation." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="163" name="access" description="public"/>
          <tag line="163" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="163">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="192" package="MyWrapper\Entities">
        <name>DefaultContainer</name>
        <full_name>DefaultContainer</full_name>
        <docblock line="192">
          <description><![CDATA[Return the default container.]]></description>
          <long-description><![CDATA[<p>This method can be used to retrieve the default container name.</p>]]></long-description>
          <tag line="192" name="static" description=""/>
          <tag line="192" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="223" package="MyWrapper\Entities">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="223">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>We overload this method to enforce the {@link kFLAG_STATE_ENCODED encoded} modifier.</p>]]></long-description>
          <tag line="223" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="223" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="223" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="223" name="access" description="protected"/>
          <tag line="223" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="223" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="223">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="223">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="223">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="260" package="MyWrapper\Entities">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="260">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We overload this method to enforce the {@link kFLAG_STATE_ENCODED encoded} modifier,
and we set automatically the global {@link kTAG_GID identifier}.</p>]]></long-description>
          <tag line="260" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="260" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="260" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="260" name="access" description="protected"/>
          <tag line="260" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="260" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="260" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="260">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CException.php" hash="366c470b18b22ee37781287c7169f4e0" package="Default">
    <include line="33" type="Require Once" package="Default">
      <name/>
      <docblock line="33">
        <description><![CDATA[Errors.]]></description>
        <long-description><![CDATA[<p>This include file contains all error code definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="40" type="Require Once" package="Default">
      <name/>
      <docblock line="40">
        <description><![CDATA[Message types.]]></description>
        <long-description><![CDATA[<p>This include file contains all message severity definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="71" package="MyWrapper\Framework">
      <extends>Exception</extends>
      <name>CException</name>
      <full_name>\CException</full_name>
      <docblock line="71">
        <description><![CDATA[Exception class.]]></description>
        <long-description><![CDATA[<p>This class extends the built-in <i>Exception</i> class by adding a series of additional
members and functionality.</p>

<p>{@link Severity() Severity} represents the severity of the exception such as
<i>error</i>, <i>warning</i>, etc. You are free to set any value, but in this library we
support the following standard:</p>

<ul>
<li><b>{@link kMESSAGE_TYPE_IDLE Idle}</b>: Idle state.
<li><b>{@link kMESSAGE_TYPE_NOTICE Notice}</b>: Statistical information or message.
<li><b>{@link kMESSAGE_TYPE_MESSAGE Message}</b>: A message.
<li><b>{@link kMESSAGE_TYPE_WARNING Warning}</b>: A warning.
<li><b>{@link kMESSAGE_TYPE_ERROR Error}</b>: An error.
<li><b>{@link kMESSAGE_TYPE_FATAL Fatal}</b>: A fatal error.
<li><b>{@link kMESSAGE_TYPE_BUG Bug}</b>: A bug.
</ul>

<p>{@link References() References} represent a list of reference values structured as an
array of key/value pairs where the key represents the reference label or name and the
value the reference value. Labels must be strings, values can be of any type.</p>

<p>Note that this class does not throw exceptions (hahaha), operations that fail are simply
aborted.</p>]]></long-description>
        <tag line="71" name="package" description="MyWrapper"/>
        <tag line="71" name="subpackage" description="Framework"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="80" namespace="" package="Default">
        <name>$mSeverity</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="80">
          <description><![CDATA[Exception severity.]]></description>
          <long-description><![CDATA[<p>This data member holds the exception severity.</p>]]></long-description>
          <tag line="80" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="89" namespace="" package="Default">
        <name>$mReferences</name>
        <default><![CDATA[array()]]></default>
        <docblock line="89">
          <description><![CDATA[Exception references.]]></description>
          <long-description><![CDATA[<p>This data member holds the list of exception references.</p>]]></long-description>
          <tag line="89" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="MyWrapper\Framework">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="150">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The first two parameters follow the inherited interface, the constructor adds support
for the extended class members:</p>

<ul>
<li><b>$theMessage</b>: This parameter represents the inherited <i>message</i>.
<li><b>$theCode</b>: This parameter represents the inherited <i>code</i>.
<li><b>$theSeverity</b>: This parameter holds {@link Severity() the} exception
    type, level or severity:
 <ul>
    <li><i>{@link kMESSAGE_TYPE_IDLE kMESSAGE_TYPE_IDLE}</i>: This indicates an idle
        state.
    <li><i>{@link kMESSAGE_TYPE_NOTICE kMESSAGE_TYPE_NOTICE}</i>: This indicates an
        informative note or message.
    <li><i>{@link kMESSAGE_TYPE_WARNING kMESSAGE_TYPE_WARNING}</i>: This indicates a
        warning.
    <li><i>{@link kMESSAGE_TYPE_ERROR kMESSAGE_TYPE_ERROR}</i>: This indicates an error.
    <li><i>{@link kMESSAGE_TYPE_FATAL kMESSAGE_TYPE_FATAL}</i>: This indicates a fatal
        error, in general this should halt program execution.
    <li><i>{@link kMESSAGE_TYPE_BUG kMESSAGE_TYPE_BUG}</i>: This indicates a bug, such
        exceptions should be logged and forwarded to developers.
 </ul>
<li><b>$theReferences</b>: This parameter holds the exception's references
    {@link References() list}, it is an array indexed by reference label or term
    holding the reference value as value.
<li><b>$thePrevious</b>: This parameter represents the previous exception when
    forwarding.
</ul>]]></long-description>
          <tag line="150" name="param" description="Exception message." type="string" variable="$theMessage">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="Exception code." type="integer" variable="$theCode">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="150" name="param" description="Exception severity." type="string" variable="$theSeverity">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="Exception references." type="array" variable="$theReferences">
            <type by_reference="false">array</type>
          </tag>
          <tag line="150" name="param" description="Previous exception." type="\Exception" variable="$thePrevious">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="150" name="access" description="public"/>
          <tag line="150" name="uses" description="\CodeUser()" refers="\CodeUser()"/>
          <tag line="150" name="uses" description="\UserMessages()" refers="\UserMessages()"/>
          <tag line="150" name="uses" description="\UserNamespace()" refers="\UserNamespace()"/>
          <tag line="150" name="uses" description="\Severity()" refers="\Severity()"/>
          <tag line="150" name="uses" description="\Reference()" refers="\Reference()"/>
        </docblock>
        <argument line="150">
          <name>$theMessage</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$theCode</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="152">
          <name>$theSeverity</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="153">
          <name>$theReferences</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$thePrevious</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="188" package="MyWrapper\Framework">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="188">
          <description><![CDATA[Return the object name.]]></description>
          <long-description><![CDATA[<p>In this class we return the stack trace.</p>]]></long-description>
          <tag line="188" name="access" description="public"/>
          <tag line="188" name="return" description="The stack trace." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="426" package="MyWrapper\Framework">
        <name>Severity</name>
        <full_name>Severity</full_name>
        <docblock line="426">
          <description><![CDATA[Set or return the exception severity.]]></description>
          <long-description><![CDATA[<p>When providing <i>$theValue</i>:</p>

<ul>
<li><i>NULL</i>: Retrieve the current value.
<li><i>FALSE</i>: Reset the value to <i>NULL</i>.
<li><i>Integer</i>: Set the member to the provided value:
 <ul>
    <li><i>{@link kMESSAGE_TYPE_IDLE kMESSAGE_TYPE_IDLE}</i>: Idle state.
    <li><i>{@link kMESSAGE_TYPE_NOTICE kMESSAGE_TYPE_NOTICE}</i>: A notice is an
        informative message that does not imply an error, nor a situation that
        should be handled; it can be considered as statistical data.
    <li><i>{@link kMESSAGE_TYPE_MESSAGE kMESSAGE_TYPE_MESSAGE}</i>: A message is an
        informative message that is addressed to somebody, although it does not
        imply an error or warning, it was issued to a receiving party.
    <li><i>{@link kMESSAGE_TYPE_WARNING kMESSAGE_TYPE_WARNING}</i>: Warnings are
        informative data that indicate a potential problem, although they do not
        imply an error, they indicate a potential problem or an issue that should be
        addressed at least at a later stage.
    <li><i>{@link kMESSAGE_TYPE_ERROR kMESSAGE_TYPE_ERROR}</i>: Errors indicate that
        something prevented an operation from being performed, this does not
        necessarily mean that the whole process is halted, but that the results of
        an operation will not be as expected.
    <li><i>{@link kMESSAGE_TYPE_FATAL kMESSAGE_TYPE_FATAL}</i>: Fatal errors are
        {@link kMESSAGE_TYPE_ERROR errors} that result in stopping the whole
        process: in this case the error will prevent other operations from being
        performed and the whole process should be halted.
    <li><i>{@link kMESSAGE_TYPE_BUG kMESSAGE_TYPE_BUG}</i>: Bugs, as opposed to
        {@link kMESSAGE_TYPE_ERROR errors}, result from internal causes independant
        from external factors. A bug indicates that an operation will never execute
        as stated, it does not necessarily mean that it is
        {@link kMESSAGE_TYPE_FATAL fatal}, but rather that the behaviour of an
        operation does not correspond to its declaration.
 </ul>
</ul>

<p>The above mentioned codes are integer based, each state is represented by an
interval, we encourage using the above mentioned codes, but this is not enforced.</p>

<p>When setting or resetting the value, the method will return it <i>after</i> any
modification was made.</p>]]></long-description>
          <tag line="426" name="param" description="NULL, FALSE or exception severity." type="NULL|FALSE|integer" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="426" name="access" description="public"/>
          <tag line="426" name="return" description="Exception severity or type." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="426">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="494" package="MyWrapper\Framework">
        <name>Reference</name>
        <full_name>Reference</full_name>
        <docblock line="494">
          <description><![CDATA[Set or return an exception reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to set, retrieve and remove exception references.
References are a key/value pair that provide additional information on the exception.</p>

<ul>
<li><b>$theIndex</b>: This represents the reference label or name, if you provide
    the parameter, it will be used as an array index to either retrieve, set or
    remove elements, depending on the next parameter's value. If you omit the
    parameter or pass <i>NULL</i> the method will consider the whole list of
    references.
<li><b>$theValue</b>: This represents the reference value:
 <ul>
    <li><i>NULL</i>: This value indicates that we want to retrieve a reference. If
        <i>$theIndex</i> is provided, the method will return the entry matching it,
        if there is no match, the method will return <i>NULL</i>. If
        <i>$theIndex</i> is omitted or <i>NULL</i>, the method will return the full
        references array.
    <li><i>FALSE</i>: This value indicates that we want to delete a reference. If
        <i>$theIndex</i> is provided, the method will delete the entry matching it
        and return <i>NULL</i>. If <i>$theIndex</i> is omitted or <i>NULL</i>, the
        method will delete all references and return an empty array.
    <li><i>Any other type</i>: Other types of value are considered as a value to
        replace or be added to the references list: if <i>$theIndex</i> is provided,
        the method will add or replace the matching element in the list and return
        the eventual value <i>after</i> it was modified. If <i>$theIndex</i> is
        omitted or <i>NULL</i>, the operation depends on the type of value:
     <ul>
        <li><i>array</i>: The provided array will replace the current list and the
            method will return the list <i>after</i> it was replaced.
        <li><i>Any other type</i>: The provided value will be appended to the list
            by using a numeric index and the method will always return the provided
            value.
     </ul>
 </ul>
</ul>]]></long-description>
          <tag line="494" name="param" description="Reference element index." type="mixed" variable="$theIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="494" name="param" description="NULL, FALSE, reference value or list." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="494" name="access" description="public"/>
          <tag line="494" name="return" description="Exception reference." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$theIndex</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="593" package="MyWrapper\Framework">
        <name>AsHTML</name>
        <full_name>AsHTML</full_name>
        <docblock line="593">
          <description><![CDATA[Display an exception.]]></description>
          <long-description><![CDATA[<p>This method can be used to display exceptions in a web browser page.</p>]]></long-description>
          <tag line="593" name="param" description="Exception object." type="\Exception|\CException" variable="$theException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\CException</type>
          </tag>
          <tag line="593" name="static" description=""/>
          <tag line="593" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="593" name="uses" description="\Reference()" refers="\Reference()"/>
          <tag line="593" name="uses" description="\Argument()" refers="\Argument()"/>
          <tag line="593" name="uses" description="\Value()" refers="\Value()"/>
        </docblock>
        <argument line="593">
          <name>$theException</name>
          <default><![CDATA[]]></default>
          <type>Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="677" package="MyWrapper\Framework">
        <name>_Trace</name>
        <full_name>_Trace</full_name>
        <docblock line="677">
          <description><![CDATA[Return the exception trace.]]></description>
          <long-description><![CDATA[<p>This method can be used to return the exception trace in the order in which it was
called. The main utility of this method is to manage forwarded exceptions.</p>

<p>The method will return an array indexed by file path and line number hash in which
the value is either an exception or a trace array. If you run in PHP version &lt; 3.0.x
the first element will be an exception and the others will be traces, if you run a
higher version of PHP you can forward exceptions, so the elements will be mixed.</p>]]></long-description>
          <tag line="677" name="param" description="Exception to trace." type="\Exception" variable="$theException">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="677" name="static" description=""/>
          <tag line="677" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="677">
          <name>$theException</name>
          <default><![CDATA[]]></default>
          <type>Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="742" package="MyWrapper\Framework">
        <name>_TraceArgumentString</name>
        <full_name>_TraceArgumentString</full_name>
        <docblock line="742">
          <description><![CDATA[Return the trace argument string.]]></description>
          <long-description><![CDATA[<p>This method can be used to return the string representation of a trace argument.</p>]]></long-description>
          <tag line="742" name="param" description="Trace argument." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="742" name="access" description="protected"/>
          <tag line="742" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="742">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="800" package="MyWrapper\Framework">
        <name>_Trace2HTML</name>
        <full_name>_Trace2HTML</full_name>
        <docblock line="800">
          <description><![CDATA[Return the exception trace element as HTML.]]></description>
          <long-description><![CDATA[<p>This method can be used to return the trace element as HTML code.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theTable</b>: The HTML table in which we want to place the trace.
<li><b>$theElement</b>: The trace element, it must be an array, if any other type is
    passed, the method will return <i>NULL</i>.
</ul>]]></long-description>
          <tag line="800" name="param" description="HTML table." type="\DOMNode" variable="$theTable">
            <type by_reference="false">\DOMNode</type>
          </tag>
          <tag line="800" name="param" description="Trace element." type="array" variable="$theElement">
            <type by_reference="false">array</type>
          </tag>
          <tag line="800" name="static" description=""/>
        </docblock>
        <argument line="800">
          <name>$theTable</name>
          <default><![CDATA[]]></default>
          <type>DOMNode</type>
        </argument>
        <argument line="800">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="972" package="MyWrapper\Framework">
        <name>_Exception2HTML</name>
        <full_name>_Exception2HTML</full_name>
        <docblock line="972">
          <description><![CDATA[Return the exception as HTML.]]></description>
          <long-description><![CDATA[<p>This method can be used to return the provided exception as HTML code, it is assumed
that the element will be placed in an HTML table, so the method will return a series
of table rows.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theTable</b>: The HTML table in which we want to place the trace.
<li><b>$theElement</b>: The exception, it must be an Exception, if any other type is
    passed, the method will return <i>NULL</i>.
<li><b>$theSource</b>: This parameter is used to provide a link to the source file:
 <ul>
    <li><i>NULL</i>: No source file management.
    <li><i>TRUE</i>: The default source file viewer will be used.
    <li><i>string</i>: The method will execute the provided string as a shell
        command line.
 </ul>
</ul>]]></long-description>
          <tag line="972" name="param" description="HTML table." type="\DOMElement" variable="$theTable">
            <type by_reference="false">\DOMElement</type>
          </tag>
          <tag line="972" name="param" description="Trace element." type="array" variable="$theElement">
            <type by_reference="false">array</type>
          </tag>
          <tag line="972" name="param" description="Source file control." type="NULL|TRUE|string" variable="$theSource">
            <type by_reference="false">NULL</type>
            <type by_reference="false">TRUE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="972" name="static" description=""/>
        </docblock>
        <argument line="972">
          <name>$theTable</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="972">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="972">
          <name>$theSource</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CFAOInstitute.inc.php" hash="836521bad9f3f1df0689f83bffa410e8" package="Default">
    <constant namespace="" line="31" package="Default">
      <name>kENTITY_INST_FAO</name>
      <full_name>\kENTITY_INST_FAO</full_name>
      <value><![CDATA[':ENTITY:INST:FAO']]></value>
      <docblock line="31">
        <description><![CDATA[Institute type.]]></description>
        <long-description><![CDATA[<p>This value defines the institute entity type.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="44" package="Default">
      <name>kENTITY_INST_FAO_EPACRONYM</name>
      <full_name>\kENTITY_INST_FAO_EPACRONYM</full_name>
      <value><![CDATA['ECPGR:ACRONYM']]></value>
      <docblock line="44">
        <description><![CDATA[ECPGR institute acronym.]]></description>
        <long-description><![CDATA[<p>This value defines the institute ECPGR acronym.</p>

<p>Cardinality: single.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="53" package="Default">
      <name>kENTITY_INST_FAO_TYPE</name>
      <full_name>\kENTITY_INST_FAO_TYPE</full_name>
      <value><![CDATA['FAO:INST:TYPE']]></value>
      <docblock line="53">
        <description><![CDATA[FAO/WIEWS institute types set.]]></description>
        <long-description><![CDATA[<p>This value defines the FAO/WIEWS institute types set.</p>

<p>Cardinality: list.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="63" package="Default">
      <name>kENTITY_INST_FAO_LAT</name>
      <full_name>\kENTITY_INST_FAO_LAT</full_name>
      <value><![CDATA['FAO:INST:LAT']]></value>
      <docblock line="63">
        <description><![CDATA[FAO/WIEWS institute latitude.]]></description>
        <long-description><![CDATA[<p>This value defines the FAO/WIEWS institute latitude, it is defined here since it is not
provided in standard format.</p>

<p>Cardinality: single.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="73" package="Default">
      <name>kENTITY_INST_FAO_LON</name>
      <full_name>\kENTITY_INST_FAO_LON</full_name>
      <value><![CDATA['FAO:INST:LON']]></value>
      <docblock line="73">
        <description><![CDATA[FAO/WIEWS institute longitude.]]></description>
        <long-description><![CDATA[<p>This value defines the FAO/WIEWS institute longitude, it is defined here since it is not
provided in standard format.</p>

<p>Cardinality: single.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="83" package="Default">
      <name>kENTITY_INST_FAO_ALT</name>
      <full_name>\kENTITY_INST_FAO_ALT</full_name>
      <value><![CDATA['FAO:INST:ALT']]></value>
      <docblock line="83">
        <description><![CDATA[FAO/WIEWS institute altitude.]]></description>
        <long-description><![CDATA[<p>This value defines the FAO/WIEWS institute altitude, it is defined here since it is not
provided in standard format.</p>

<p>Cardinality: single.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="95" package="Default">
      <name>kENTITY_INST_FAO_ACT_PGR</name>
      <full_name>\kENTITY_INST_FAO_ACT_PGR</full_name>
      <value><![CDATA['FAO:INST:PGR']]></value>
      <docblock line="95">
        <description><![CDATA[FAO/WIEWS institute PGR activity enumeration.]]></description>
        <long-description><![CDATA[<p>This enumeration indicates that the institute manages plant genetic resources.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="102" package="Default">
      <name>kENTITY_INST_FAO_ACT_COLL</name>
      <full_name>\kENTITY_INST_FAO_ACT_COLL</full_name>
      <value><![CDATA['FAO:INST:COLL']]></value>
      <docblock line="102">
        <description><![CDATA[FAO/WIEWS institute collection management enumeration.]]></description>
        <long-description><![CDATA[<p>This enumeration indicates that the institute manages a germplasm collection.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="114" package="Default">
      <name>kENTITY_INST_FAO_DOWNLOAD</name>
      <full_name>\kENTITY_INST_FAO_DOWNLOAD</full_name>
      <value><![CDATA['http://apps3.fao.org/wiews/export.zip']]></value>
      <docblock line="114">
        <description><![CDATA[FAO/WIEWS institute download URL.]]></description>
        <long-description><![CDATA[<p>This enumeration indicates the URL used to download the FAO/WIEWS database export file.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJzlVtFu2jAUfYavuOoLG6oS2k17YF3bLA0VU5pUJRXqE3ITAxaJHdkGxqZ9wv5hH7P91+y4aaGgBVUrnbQ8JffeY99zz419j07ycV6v280Pz/PUoVnb+DSXPW7HCbtUSCKnEluExpbKamPk2hrPk3bTroMqit4Avp6mhE5gJcfVr2+Q4CGhRBJGhaUwGhaNiYAhSTHEjEpEqFAvWcbocjBMBU7gdgFyjLfZSC8cp0iUu9ROcxRP0AjXLhZ9jvIc88Iqprelw6MKS7AoAWgqx4zXahcknTBwLPj1Y8KG5Od3OMosoV/j03hEELcYHx0XkBnmQmVbO7BaLWi9s1tv7cPWwaHy2c/cOmdex7n2Iwg/fvLcCCLnvLfbLiib4EEQucjxisYzlE6xERWLQkhyH4x18Rf3GLtuwl7B3sQLom50M+gGvWigNN7bN2wabeNoa0dbORrw+v1uqxx2Oj0vWiv0TursuZfnV0sFRDFndJFtXXCDf4RyEU8IRamSog2C0FFapcbAu3TcqzC4uSh0aRTLtu9MpSLF2irY7ne9fm8pCS23AIFlRdpbYVeST4mQValHN5ee6aaG+jR9pG2VaadIvyRV3f0n6D4QCQpl4hMYY451xWN856BM6qVzzmYkUQGEgpCIJookDBnP0Gbe24nmO9Hdb/TAXNmqiTM6ejLzEvvC1MNgnXoYVFJH6ZM1L6EvS9zx1zVXNkP8P7mcNqljjkFJZvr+wXSaYY70yLEi9JJdQRMSI1kIjuSjYzVDVM0SAvIUUQkjTLEkMXAs2JTHWFSK5EYDldDjU0mZKhs0ZmmK4yJDk0Sm7tS/RwgpMjxTtES2tNU2fNzQ983lcM9Hm3bZeGdhP/BD5wyUoRt0o24Y9P6R9kvYnKYMJXB95W+lENaRZhyW7AG+evgkSKJbJNRc9TlnXBbjdZVWZZGMVmMp87Ztq0lZvLGGiOkh154TPBe2WdP6QnKj4clx/Te70J62</source>
  </file>
  <file path="classes/CFAOInstitute.php" hash="c58aaf550b9f423b76065375997b3e43" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains the local class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="69" package="MyWrapper\Entities">
      <extends>CInstitute</extends>
      <name>CFAOInstitute</name>
      <full_name>\CFAOInstitute</full_name>
      <docblock line="69">
        <description><![CDATA[FAO/WIEWS institute.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CInstitute ancestor} to implement an institute entity
taken from the FAO WIEWS institutes database.</p>

<p>This kind of institutes adds the following properties:</p>

<ul>
<li><i>{@link kENTITY_INST_FAO_EPACRONYM kENTITY_INST_FAO_EPACRONYM}</i>: This offset
    represents the institute ECPGR {@link EAcronym() acronym}.
<li><i>{@link kENTITY_INST_FAO_TYPE kENTITY_INST_FAO_TYPE}</i>: This offset represents
    the institute set of {@link FAOType() FAO} institute types.
<li><i>{@link kOFFSET_URL kOFFSET_URL}</i>: This offset represents the institute
    {@link URL() URL}.
<li><i>{@link kENTITY_INST_FAO_LAT kOFFSET_kENTITY_INST_FAO_LATLATITUDE}</i>: This
    offset represents the institute {@link Latitude() latitude}, note this is an integer
    value.
<li><i>{@link kENTITY_INST_FAO_LON kENTITY_INST_FAO_LON}</i>: This offset represents the
    institute {@link Longitude() longitude}, note this is an integer value.
<li><i>{@link kENTITY_INST_FAO_ALT kENTITY_INST_FAO_ALT}</i>: This offset represents the
    institute {@link Altitude() altitude}, note this is an integer value.
</ul>

<p>Unlike its {@link CInstitute parent}, this class will use the institute
{@link Code() code} as-is for the object unique {@link _id() identifier}, the index
{@link HashIndex() hashing} method will not transform the {@link _index() index} since
it is at most 7 characters thus cannot conflict with other {@link CEntity entity}
identifiers.</p>]]></long-description>
        <tag line="69" name="package" description="MyWrapper"/>
        <tag line="69" name="subpackage" description="Entities"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="MyWrapper\Entities">
        <name>EAcronym</name>
        <full_name>EAcronym</full_name>
        <docblock line="110">
          <description><![CDATA[Manage institute ECPGR acronym.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the institute ECPGR
{@link kENTITY_INST_FAO_EPACRONYM acronym}, it uses the standard accessor
{@link CAttribute::ManageOffset() method} to manage the
{@link kENTITY_INST_FAO_EPACRONYM offset}.</p>

<p>This value should be a string.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant
{@link kENTITY_INST_FAO_EPACRONYM kENTITY_INST_FAO_EPACRONYM}.</p>]]></long-description>
          <tag line="110" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="110" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="110" name="access" description="public"/>
          <tag line="110" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="110" name="see" description="\kENTITY_INST_FAO_EPACRONYM" refers="\kENTITY_INST_FAO_EPACRONYM"/>
        </docblock>
        <argument line="110">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="MyWrapper\Entities">
        <name>FAOType</name>
        <full_name>FAOType</full_name>
        <docblock line="150">
          <description><![CDATA[Manage FAO/WIEWS types.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the institute FAO/WIEWS
{@link kENTITY_INST_FAO_TYPE types} list, it uses the standard accessor
{@link CAttribute::ManageArrayOffset() method} to manage the
list of acronyms.</p>

<p>Each element of this list should indicate an acronym by which one refers to the
current institute, the nature and specifics of these elements is the responsibility
of concrete classes.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant
{@link kENTITY_INST_FAO_TYPE kENTITY_INST_FAO_TYPE}.</p>]]></long-description>
          <tag line="150" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="150" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="150" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="150" name="access" description="public"/>
          <tag line="150" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="150" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="150" name="see" description="\kENTITY_INST_FAO_TYPE" refers="\kENTITY_INST_FAO_TYPE"/>
        </docblock>
        <argument line="150">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="150">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="150">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="188" package="MyWrapper\Entities">
        <name>Latitude</name>
        <full_name>Latitude</full_name>
        <docblock line="188">
          <description><![CDATA[Manage institute latitude.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the institute
{@link kENTITY_INST_FAO_LAT latitude}, it uses the standard accessor
{@link CAttribute::ManageOffset() method} to manage the
{@link kENTITY_INST_FAO_LAT offset}.</p>

<p>This value is provided as an integer, specialised classes may convert it.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant
{@link kENTITY_INST_FAO_LAT kENTITY_INST_FAO_LAT}.</p>]]></long-description>
          <tag line="188" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="188" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="188" name="access" description="public"/>
          <tag line="188" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="188" name="see" description="\kENTITY_INST_FAO_LAT" refers="\kENTITY_INST_FAO_LAT"/>
        </docblock>
        <argument line="188">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="188">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="225" package="MyWrapper\Entities">
        <name>Longitude</name>
        <full_name>Longitude</full_name>
        <docblock line="225">
          <description><![CDATA[Manage institute longitude.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the institute
{@link kENTITY_INST_FAO_LON longitude}, it uses the standard accessor
{@link CAttribute::ManageOffset() method} to manage the
{@link kENTITY_INST_FAO_LON offset}.</p>

<p>This value is provided as an integer, specialised classes may convert it.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant
{@link kENTITY_INST_FAO_LON kENTITY_INST_FAO_LON}.</p>]]></long-description>
          <tag line="225" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="225" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="225" name="access" description="public"/>
          <tag line="225" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="225" name="see" description="\kENTITY_INST_FAO_LON" refers="\kENTITY_INST_FAO_LON"/>
        </docblock>
        <argument line="225">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="225">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="262" package="MyWrapper\Entities">
        <name>Altitude</name>
        <full_name>Altitude</full_name>
        <docblock line="262">
          <description><![CDATA[Manage institute altitude.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the institute
{@link kENTITY_INST_FAO_ALT altitude}, it uses the standard accessor
{@link CAttribute::ManageOffset() method} to manage the
{@link kENTITY_INST_FAO_ALT offset}.</p>

<p>This value is provided as an integer, specialised classes may convert it.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant
{@link kENTITY_INST_FAO_ALT kENTITY_INST_FAO_ALT}.</p>]]></long-description>
          <tag line="262" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="262" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="262" name="access" description="public"/>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="262" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="262" name="see" description="\kENTITY_INST_FAO_ALT" refers="\kENTITY_INST_FAO_ALT"/>
        </docblock>
        <argument line="262">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="296" package="MyWrapper\Entities">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="296">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to override the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} of the {@link CInstitute parent} class: FAO
institutes may not have a {@link Name() name} set, so we call the
{@link CEntity entity} version of this method.</p>]]></long-description>
          <tag line="296" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="296" name="access" description="public"/>
        </docblock>
        <argument line="296">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="322" package="MyWrapper\Entities">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="322">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to override the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} of the {@link CInstitute parent} class: FAO
institutes may not have a {@link Name() name} set, so we call the
{@link CEntity entity} version of this method.</p>]]></long-description>
          <tag line="322" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="322" name="access" description="public"/>
        </docblock>
        <argument line="322">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="369" package="MyWrapper\Entities">
        <name>Import</name>
        <full_name>Import</full_name>
        <docblock line="369">
          <description><![CDATA[Import institutes.]]></description>
          <long-description><![CDATA[<p>This method can be used to import the institutes list from the current FAO/WIEWS
export file, the method expects two parameters:</p>

<ul>
<li><b>$theContainer</b>: The {@link CContainer container} in which the institutes
    are stored.
<li><b>$theURL</b>: The download URL of the FAO/WIEWS export file.
</ul>

<p>The method will return the number of records added and replaced.</p>

<p><i>Note that the method will commit the records using the
{@link kFLAG_PERSIST_REPLACE kFLAG_PERSIST_REPLACE} and
{@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED} flags</i>.</p>]]></long-description>
          <tag line="369" name="param" description="Data container." type="\CContainer" variable="$theContainer">
            <type by_reference="false">\CContainer</type>
          </tag>
          <tag line="369" name="param" description="Import file path." type="string" variable="$theURL">
            <type by_reference="false">string</type>
          </tag>
          <tag line="369" name="static" description=""/>
          <tag line="369" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="369">
          <name>$theURL</name>
          <default><![CDATA[kENTITY_INST_FAO_DOWNLOAD]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="712" package="MyWrapper\Entities">
        <name>HashIndex</name>
        <full_name>HashIndex</full_name>
        <docblock line="712">
          <description><![CDATA[Hash index.]]></description>
          <long-description><![CDATA[<p>In this class we do not nodify the provided value, it is supposed to be the FAO
institute <i>INSTCODE</i> field.</p>]]></long-description>
          <tag line="712" name="param" description="Value to hash." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="712" name="static" description=""/>
          <tag line="712" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="712">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="748" package="MyWrapper\Entities">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="748">
          <description><![CDATA[Normalise parameters of a store.]]></description>
          <long-description><![CDATA[<p>We overload this method to add the {@link kENTITY_INST_FAO kENTITY_INST_FAO}
{@link Type() type} to the object prior {@link Commit() saving} it.</p>]]></long-description>
          <tag line="748" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="748" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="748" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="748" name="access" description="protected"/>
          <tag line="748" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="748" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="748">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="748">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="748">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CGraphEdge.php" hash="bad4ad7e2c567237708858bd73583ff1" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="40" package="MyWrapper\Persistence">
      <extends>CGraphNode</extends>
      <name>CGraphEdge</name>
      <full_name>\CGraphEdge</full_name>
      <docblock line="40">
        <description><![CDATA[Graph edge.]]></description>
        <long-description><![CDATA[<p>This class implements a graph edge.</p>

<p>This class extends its {@link CGraphNode parent} class in that its {@link Node() node}
property is a relationship node rather than a plain node.</p>]]></long-description>
        <tag line="40" name="package" description="MyWrapper"/>
        <tag line="40" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="MyWrapper\Persistence">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="66">
          <description><![CDATA[Return object identifier.]]></description>
          <long-description><![CDATA[<p>In this class we return the graph {@link Type() type}.</p>]]></long-description>
          <tag line="66" name="access" description="public"/>
          <tag line="66" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="uses" description="\Type()" refers="\Type()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="118" package="MyWrapper\Persistence">
        <name>Type</name>
        <full_name>Type</full_name>
        <docblock line="118">
          <description><![CDATA[Manage node type.]]></description>
          <long-description><![CDATA[<p>This property corresponds to the node type, or predicate reference, this property is
a string, and it is managed directly by the relationship node: we simply wrap this
method around the native management:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>other</i>: Set the value converted to string.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="118" name="param" description="Node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="118" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="118" name="access" description="public"/>
          <tag line="118" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="uses" description="\Node()" refers="\Node()"/>
          <tag line="118" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="118" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="118">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="191" package="MyWrapper\Persistence">
        <name>Node</name>
        <full_name>Node</full_name>
        <docblock line="191">
          <description><![CDATA[Manage native node.]]></description>
          <long-description><![CDATA[<p>We override the {@link CGraphNode parent} {@link CGRaphNode::Node() method} to
enforce Everyman\Neo4j\Relationship objects rather than Everyman\Neo4j\Node objects.</p>]]></long-description>
          <tag line="191" name="param" description="Node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="191" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="191" name="access" description="public"/>
          <tag line="191" name="return" description="" type="\Everyman\Neo4j\Relationship">
            <type by_reference="false">\Everyman\Neo4j\Relationship</type>
          </tag>
          <tag line="191" name="uses" description="\CObject::ManageMember()" refers="\CObject::ManageMember()"/>
          <tag line="191" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="191" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="191">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="251" package="MyWrapper\Persistence">
        <name>Subject</name>
        <full_name>Subject</full_name>
        <docblock line="251">
          <description><![CDATA[Manage subject node.]]></description>
          <long-description><![CDATA[<p>This method will wrap the member accessor around the native relationship node, note
that the method will not allow to delete a value, you must replace it.</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>Everyman\Neo4j\Node</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="251" name="param" description="Subject node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="251" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="251" name="access" description="public"/>
          <tag line="251" name="return" description="" type="\Everyman\Neo4j\Node">
            <type by_reference="false">\Everyman\Neo4j\Node</type>
          </tag>
          <tag line="251" name="uses" description="\Node()" refers="\Node()"/>
          <tag line="251" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="251" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="251">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="251">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="353" package="MyWrapper\Persistence">
        <name>Object</name>
        <full_name>Object</full_name>
        <docblock line="353">
          <description><![CDATA[Manage object node.]]></description>
          <long-description><![CDATA[<p>This method will wrap the member accessor around the native relationship node, note
that the method will not allow to delete a value, you must replace it.</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>Everyman\Neo4j\Node</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="353" name="param" description="Object node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="353" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="353" name="access" description="public"/>
          <tag line="353" name="return" description="" type="\Everyman\Neo4j\Node">
            <type by_reference="false">\Everyman\Neo4j\Node</type>
          </tag>
          <tag line="353" name="uses" description="\Node()" refers="\Node()"/>
          <tag line="353" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="353" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="353">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="353">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="449" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="449">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphNode::_Commit() override} this method to initialise an empty
relationship rather than a node when deleting.</p>]]></long-description>
          <tag line="449" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="449" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="449" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="449" name="access" description="protected"/>
          <tag line="449" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="449" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
        <argument line="449">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="449">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="449">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="516" package="MyWrapper\Persistence">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="516">
          <description><![CDATA[Find object.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphNode::_Commit() override} this method to locate relationships rather
than nodes.</p>]]></long-description>
          <tag line="516" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="516" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="516" name="param" description="&amp;$theModifiers Create options." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="516" name="access" description="protected"/>
          <tag line="516" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="546" package="MyWrapper\Persistence">
        <name>_FinishCreate</name>
        <full_name>_FinishCreate</full_name>
        <docblock line="546">
          <description><![CDATA[Normalise after a {@link _Create() create}.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphNode::_FinishCreate() override} this method to handle relationships
rather than nodes, and to initialise related nodes.</p>]]></long-description>
          <tag line="546" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="546" name="access" description="protected"/>
        </docblock>
        <argument line="546">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="620" package="MyWrapper\Persistence">
        <name>_FinishLoad</name>
        <full_name>_FinishLoad</full_name>
        <docblock line="620">
          <description><![CDATA[Normalise after a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphNode::_FinishCreate() override} this method to handle relationships
rather than nodes.</p>]]></long-description>
          <tag line="620" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="620" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="620" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="620" name="access" description="protected"/>
        </docblock>
        <argument line="620">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="620">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="620">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CGraphNode.inc.php" hash="f490522b3f81214f3f5bcff714166e3d" package="Default">
    <namespace-alias name="Transport">Everyman\Neo4j\Transport</namespace-alias>
    <namespace-alias name="Client">Everyman\Neo4j\Client</namespace-alias>
    <namespace-alias name="NodeIndex">Everyman\Neo4j\Index\NodeIndex</namespace-alias>
    <namespace-alias name="RelationshipIndex">Everyman\Neo4j\Index\RelationshipIndex</namespace-alias>
    <namespace-alias name="NodeFulltextIndex">Everyman\Neo4j\Index\NodeFulltextIndex</namespace-alias>
    <namespace-alias name="Node">Everyman\Neo4j\Node</namespace-alias>
    <namespace-alias name="Path">Everyman\Neo4j\Path</namespace-alias>
    <namespace-alias name="PathFinder">Everyman\Neo4j\PathFinder</namespace-alias>
    <namespace-alias name="Relationship">Everyman\Neo4j\Relationship</namespace-alias>
    <namespace-alias name="Batch">Everyman\Neo4j\Batch</namespace-alias>
    <include line="38" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="" line="32" package="Default">
      <name>Neo4jAutoload</name>
      <full_name>\Neo4jAutoload</full_name>
      <docblock line="32">
        <description><![CDATA[Autoloader.]]></description>
        <long-description><![CDATA[<p>This section allows automatic inclusion of the library classes.</p>]]></long-description>
        <tag line="32" name="param" description="name of class to load." type="string" variable="$theClassName">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="32">
        <name>$theClassName</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <source>eJy9VM1u2kAQPttPMYdIThAyJMqlyh8OcdpEBJChqiohWYtZ8Jb1rru7bkFRHqHv0Idp36uzm9CSQnIje7BGM9/MfDvzeU8vyrz0/UbtbDfHh5q39dTWI+33ipR5V05oyEQWIqXtuI0KuyFda/iAI3Gt71uciTn8Y7hmPsCETplghkmhQ0TbhGHONEwZp5BJYQgTGo2ikGIdDJWmExgvweQUXm+RcaL/Fm+VJJuTGfXulp8QUlLlvLoarwJ9qjTThoqMrnJIZXKpPO+O8bmEKITfP+dyyn79gNMi1NbMWtmMERVKNTt3Kd9sFSm8w7DZhMN3jeZx46h5eISxxo7F0u5EgwFEH4e9Ti+6ipO3XfvT1iGqjOSSTKh6mjy4tWqa2fUB4Vx+14CDlQUxLANULa/sxEBO3U45Gyuilo/bo6v9Ae5PkQK0UUzM7G32ENy2mC4pqOcJ/NoSLg2MBEsidGOfVuKxeZfK4y8rgvvwrAIc+Pe+t5eWxORwBvN+NPyQdm4ukyj5nHbj3vFtGCC1RuBj7xBppIqWnGR0H4LRKKjD1U0St4c9RA/ifpREaNY3WtjcwP6lwYnvsem+k3tKF6g7jYQeux84oKJfK6ZoKoXtsQqd+P4D6JKn5OkaSGNmVauQx7P7BQ68U8Ul8XWcxN12DG5A4BQYD95Wd/geQIx/3bIgYuQmMBoqInQplan73n+hNmdUbPHfiAldjOy74ayXAAnlxD1DOStfBdpK1xXnhi7MC0AL2fT2cc3bvdcM66jN2DqnzeglMVmOQrg49/8A41TbTg==</source>
  </file>
  <file path="classes/CGraphNode.php" hash="65a29f5384293abe39fadf56e6c52105" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="63" package="MyWrapper\Persistence">
      <extends>CPersistentObject</extends>
      <name>CGraphNode</name>
      <full_name>\CGraphNode</full_name>
      <docblock line="63">
        <description><![CDATA[Graph node.]]></description>
        <long-description><![CDATA[<p>This class implements a graph node.</p>

<p>The class is derived from {@link CPersistentObject CPersistentObject}, of which it
inherits the persistence framework, but it differs profoundly in that, although the class
is an ArrayObject, the actual array that it manages is the properties array of the node.
In other words, when you add, retrieve and delete properties, you are not doing so with
the internal array, but with the node's properties array.</p>

<p>The class features a single data member, the {@link Node() node} which contains a Neo4j
node reference.</p>

<p>Since the object requires a valid {@link Node() node} to exist at all times, this may
either be an empty one, if we wish to create a new node, or a {@link _Load() loaded}
one, this means that it is not possible to use the inherited interface of instantiating
the object with array contents, the container provided to the
{@link __construct() constructor} must be a Neo4j client.</p>

<p><i>Note that the class will not cast to an array correctly, you must use the
{@link getArrayCopy() getArrayCopy} method to get an array, if you know how to solve
this, please do it!</i></p>]]></long-description>
        <tag line="63" name="package" description="MyWrapper"/>
        <tag line="63" name="subpackage" description="Persistence"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="72" namespace="" package="Default">
        <name>$mNode</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="72">
          <description><![CDATA[Node.]]></description>
          <long-description><![CDATA[<p>This data member holds the Neo4j node.</p>]]></long-description>
          <tag line="72" name="var" description="" type="\Everyman\Neo4j\PropertyContainer">
            <type by_reference="false">\Everyman\Neo4j\PropertyContainer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="MyWrapper\Persistence">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="99">
          <description><![CDATA[Return object identifier.]]></description>
          <long-description><![CDATA[<p>In this class we return the graph {@link Node() node} ID.</p>]]></long-description>
          <tag line="99" name="access" description="public"/>
          <tag line="99" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="MyWrapper\Persistence">
        <name>Node</name>
        <full_name>Node</full_name>
        <docblock line="161">
          <description><![CDATA[Manage native node.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the native node reference, it uses the standard
accessor {@link CObject::ManageMember() method} to manage the property:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>Everyman\Neo4j\PropertyContainer</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status} and the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} if the node is provided.</p>]]></long-description>
          <tag line="161" name="param" description="Node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="161" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="161" name="access" description="public"/>
          <tag line="161" name="return" description="" type="\Everyman\Neo4j\PropertyContainer">
            <type by_reference="false">\Everyman\Neo4j\PropertyContainer</type>
          </tag>
          <tag line="161" name="uses" description="\CObject::ManageMember()" refers="\CObject::ManageMember()"/>
          <tag line="161" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="161" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="161">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="161">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="241" package="MyWrapper\Persistence">
        <name>RelateTo</name>
        <full_name>RelateTo</full_name>
        <docblock line="241">
          <description><![CDATA[Relate node.]]></description>
          <long-description><![CDATA[<p>This method can be used to relate the current node to anther node, it will return a
Everyman\Neo4j\Relationship instance.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theContainer</b>: The graph container.
<li><b>$thePredicate</b>: The predicate string or edge type.
<li><b>$theObject</b>: The destination node or relationship object node.
</ul>

<p>The method will return a Everyman\Neo4j\Relationship object, or raise an exception if
the operation was not successful.</p>

<p>This method follows the logic of the relateTo() method of Everyman\Neo4j\Node.</p>]]></long-description>
          <tag line="241" name="param" description="Graph container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="241" name="param" description="Predicate." type="string" variable="$thePredicate">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="Object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="241" name="access" description="public"/>
          <tag line="241" name="return" description="" type="\Everyman\Neo4j\Relationship">
            <type by_reference="false">\Everyman\Neo4j\Relationship</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="241">
          <name>$thePredicate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="241">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="342" package="MyWrapper\Persistence">
        <name>Persistent</name>
        <full_name>Persistent</full_name>
        <docblock line="342">
          <description><![CDATA[Check whether object is persistent.]]></description>
          <long-description><![CDATA[<p>This method will return <i>TRUE</i> if the node has an ID, which is assuming it was
committed; or <i>FALSE</i> if not.</p>]]></long-description>
          <tag line="342" name="access" description="public"/>
          <tag line="342" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="377" package="MyWrapper\Persistence">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="377">
          <description><![CDATA[Check whether the provided offset exists.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="377" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="377" name="access" description="public"/>
          <tag line="377" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="377">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="408" package="MyWrapper\Persistence">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="408">
          <description><![CDATA[Return the value of the provided offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>

<p>In this class no offset may have a <i>NULL</i> value, if this method returns a
<i>NULL</i> value, it means that the offset doesn't exist.</p>]]></long-description>
          <tag line="408" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="408" name="access" description="public"/>
          <tag line="408" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="408">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="441" package="MyWrapper\Persistence">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="441">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>

<p>In this class we delete the entry if the value is <i>NULL</i>.</p>

<p>Note that we do not call array access methods: this is because this method will be
overloaded by classes who will aggregate array elements.</p>]]></long-description>
          <tag line="441" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="441" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="441" name="access" description="public"/>
        </docblock>
        <argument line="441">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="441">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="525" package="MyWrapper\Persistence">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="525">
          <description><![CDATA[Delete a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="525" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="525" name="access" description="public"/>
        </docblock>
        <argument line="525">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="560" package="MyWrapper\Persistence">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="560">
          <description><![CDATA[Append a value.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="560" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="560" name="access" description="public"/>
        </docblock>
        <argument line="560">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="580" package="MyWrapper\Persistence">
        <name>asort</name>
        <full_name>asort</full_name>
        <docblock line="580">
          <description><![CDATA[Sort array by values.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="580" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="607" package="MyWrapper\Persistence">
        <name>ksort</name>
        <full_name>ksort</full_name>
        <docblock line="607">
          <description><![CDATA[Sort array by keys.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="607" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="634" package="MyWrapper\Persistence">
        <name>natcasesort</name>
        <full_name>natcasesort</full_name>
        <docblock line="634">
          <description><![CDATA[Sort array by case insensitive natural order algorythm.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="634" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="661" package="MyWrapper\Persistence">
        <name>natsort</name>
        <full_name>natsort</full_name>
        <docblock line="661">
          <description><![CDATA[Sort array by natural order algorythm.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="661" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="689" package="MyWrapper\Persistence">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="689">
          <description><![CDATA[Count number of elements.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="689" name="access" description="public"/>
          <tag line="689" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="725" package="MyWrapper\Persistence">
        <name>exchangeArray</name>
        <full_name>exchangeArray</full_name>
        <docblock line="725">
          <description><![CDATA[Exchange arrays.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>

<p>Note that if the node exists the method will return an array, if not, it will
return an empty array.</p>

<p>This method will raise an exception if a value other than an array or ArrayObject is
provided.</p>]]></long-description>
          <tag line="725" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="725" name="access" description="public"/>
          <tag line="725" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="725" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="725">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="773" package="MyWrapper\Persistence">
        <name>getArrayCopy</name>
        <full_name>getArrayCopy</full_name>
        <docblock line="773">
          <description><![CDATA[Create a copy of the array.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>

<p>Note that if the node exists the method will return an array, if not, it will
return an empty array.</p>]]></long-description>
          <tag line="773" name="access" description="public"/>
          <tag line="773" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="802" package="MyWrapper\Persistence">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="802">
          <description><![CDATA[Get array iterator.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>

<p>Note that if the node exists the method will return an array, if not, it will
return an empty array.</p>]]></long-description>
          <tag line="802" name="access" description="public"/>
          <tag line="802" name="return" description="" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="831" package="MyWrapper\Persistence">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="831">
          <description><![CDATA[Return object's keys.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="831" name="access" description="public"/>
          <tag line="831" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="851" package="MyWrapper\Persistence">
        <name>values</name>
        <full_name>values</full_name>
        <docblock line="851">
          <description><![CDATA[Return object's values.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the array access interface around the node
properties array.</p>]]></long-description>
          <tag line="851" name="access" description="public"/>
          <tag line="851" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="885" package="MyWrapper\Persistence">
        <name>_Create</name>
        <full_name>_Create</full_name>
        <docblock line="885">
          <description><![CDATA[Create object.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentObject::_Create() overload} this method to set the
{@link Node() node} member: if the provided content is a node, we set it, if it is
the graph container, it means that we instantiated an empty object.</p>]]></long-description>
          <tag line="885" name="param" description="&amp;$theContent Object data content." type="\reference" variable="$theContent">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="885" name="access" description="protected"/>
          <tag line="885" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="885" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
        <argument line="885">
          <name>$theContent</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="938" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="938">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>In this class we save the node, or we delete it if the
{@link kFLAG_PERSIST_DELETE kFLAG_PERSIST_DELETE} flag is provided in the modifiers.</p>

<p>We ignore the identifier here.</p>]]></long-description>
          <tag line="938" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="938" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="938" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="938" name="access" description="protected"/>
          <tag line="938" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="938" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
        <argument line="938">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="938">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="938">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="998" package="MyWrapper\Persistence">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="998">
          <description><![CDATA[Find object.]]></description>
          <long-description><![CDATA[<p>In this class we try to load the node.</p>]]></long-description>
          <tag line="998" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="998" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="998" name="param" description="&amp;$theModifiers Create options." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="998" name="access" description="protected"/>
          <tag line="998" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="998">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="998">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="998">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1030" package="MyWrapper\Persistence">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="1030">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>In this class we first enforce that the container was provided, then we check whether
the container is an instance of Everyman\Neo4j\Client.</p>]]></long-description>
          <tag line="1030" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1030" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1030" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1030" name="access" description="protected"/>
        </docblock>
        <argument line="1030">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1030">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1030">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1092" package="MyWrapper\Persistence">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="1092">
          <description><![CDATA[Normalise parameters of a find.]]></description>
          <long-description><![CDATA[<p>In this class we check if the provided container is an Everyman\Neo4j\Client.</p>]]></long-description>
          <tag line="1092" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1092" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1092" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1092" name="access" description="protected"/>
          <tag line="1092" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="1092">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1092">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1092">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1131" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="1131">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>In this class we {@link CPersistentObject::_PrepareCommit() overload} the method to
set the identifier if {@link kFLAG_PERSIST_UPDATE updating} and we check whether the
container is supported.</p>]]></long-description>
          <tag line="1131" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1131" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1131" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1131" name="access" description="protected"/>
          <tag line="1131" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="1131">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1171" package="MyWrapper\Persistence">
        <name>_FinishCreate</name>
        <full_name>_FinishCreate</full_name>
        <docblock line="1171">
          <description><![CDATA[Normalise after a {@link _Create() create}.]]></description>
          <long-description><![CDATA[<p>In this class we create an empty node if not yet set.</p>]]></long-description>
          <tag line="1171" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1171" name="access" description="protected"/>
        </docblock>
        <argument line="1171">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1232" package="MyWrapper\Persistence">
        <name>_FinishLoad</name>
        <full_name>_FinishLoad</full_name>
        <docblock line="1232">
          <description><![CDATA[Normalise after a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>In this class we create an empty node if the node was not found and we set the object
as inited.</p>]]></long-description>
          <tag line="1232" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1232" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1232" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1232" name="access" description="protected"/>
        </docblock>
        <argument line="1232">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1232">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1232">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CInstitute.inc.php" hash="f6385901bfa92d2dbf1606ccc0276fa1" package="Default">
    <constant namespace="" line="30" package="Default">
      <name>kENTITY_INST</name>
      <full_name>\kENTITY_INST</full_name>
      <value><![CDATA[':ENTITY:INST']]></value>
      <docblock line="30">
        <description><![CDATA[Institute type.]]></description>
        <long-description><![CDATA[<p>This value defines the institute entity type.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9UktOwzAQXcenGHVTiJCTVqxK6YcSUBEtixohVshN3WaU1I5iBylCHIE7cBi4F05L2iIqsSqWF6OZ92ae57ndTaOUEM89P8wh4Dp7j7tbGQylNmhyIyjKkFpJ+3G/OhxGtOsRsCspB8BLL0EZw1bhTvgKMzFHiQaV1NSiSwKLUMMcEwGhkoaj1DZYLpXcBUOuxQymBZhI/DEiTLiumju9lIcxXwhnVDxkPE1FtsrqfFoVAmmJKHRF4LmJVOY4I0xiBX0Kn++xmuPHG7SXVJdh2AsXyDOqskVnRXkWmbYinQb1ffBPPXubfqNpa96Bf8plcNW/v2Vwd3ETDBiw/vXkf22vXN9aYYpU/LD2mSe5WHsp9Mo/3IBFufxiw/HIGnYEtTgYsyF7fBqOJ6x28v2UemudbZXZOhyfEdLtkC88F+eK</source>
  </file>
  <file path="classes/CInstitute.php" hash="98363546faf5ee1cc28979f96379e8ee" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Tokens.]]></description>
        <long-description><![CDATA[<p>This include file contains all default token definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name/>
      <docblock line="41">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains the local class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="84" package="MyWrapper\Entities">
      <extends>CContact</extends>
      <name>CInstitute</name>
      <full_name>\CInstitute</full_name>
      <docblock line="84">
        <description><![CDATA[Institute.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CContact ancestor} to implement an institute contact
entity.</p>

<p>Institutes feature specific properties that are added to the inherited ones:</p>

<ul>
<li><i>{@link kOFFSET_ACRONYM kOFFSET_ACRONYM}</i>: This offset represents the institute
    list of {@link Acronym() acronyms}.
<li><i>{@link kOFFSET_URL kOFFSET_URL}</i>: This offset represents the institute list of
    URLs or web pages.
</ul>

<p>The object is considered {@link _IsInited() initialised} only if it has its
{@link Code() code}, as its {@link CEntity ancestor}, its {@link Name() name},
{@link Password() password} and {@link Email() e-mail} address.</p>

<p>If the {@link Code() code} has not been explicitly set, {@link _PrepareCommit() before}
{@link Commit() committing} the object it will be set to the value of the
{@link Email e-mail}. Also in that phase, the {@link kENTITY_USER kENTITY_USER} constant
will be set in the user {@link Type() type}.</p>

<p>The {@link Email() e-mail} in this class is a scalar property, in other classes it will
probably be a list of different e-mail types. In this class we want to link a single
user with a single e-mail, possibly not shared by any other user, that is why we link by
default the user {@link Code() code} and {@link Email() e-mail}.</p>

<p>The unique identifier of this class is composed by the default {@link _index() index} of
thew object, prefixed by the {@link kENTITY_INST kENTITY_INST} token and the
{@link kTOKEN_CLASS_SEPARATOR kTOKEN_CLASS_SEPARATOR} token, this allows institutes and
other types of {@link CEntity entities} to share the same {@link Code() code}; this is
enforced both in the {@link HashIndex() HashIndex} method, to which you only need to pass
the user {@link Code() code}, and in the protected
{@link _PrepareCommit() _PrepareCommit} method which will place the resulting string in
the global {@link kTAG_GID identifier}.</p>]]></long-description>
        <tag line="84" name="package" description="MyWrapper"/>
        <tag line="84" name="subpackage" description="Entities"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="MyWrapper\Entities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="115">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CEntity::__construct() overload} the constructor to initialise the
{@link _IsInited() inited} {@link kFLAG_STATE_INITED flag} if the
{@link Name() name} element is set.</p>

<p>We also enforce the {@link _IsEncoded() encoded} {@link kFLAG_STATE_ENCODED flag}.</p>]]></long-description>
          <tag line="115" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="115" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="115" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="115" name="access" description="public"/>
        </docblock>
        <argument line="115">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="MyWrapper\Entities">
        <name>Acronym</name>
        <full_name>Acronym</full_name>
        <docblock line="178">
          <description><![CDATA[Manage entity acronyms.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the institute {@link kOFFSET_ACRONYM acronyms}
list, it uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to
manage the list of acronyms.</p>

<p>Each element of this list should indicate an acronym by which one refers to the
current institute, the nature and specifics of these elements is the responsibility
of concrete classes.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant
{@link kOFFSET_ACRONYM kOFFSET_ACRONYM}.</p>]]></long-description>
          <tag line="178" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="178" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="178" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="178" name="access" description="public"/>
          <tag line="178" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="178" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="178" name="see" description="\kOFFSET_ACRONYM" refers="\kOFFSET_ACRONYM"/>
        </docblock>
        <argument line="178">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="178">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="178">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="MyWrapper\Entities">
        <name>URL</name>
        <full_name>URL</full_name>
        <docblock line="224">
          <description><![CDATA[Manage institute urls.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the institute {@link kOFFSET_URL URL} or web pages
list, the method expects the following parameters:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theType</b>: The element type, kind or index:
 <ul>
    <li><i>NULL</i>: This value indicates that the URL has no type or kind, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the kind or type of
        the URL.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="224" name="param" description="URL or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="224" name="param" description="Mailing address kind or index." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="224" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="224" name="access" description="public"/>
          <tag line="224" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="263" package="MyWrapper\Entities">
        <name>HashIndex</name>
        <full_name>HashIndex</full_name>
        <docblock line="263">
          <description><![CDATA[Hash index.]]></description>
          <long-description><![CDATA[<p>This method can be used to format an identifier provided as a string, it will be
used by the {@link _id() _id} method to format the result of the
{@link _index() _index} method. One can consider this as the index hashing method for
all derived classes.</p>

<p>In this class we take the provided {@link Code() code} and prefix it with the
{@link kENTITY_INST kENTITY_INST} token, the result will be
{@link CDataTypeBinary hashed}</p>]]></long-description>
          <tag line="263" name="param" description="Value to hash." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="static" description=""/>
          <tag line="263" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="301" package="MyWrapper\Entities">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="301">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if the
{@link kTAG_NAME name}, {@link kOFFSET_EMAIL e-mail},
{@link kOFFSET_PASSWORD password} and the parent {@link kTAG_CODE code} are set.</p>]]></long-description>
          <tag line="301" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="301" name="access" description="public"/>
          <tag line="301" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="301" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
        </docblock>
        <argument line="301">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="301">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="337" package="MyWrapper\Entities">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="337">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if the
{@link kTAG_NAME name}, {@link kOFFSET_EMAIL e-mail},
{@link kOFFSET_PASSWORD password} and the parent {@link kTAG_CODE code} are set.</p>]]></long-description>
          <tag line="337" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="337" name="access" description="public"/>
          <tag line="337" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="337" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
        </docblock>
        <argument line="337">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="384" package="MyWrapper\Entities">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="384">
          <description><![CDATA[Normalise parameters of a store.]]></description>
          <long-description><![CDATA[<p>We overload this method to initialise the {@link kENTITY_INST kENTITY_INST}
{@link Type() type} to the object prior {@link Commit() saving} it.</p>

<p>We also force the {@link _IsEncoded() encoded} {@link kFLAG_STATE_ENCODED flag}.</p>]]></long-description>
          <tag line="384" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="384" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="384" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="384" name="access" description="protected"/>
          <tag line="384" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="384" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="384">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="384">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="384">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CMailAddress.php" hash="a0d00d208e9533460c9a194d9b5e1cdc" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="64" package="MyWrapper\Traits">
      <extends>CArrayObject</extends>
      <name>CMailAddress</name>
      <full_name>\CMailAddress</full_name>
      <docblock line="64">
        <description><![CDATA[Mailing address.]]></description>
        <long-description><![CDATA[<p>This class implements a mailing address, it wraps the {@link CArrayObject parent} class
around a structure that defines a mailing address.</p>

<p>In general instances of this class will be embedded in
{@link CPersistentObject persistent} objects to add lists of addresses, the current class
does not feature any persistence functions, it only concentrates in managing an address
as a set of properties:</p>

<ul>
<li><i>{@link Place() Place}</i>: This {@link kOFFSET_PLACE property} defines a
    named place or location, it should be used only if required.
<li><i>{@link Care() Care} of</i>: This {@link kOFFSET_CARE property} indicates
    who is the owner or reference at the address that is not the same as the sender. It
    should be used only if required.
<li><i>{@link Street() Street}</i>: This {@link kOFFSET_STREET property} indicates
    the street name or P.O. box number.
<li><i>{@link Zip() Zip}</i>: This {@link kOFFSET_ZIP_CODE property} indicates the ZIP
    code.
<li><i>{@link City() City}</i>: This {@link kOFFSET_CITY property} indicates the
    address city name.
<li><i>{@link Province() Province}</i>: This {@link kOFFSET_PROVINCE property}
    indicates the address province name or code.
<li><i>{@link Country() Country}</i>: This {@link kOFFSET_COUNTRY property}
    indicates the address country name or code.
<li><i>{@link Full() Full} address</i>: This {@link kOFFSET_FULL property} can be
    used when an address does not have its properties separated, or it can be used as an
    export feature.
</ul>]]></long-description>
        <tag line="64" name="package" description="MyWrapper"/>
        <tag line="64" name="subpackage" description="Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="MyWrapper\Traits">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="91">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor will instantiate an object either from an array, by loading all
corresponding properties, from a string, in which case it will be interpreted as the
{@link Full() full} address, or as an empty address.</p>]]></long-description>
          <tag line="91" name="param" description="Address structure or string." type="mixed" variable="$theAddress">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="91" name="access" description="public"/>
        </docblock>
        <argument line="91">
          <name>$theAddress</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="201" package="MyWrapper\Traits">
        <name>Place</name>
        <full_name>Place</full_name>
        <docblock line="201">
          <description><![CDATA[Manage place.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_PLACE place}, it
accepts a parameter which represents either the place name or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="201" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="201" name="access" description="public"/>
          <tag line="201" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="201" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="201" name="see" description="\kOFFSET_PLACE" refers="\kOFFSET_PLACE"/>
        </docblock>
        <argument line="201">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="MyWrapper\Traits">
        <name>Care</name>
        <full_name>Care</full_name>
        <docblock line="239">
          <description><![CDATA[Manage care-of.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_CARE care-of}, it
accepts a parameter which represents a care-of reference or the requested operation,
depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="239" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="239" name="access" description="public"/>
          <tag line="239" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="239" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="239" name="see" description="\kOFFSET_CARE" refers="\kOFFSET_CARE"/>
        </docblock>
        <argument line="239">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="239">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="277" package="MyWrapper\Traits">
        <name>Street</name>
        <full_name>Street</full_name>
        <docblock line="277">
          <description><![CDATA[Manage street.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_STREET street}, it
accepts a parameter which represents a street name, P.O. box or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="277" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="277" name="access" description="public"/>
          <tag line="277" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="277" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="277" name="see" description="\kOFFSET_STREET" refers="\kOFFSET_STREET"/>
        </docblock>
        <argument line="277">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="315" package="MyWrapper\Traits">
        <name>Zip</name>
        <full_name>Zip</full_name>
        <docblock line="315">
          <description><![CDATA[Manage zip code.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_ZIP_CODE zip} code, it
accepts a parameter which represents the address zip code or the requested operation,
depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="315" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="315" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="315" name="access" description="public"/>
          <tag line="315" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="315" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="315" name="see" description="\kOFFSET_ZIP_CODE" refers="\kOFFSET_ZIP_CODE"/>
        </docblock>
        <argument line="315">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="353" package="MyWrapper\Traits">
        <name>City</name>
        <full_name>City</full_name>
        <docblock line="353">
          <description><![CDATA[Manage city.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_CITY city}, it
accepts a parameter which represents the address city name or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="353" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="353" name="access" description="public"/>
          <tag line="353" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="353" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="353" name="see" description="\kOFFSET_CITY" refers="\kOFFSET_CITY"/>
        </docblock>
        <argument line="353">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="353">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="391" package="MyWrapper\Traits">
        <name>Province</name>
        <full_name>Province</full_name>
        <docblock line="391">
          <description><![CDATA[Manage province.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_PROVINCE province},
it accepts a parameter which represents the address province name, code or the
requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="391" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="391" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="391" name="access" description="public"/>
          <tag line="391" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="391" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="391" name="see" description="\kOFFSET_PROVINCE" refers="\kOFFSET_PROVINCE"/>
        </docblock>
        <argument line="391">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="391">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="429" package="MyWrapper\Traits">
        <name>Country</name>
        <full_name>Country</full_name>
        <docblock line="429">
          <description><![CDATA[Manage province.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the address {@link kOFFSET_COUNTRY country},
it accepts a parameter which represents the address country name, code or the
requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="429" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="429" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="429" name="access" description="public"/>
          <tag line="429" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="429" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="429" name="see" description="\kOFFSET_COUNTRY" refers="\kOFFSET_COUNTRY"/>
        </docblock>
        <argument line="429">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="429">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="470" package="MyWrapper\Traits">
        <name>Full</name>
        <full_name>Full</full_name>
        <docblock line="470">
          <description><![CDATA[Manage full address.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the full address as a
{@link kOFFSET_FULL string}, it accepts a parameter which represents the full
address or the requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>When retrieving values, if the full address was not set, this method will return in
any case the string representation of the full address.</p>]]></long-description>
          <tag line="470" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="470" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="470" name="access" description="public"/>
          <tag line="470" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="470" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="470" name="see" description="\kOFFSET_FULL" refers="\kOFFSET_FULL"/>
        </docblock>
        <argument line="470">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="470">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CMongoContainer.php" hash="3293a1dae367f6c48fa9960ec573b151" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Offsets.]]></description>
        <long-description><![CDATA[<p>This include file contains all default offset definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="45" package="MyWrapper\Persistence">
      <extends>CContainer</extends>
      <name>CMongoContainer</name>
      <full_name>\CMongoContainer</full_name>
      <docblock line="45">
        <description><![CDATA[Mongo persistent data store.]]></description>
        <long-description><![CDATA[<p>This class extends its {@link CContainer ancestor} to implement an object store based on
MongoCollection containers.</p>]]></long-description>
        <tag line="45" name="package" description="MyWrapper"/>
        <tag line="45" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="MyWrapper\Persistence">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="73">
          <description><![CDATA[Return container name.]]></description>
          <long-description><![CDATA[<p>This method should return the current container's name.</p>

<p>In this class we return the collection name.</p>]]></long-description>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="uses" description="\Container()" refers="\Container()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="111" package="MyWrapper\Persistence">
        <name>Container</name>
        <full_name>Container</full_name>
        <docblock line="111">
          <description><![CDATA[Manage persistent container.]]></description>
          <long-description><![CDATA[<p>We {@link CContainer::Container() overload} this method to ensure that the
provided container is a MongoCollection object.</p>]]></long-description>
          <tag line="111" name="param" description="Persistent container or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="111" name="access" description="public"/>
          <tag line="111" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="157" package="MyWrapper\Persistence">
        <name>Database</name>
        <full_name>Database</full_name>
        <docblock line="157">
          <description><![CDATA[Return database.]]></description>
          <long-description><![CDATA[<p>In this class we return the collection's database.</p>]]></long-description>
          <tag line="157" name="access" description="public"/>
          <tag line="157" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="157" name="uses" description="\Container()" refers="\Container()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="219" package="MyWrapper\Persistence">
        <name>UnserialiseData</name>
        <full_name>UnserialiseData</full_name>
        <docblock line="219">
          <description><![CDATA[Unserialise provided data element.]]></description>
          <long-description><![CDATA[<p>We {@link CContainer::UnserialiseData() implement} this method to convert all
standard {@link CDataType types} into custom Mongo data types.</p>

<p>In this class we parse the following types and {@link kTAG_TYPE offsets}:</p>

<ul>
<li><i>{@link CDataTypeMongoId CDataTypeMongoId} object or
    {@link kTYPE_MongoId kTYPE_MongoId} offset</i>: We return a MongoId
    object.
<li><i>{@link CDataTypeMongoCode CDataTypeMongoCode} object or
    {@link kTYPE_MongoCode kTYPE_MongoCode} offset</i>: We return a
    MongoCode object.
<li><i>{@link CDataTypeStamp CDataTypeStamp} object or
    {@link kTYPE_STAMP kTYPE_STAMP} offset</i>: We return a MongoDate
    object.
<li><i>{@link CDataTypeRegex CDataTypeRegex} object or
    {@link kTYPE_REGEX kTYPE_REGEX} offset</i>: We return a
    MongoRegex object.
<li><i>{@link CDataTypeInt32 CDataTypeInt32} object or
    {@link kTYPE_INT32 kTYPE_INT32} offset</i>: We return a MongoInt32
    object.
<li><i>{@link CDataTypeInt64 CDataTypeInt64} object or
    {@link kTYPE_INT64 kTYPE_INT64} offset</i>: We return a MongoInt64
    object.
<li><i>{@link CDataTypeBinary CDataTypeBinary} object or
    {@link kTYPE_BINARY kTYPE_BINARY} offset</i>: We return a MongoBinData
    object.
</ul>]]></long-description>
          <tag line="219" name="param" description="&amp;$theElement Element to encode." type="\reference" variable="$theElement">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="219" name="access" description="public"/>
        </docblock>
        <argument line="219">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="346" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="346">
          <description><![CDATA[Commit provided object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle MongoCollection object stores, this method will
store the object in the current container.</p>

<p>The method will check if the current container is a MongoCollection, if this is not
the case, it will raise an {@link kERROR_INVALID_STATE exception}.</p>

<p>If the provided modifiers indicate a {@link kFLAG_PERSIST_MODIFY modify} operation,
the method will return the modified object, in all other cases the method will return
the object identifier.</p>]]></long-description>
          <tag line="346" name="param" description="&amp;$theObject Object to commit." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="346" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="346" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="346" name="access" description="protected"/>
          <tag line="346" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="346" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="346" name="see" description="\kFLAG_PERSIST_INSERT" refers="\kFLAG_PERSIST_INSERT"/>
          <tag line="346" name="see" description="\kFLAG_PERSIST_REPLACE" refers="\kFLAG_PERSIST_REPLACE"/>
        </docblock>
        <argument line="346">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="716" package="MyWrapper\Persistence">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="716">
          <description><![CDATA[Load object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle MongoCollection object stores, this method will
retrieve the object from the current container.</p>

<p>The {@link Load() caller} will have resolved references andeventually extracted the
identifier from the provided parameter.</p>

<p>If the provided parameter is an array, the method will assume it is a query; if not,
the method will assume it is the value to match against the {@link kTAG_LID local}
identifier.</p>

<p>The method will use the <i>findOne</i> method to retrieve the object.</p>]]></long-description>
          <tag line="716" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="716" name="param" description="&amp;$theModifiers Load modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="716" name="access" description="protected"/>
          <tag line="716" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="716">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="716">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="746" package="MyWrapper\Persistence">
        <name>_Delete</name>
        <full_name>_Delete</full_name>
        <docblock line="746">
          <description><![CDATA[Delete object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle MongoCollection object stores, this method will
remove the object from the current container.</p>]]></long-description>
          <tag line="746" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="746" name="param" description="&amp;$theModifiers Load modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="746" name="access" description="protected"/>
          <tag line="746" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="746">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="746">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="819" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="819">
          <description><![CDATA[Prepare before a {@link _Commit() commit}.]]></description>
          <long-description><![CDATA[<p>We {@link CContainer::_PrepareCommit() overload} this method to handle the
identifier: if provided, it means that that is to become the object's unique
{@link kTAG_LID identifier}; if not provided and the object has an
{@link kTAG_LID identifier}, we use that one.</p>

<p>We also raise an exception if the provided object is not either an array or an
ArrayObject.</p>]]></long-description>
          <tag line="819" name="param" description="&amp;$theObject Object or data." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="819" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="819" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="819" name="access" description="protected"/>
          <tag line="819" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="819" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="819" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
          <tag line="819" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="819">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="819">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="819">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="877" package="MyWrapper\Persistence">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="877">
          <description><![CDATA[Prepare before a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to ensure that the parameters provided to the
{@link _Load() find} operation are valid.</p>

<p>In this class we {@link CContainer::_PrepareLoad() overload} this method to handle
identifiers provided as queries.</p>]]></long-description>
          <tag line="877" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="877" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="877" name="access" description="protected"/>
          <tag line="877" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="877" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="877" name="uses" description="\UnserialiseData()" refers="\UnserialiseData()"/>
          <tag line="877" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="877">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="877">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CMongoDataWrapper.inc.php" hash="9f00bff49f0d22af90d6341d056c9023" package="Default">
    <constant namespace="" line="33" package="Default">
      <name>kAPI_OP_GET_ONE</name>
      <full_name>\kAPI_OP_GET_ONE</full_name>
      <value><![CDATA['@GET-ONE']]></value>
      <docblock line="33">
        <description><![CDATA[GET-ONE web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the findOne Mongo operation, it will return the first
matched object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="47" package="Default">
      <name>kAPI_OP_GET_OBJECT_REF</name>
      <full_name>\kAPI_OP_GET_OBJECT_REF</full_name>
      <value><![CDATA['@GET-REF']]></value>
      <docblock line="47">
        <description><![CDATA[GET-OBJECT-REF web-service.]]></description>
        <long-description><![CDATA[<p>This tag defines a web service that returns an object by reference. It is equivalent to
the {@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE} operation, except that instead of using the
query provided in the {@link kAPI_DATA_QUERY kAPI_DATA_QUERY} parameter, it will try to
extract an identifier from the object provided in the
{@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter.</p>

<p>Note that as with other values in the {@link kAPI_DATA_OBJECT object} parameter, you must
{@link CDataType::SerialiseObject() serialise} the value.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="58" package="Default">
      <name>kAPI_STATUS_NATIVE</name>
      <full_name>\kAPI_STATUS_NATIVE</full_name>
      <value><![CDATA['native']]></value>
      <docblock line="58">
        <description><![CDATA[Native status.]]></description>
        <long-description><![CDATA[<p>This tag will hold the native status of the operation.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="69" package="Default">
      <name>kAPI_AFFECTED_COUNT</name>
      <full_name>\kAPI_AFFECTED_COUNT</full_name>
      <value><![CDATA['affected']]></value>
      <docblock line="69">
        <description><![CDATA[Count tag.]]></description>
        <long-description><![CDATA[<p>This tag will hold the total number of elements affected by the operation.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="83" package="Default">
      <name>kAPI_OPT_NO_RESP</name>
      <full_name>\kAPI_OPT_NO_RESP</full_name>
      <value><![CDATA[':@no-response']]></value>
      <docblock line="83">
        <description><![CDATA[No response option.]]></description>
        <long-description><![CDATA[<p>Can be a boolean or integer, defaults to FALSE. If TRUE, the
{@link kAPI_DATA_RESPONSE response} section will not be included in the result. This can
be useful when you are only interested in the status of the operation and not in the
response.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9Vu9u2kgQ/wxPMeqXtFFiCJVaKddrcRNTpWowB+ZO9wktZgxb7F13d02KKh6h79CHad/rZtd2QwJpdR8CsoQ9nr+/+c2sX73JF3mz2Tr+83F+TThu7P0db725uJZiLi+ZYf8olueoPC5ijxLbp7zr5nEyP241gXBxob90Uy6WsJPnrmQDM0y44IZLoT2ypQuiBdeQ8BQhlsIwLjTdZJkU28pQaJzBdA1mgdbo/8SMU6braI1uzuIlm2Pjel0pOKkupvWLSqxrA1aYhVSNxjVPlxJ8D358W8qEf/8KrzJP29u4G885U55U89fOZEXmlHXjzGu3of2y1X7R6rTPzqo+day087zV7lhph6StR+bYZdDzxx8iCAfB0I+uwj4E/fF1dT86IGcqysC7IDoN+wHc4PRUo1rxGO/QgS5qNBg2p39mQGGuUKMwpZxoMQsFgus1SOoWsyw5AW7ghqcp6ZtCiUpXaWMdZ8zECyKRnH7E2HgOdscwfApPlv7gahIOJpTYhBJ7ckJIHHWrNI/g2R93U3/7PriITodB78EKbOqldw3MakGlVRdkE6RXosrHclthggoFeYIrYzHATwVfsZTqBiOta1tQRf17Gd9/3mzDgp9jzE0ZmebLICMYEpopLub1RH0qUK0hV3LFZ4QSFzvBLv3In/w1Dob/3n/eQM4Uy9Cguu2BIXdl1vjZKEYlUrHkWxiecJrURMnMxagAuBd6a8pvo5XA7wi24tdN6EtTQc005WMWIMmpAoKzoJY8VF4VoEzpTllrWUBWlFSqt49dM9E6x/PzESrOUq4xdJZPn9l2l5KNi+Ti/op0LvCEKEXcK5lH9zXzHmcg7+yGUeRH4xFE/rvRYc+RerD6RNYVgjbMFHpnlhylFjKdOTTFtq6lsuNRTfh9MJflTfq08v52431U+jggwhfhuB8Fw70QHwThC1nYTcLmv0HXSMNSEEU2pYEhcDHFzO1eliRE7p8H8a8R93s9YnRwOXF1O8hr+wOCHg5+c94diNyStrvO6UvGolZD5ppCW3GKdEZMpUzRngeKtpPBuV06hCgrUnvqSej5H0YBnQwJRMNxcPLgjhwGowFVGfwMuKFdFNuQZZuFNDYgfUSmxdamJ22K5JWciJmwvkmNvruSIoWbBQq3ApmiAkS6djmSjbn18MA00tqfuaC3e73ObP8+jCb90FVRnsLnXSFPa4uSOW9eN/8DDpk4sg==</source>
  </file>
  <file path="classes/CMongoDataWrapper.php" hash="91c53dcbc15a748bc408cf4bd5dd1b2a" package="Default">
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name/>
      <docblock line="35">
        <description><![CDATA[Mongo query.]]></description>
        <long-description><![CDATA[<p>This include file contains the Mongo {@link CMongoQuery object} class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="42" type="Require Once" package="Default">
      <name/>
      <docblock line="42">
        <description><![CDATA[Session.]]></description>
        <long-description><![CDATA[<p>This include file contains common session tag definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="49" type="Require Once" package="Default">
      <name/>
      <docblock line="49">
        <description><![CDATA[Local definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions to this class.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="83" package="MyWrapper\Wrappers">
      <extends>CDataWrapper</extends>
      <name>CMongoDataWrapper</name>
      <full_name>\CMongoDataWrapper</full_name>
      <docblock line="83">
        <description><![CDATA[Mongo data wrapper.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CDataWrapper ancestor} to implement a web-service that
uses a MongoDB data store to manage objects.</p>

<p>This class implements the various elements declared in its {@link CDataWrapper ancestor}
and adds the following options:</p>

<ul>
<li><i>{@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE}</i>: This
    {@link kAPI_OPERATION operation} is equivalent to the
    {@link kAPI_OP_GET kAPI_OP_GET} operation, except that it will only return the first
    found element. It is equivalent to the Mongo findOne() method.
<li><i>{@link kAPI_OP_GET_OBJECT_REF kAPI_OP_GET_OBJECT_REF}</i>: This
    {@link kAPI_OPERATION operation} will return an object referenced by an identifier
    provided in the {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter. It is
    equivalent to the {@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE} operation, except that
    instead of using the query provided in the {@link kAPI_DATA_QUERY kAPI_DATA_QUERY}
    parameter, it will try to extract an identifier from the object provided in the
    {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter. Remember to
    {@link CDataType::SerialiseObject() serialise} the reference before providing it to
    the wrapper.
</ul>

<p>This class also implements a static interface that can be used to
{@link UnserialiseObject() unserialise} data
flowing to and from the service parameters and the Mongo container.</p>]]></long-description>
        <tag line="83" name="package" description="MyWrapper"/>
        <tag line="83" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="107" package="MyWrapper\Wrappers">
        <name>_InitResources</name>
        <full_name>_InitResources</full_name>
        <docblock line="107">
          <description><![CDATA[Initialise resources.]]></description>
          <long-description><![CDATA[<p>In this class we initialise the Mongo object into the
{@link kSESSION_MONGO kSESSION_MONGO} offset of the $_SESSION variable.</p>]]></long-description>
          <tag line="107" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="132" package="MyWrapper\Wrappers">
        <name>_ParseRequest</name>
        <full_name>_ParseRequest</full_name>
        <docblock line="132">
          <description><![CDATA[Parse request.]]></description>
          <long-description><![CDATA[<p>We overload this method to parse the no {@link kAPI_OPT_NO_RESP response} tag.</p>]]></long-description>
          <tag line="132" name="access" description="protected"/>
          <tag line="132" name="uses" description="\_ParseNoResponse()" refers="\_ParseNoResponse()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="160" package="MyWrapper\Wrappers">
        <name>_FormatRequest</name>
        <full_name>_FormatRequest</full_name>
        <docblock line="160">
          <description><![CDATA[Format request.]]></description>
          <long-description><![CDATA[<p>This method should perform any needed formatting before the request will be handled.</p>

<p>In this class we handle the parameters to be decoded</p>]]></long-description>
          <tag line="160" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="191" package="MyWrapper\Wrappers">
        <name>_ValidateRequest</name>
        <full_name>_ValidateRequest</full_name>
        <docblock line="191">
          <description><![CDATA[Validate request.]]></description>
          <long-description><![CDATA[<p>This method should check that the request is valid and that all required parameters
have been sent.</p>

<p>In this class we check if the provided {@link kAPI_DATA_OBJECT object} contains the
{@link kTAG_REFERENCE_ID identifier} when executing tree functions.</p>]]></long-description>
          <tag line="191" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="229" package="MyWrapper\Wrappers">
        <name>_ParseNoResponse</name>
        <full_name>_ParseNoResponse</full_name>
        <docblock line="229">
          <description><![CDATA[Parse no response.]]></description>
          <long-description><![CDATA[<p>This method will parse the no response operation.</p>]]></long-description>
          <tag line="229" name="access" description="protected"/>
          <tag line="229" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="266" package="MyWrapper\Wrappers">
        <name>_FormatDatabase</name>
        <full_name>_FormatDatabase</full_name>
        <docblock line="266">
          <description><![CDATA[Format database.]]></description>
          <long-description><![CDATA[<p>This method will format the request database.</p>

<p>In this class we set the database to a MongoDB object.</p>]]></long-description>
          <tag line="266" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="291" package="MyWrapper\Wrappers">
        <name>_FormatContainer</name>
        <full_name>_FormatContainer</full_name>
        <docblock line="291">
          <description><![CDATA[Format container.]]></description>
          <long-description><![CDATA[<p>This method will format the request container.</p>

<p>In this class we set the request container to a MongoCollection object.</p>]]></long-description>
          <tag line="291" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="324" package="MyWrapper\Wrappers">
        <name>_FormatQuery</name>
        <full_name>_FormatQuery</full_name>
        <docblock line="324">
          <description><![CDATA[Format query.]]></description>
          <long-description><![CDATA[<p>This method will format the request query.</p>

<p>In this class we set the query to a CMongoQuery object.</p>]]></long-description>
          <tag line="324" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="380" package="MyWrapper\Wrappers">
        <name>_FormatObject</name>
        <full_name>_FormatObject</full_name>
        <docblock line="380">
          <description><![CDATA[Format object.]]></description>
          <long-description><![CDATA[<p>This method will format the request object.</p>

<p>In this class we resolve the Mongo native types.</p>]]></long-description>
          <tag line="380" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="538" package="MyWrapper\Wrappers">
        <name>_ValidateOperation</name>
        <full_name>_ValidateOperation</full_name>
        <docblock line="538">
          <description><![CDATA[Validate request operation.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_OPERATION operation} parameter is valid.</p>

<p>In this class, if the query was omitted and an object reference was required, we
check if the object {@link kTAG_LID native} identifier is there: in that case
we compile the query with that value.</p>]]></long-description>
          <tag line="538" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="615" package="MyWrapper\Wrappers">
        <name>_ValidateObject</name>
        <full_name>_ValidateObject</full_name>
        <docblock line="615">
          <description><![CDATA[Validate request object.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_DATA_OBJECT object} contains the {@link kTAG_REFERENCE_ID identifier}
when executing tree functions.</p>]]></long-description>
          <tag line="615" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="651" package="MyWrapper\Wrappers">
        <name>_ValidateQuery</name>
        <full_name>_ValidateQuery</full_name>
        <docblock line="651">
          <description><![CDATA[Validate query reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_DATA_QUERY query} parameter is valid.</p>

<p>In this class we convert the query to the native Mongo format.</p>]]></long-description>
          <tag line="651" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="757" package="MyWrapper\Wrappers">
        <name>_HandleRequest</name>
        <full_name>_HandleRequest</full_name>
        <docblock line="757">
          <description><![CDATA[Handle request.]]></description>
          <long-description><![CDATA[<p>This method will handle the request.</p>]]></long-description>
          <tag line="757" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="830" package="MyWrapper\Wrappers">
        <name>_Handle_ListOp</name>
        <full_name>_Handle_ListOp</full_name>
        <docblock line="830">
          <description><![CDATA[Handle {@link kAPI_OP_HELP list} operations request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_HELP kAPI_OP_HELP} request, which
should return the list of supported operations.</p>]]></long-description>
          <tag line="830" name="param" description="Receives operations list." type="\reference" variable="$theList">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="830" name="access" description="protected"/>
        </docblock>
        <argument line="830">
          <name>$theList</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="879" package="MyWrapper\Wrappers">
        <name>_Handle_GetObjectByReference</name>
        <full_name>_Handle_GetObjectByReference</full_name>
        <docblock line="879">
          <description><![CDATA[Handle {@link kAPI_OP_GET_OBJECT_REF GetObjectByReference} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the
{@link kAPI_OP_GET_OBJECT_REF kAPI_OP_GET_OBJECT_REF} request, which returns an
object corresponding to the object {@link CMongoObjectReference reference} provided
in the {@link kAPI_DATA_OBJECT object} parameter.</p>]]></long-description>
          <tag line="879" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="922" package="MyWrapper\Wrappers">
        <name>_Handle_Count</name>
        <full_name>_Handle_Count</full_name>
        <docblock line="922">
          <description><![CDATA[Handle {@link kAPI_OP_COUNT COUNT} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_COUNT kAPI_OP_COUNT} request, which
returns the total count of a Mongo query.</p>]]></long-description>
          <tag line="922" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="952" package="MyWrapper\Wrappers">
        <name>_Handle_GetOne</name>
        <full_name>_Handle_GetOne</full_name>
        <docblock line="952">
          <description><![CDATA[Handle {@link kAPI_OP_GET_ONE GetOne} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE} request, which
corresponds to the findOne Mongo query.</p>]]></long-description>
          <tag line="952" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1026" package="MyWrapper\Wrappers">
        <name>_Handle_Get</name>
        <full_name>_Handle_Get</full_name>
        <docblock line="1026">
          <description><![CDATA[Handle {@link kAPI_OP_GET Get} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_GET kAPI_OP_GET} request, which
corresponds to the find Mongo query.</p>]]></long-description>
          <tag line="1026" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1190" package="MyWrapper\Wrappers">
        <name>_Handle_Match</name>
        <full_name>_Handle_Match</full_name>
        <docblock line="1190">
          <description><![CDATA[Handle {@link kAPI_OP_GET Get} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_GET kAPI_OP_GET} request, which
corresponds to the find Mongo query.</p>]]></long-description>
          <tag line="1190" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1349" package="MyWrapper\Wrappers">
        <name>_Handle_Set</name>
        <full_name>_Handle_Set</full_name>
        <docblock line="1349">
          <description><![CDATA[Handle {@link kAPI_OP_SET Set} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_SET kAPI_OP_SET} request, which
will insert/update the provided object.</p>]]></long-description>
          <tag line="1349" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1430" package="MyWrapper\Wrappers">
        <name>_Handle_Insert</name>
        <full_name>_Handle_Insert</full_name>
        <docblock line="1430">
          <description><![CDATA[Handle {@link kAPI_OP_INSERT Insert} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_INSERT kAPI_OP_INSERT} request, which
will insert the provided object.</p>]]></long-description>
          <tag line="1430" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1512" package="MyWrapper\Wrappers">
        <name>_Handle_BatchInsert</name>
        <full_name>_Handle_BatchInsert</full_name>
        <docblock line="1512">
          <description><![CDATA[Handle {@link kAPI_OP_BATCH_INSERT batch} Insert request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_BATCH_INSERT kAPI_OP_BATCH_INSERT}
request, which will insert the provided list of objects.</p>]]></long-description>
          <tag line="1512" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1594" package="MyWrapper\Wrappers">
        <name>_Handle_Update</name>
        <full_name>_Handle_Update</full_name>
        <docblock line="1594">
          <description><![CDATA[Handle {@link kAPI_OP_UPDATE Update} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_UPDATE kAPI_OP_UPDATE} request, which
will update the provided object.</p>]]></long-description>
          <tag line="1594" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1741" package="MyWrapper\Wrappers">
        <name>_Handle_Modify</name>
        <full_name>_Handle_Modify</full_name>
        <docblock line="1741">
          <description><![CDATA[Handle {@link kAPI_OP_MODIFY Modify} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_MODIFY kAPI_OP_MODIFY} request, which
will update the provided object.</p>

<p>The data provided in the {@link kAPI_DATA_OBJECT object} parameter will be scanned
and all <i>NULL</i> values will be set in the <i>$unset</i> array and the non
<i>NULL</i> values in the <i>$set</i> array.</p>]]></long-description>
          <tag line="1741" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1880" package="MyWrapper\Wrappers">
        <name>_Handle_Delete</name>
        <full_name>_Handle_Delete</full_name>
        <docblock line="1880">
          <description><![CDATA[Handle {@link kAPI_OP_DEL Delete} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_DEL kAPI_OP_DEL} request, whichwill delete
all objects matching the provided filter.</p>

<p>The method expects the <i>justOne</i> parameter in the provided
{@link kAPI_DATA_OPTIONS options}, if not provided, it will default to <i>FALSE</i>.</p>]]></long-description>
          <tag line="1880" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1989" package="MyWrapper\Wrappers">
        <name>_HandleOptions</name>
        <full_name>_HandleOptions</full_name>
        <docblock line="1989">
          <description><![CDATA[Handle options.]]></description>
          <long-description><![CDATA[<p>This method will be called before serialising the result if
{@link kAPI_DATA_OPTIONS options} are provided in the request.</p>

<p>In this class we don't do anything, derived classes should handle specific elements.</p>]]></long-description>
          <tag line="1989" name="param" description="&amp;$theResult Results list." type="\reference" variable="$theResult">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1989" name="param" description="Key/value options list." type="array" variable="$theOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1989" name="access" description="protected"/>
        </docblock>
        <argument line="1989">
          <name>$theResult</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1989">
          <name>$theOptions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CMongoDataWrapperClient.php" hash="995d806b648d74774143e0eb2af347d5" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Server definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all definitions of the server object.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="68" package="MyWrapper\Wrappers">
      <extends>CDataWrapperClient</extends>
      <name>CMongoDataWrapperClient</name>
      <full_name>\CMongoDataWrapperClient</full_name>
      <docblock line="68">
        <description><![CDATA[MongoDB data wrapper client.]]></description>
        <long-description><![CDATA[<p>This class represents a MongoDB web-services data wrapper client, it facilitates the job
of requesting information from servers derived from the
{@link CMongoDataWrapper CMongoDataWrapper} class.</p>

<p>This class adds the following properties to its {@link CWrapperClient ancestor}:</p>

<ul>
<li><i>{@link NoResponse() No} response</i>: This {@link kAPI_OPT_NO_RESP property}
    represents a switch that, if on, prevents the response from being sent. This can be
    useful when you are only interested in the status of the operation and not in the
    response.
</ul>

<p>The class also adds the following new operations:</p>

<ul>
<li><i>{@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE}</i>: This is the tag that represents the
    findOne Mongo operation, it will return the first matched object.
<li><i>{@link kAPI_OP_GET_OBJECT_REF kAPI_OP_GET_OBJECT_REF}</i>: This tag defines a web
    service that returns an object by reference. It is equivalent to the
    {@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE} operation, except that instead of using the
    query provided in the {@link kAPI_DATA_QUERY kAPI_DATA_QUERY} parameter, it will try
    to extract an identifier from the object provided in the
    {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter.
</ul>]]></long-description>
        <tag line="68" name="package" description="MyWrapper"/>
        <tag line="68" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="114" package="MyWrapper\Wrappers">
        <name>Operation</name>
        <full_name>Operation</full_name>
        <docblock line="114">
          <description><![CDATA[Manage operation.]]></description>
          <long-description><![CDATA[<p>We {@link CDataWrapperClient::Operation() overload} this method to add the following
allowed operations:</p>

<ul>
<li><i>{@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE}</i>: This is the tag that represents
    the findOne Mongo operation, it will return the first matched object.
<li><i>{@link kAPI_OP_GET_OBJECT_REF kAPI_OP_GET_OBJECT_REF}</i>: This tag defines a
    web-service that returns an object by reference. It is equivalent to the
    {@link kAPI_OP_GET_ONE kAPI_OP_GET_ONE} operation, except that instead of using
    the query provided in the {@link kAPI_DATA_QUERY kAPI_DATA_QUERY} parameter, it
    will try to extract an identifier from the object provided in the
    {@link kAPI_DATA_OBJECT kAPI_DATA_OBJECT} parameter.
</ul>]]></long-description>
          <tag line="114" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="114" name="access" description="public"/>
          <tag line="114" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="114" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="114" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="114" name="see" description="\kAPI_OPERATION" refers="\kAPI_OPERATION"/>
          <tag line="114" name="see" description="\kAPI_OP_GET_ONE" refers="\kAPI_OP_GET_ONE"/>
        </docblock>
        <argument line="114">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="169" package="MyWrapper\Wrappers">
        <name>NoResponse</name>
        <full_name>NoResponse</full_name>
        <docblock line="169">
          <description><![CDATA[Manage no response switch.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the no {@link kAPI_OPT_NO_RESP response} switch, it
accepts a boolean which represents either the on/off value, or the requested
operation:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="169" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="169" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="169" name="access" description="public"/>
          <tag line="169" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="169" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="169" name="see" description="\kAPI_OPT_NO_RESP" refers="\kAPI_OPT_NO_RESP"/>
        </docblock>
        <argument line="169">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CMongoGridContainer.php" hash="170717a75234475432e63985a3e2d434" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="38" package="MyWrapper\Persistence">
      <extends>CMongoContainer</extends>
      <name>CMongoGridContainer</name>
      <full_name>\CMongoGridContainer</full_name>
      <docblock line="38">
        <description><![CDATA[Mongo persistent file store.]]></description>
        <long-description><![CDATA[<p>This class extends its {@link CMongoContainer ancestor} to implement a file store based
on MongoGridFS containers.</p>]]></long-description>
        <tag line="38" name="package" description="MyWrapper"/>
        <tag line="38" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="MyWrapper\Persistence">
        <name>Container</name>
        <full_name>Container</full_name>
        <docblock line="66">
          <description><![CDATA[Manage persistent container.]]></description>
          <long-description><![CDATA[<p>We {@link CMongoContainer::Container() overload} this method to ensure that the
provided container is a MongoGridFS object.</p>]]></long-description>
          <tag line="66" name="param" description="Persistent container or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="66" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="66" name="access" description="public"/>
          <tag line="66" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="MyWrapper\Persistence">
        <name>Commit</name>
        <full_name>Commit</full_name>
        <docblock line="143">
          <description><![CDATA[Commit provided object.]]></description>
          <long-description><![CDATA[<p>We {@link CMongoContainer::Commit() overload} this method to handle committing files
as opposed to documents. We handle the provided parameters as follows:</p>

<ul>
<li><b>$theObject</b>: This parameter represents the file to be stored:
 <ul>
    <li><i>SplFileInfo</i>: In this case the parameter is interpreted as a file path,
        it will be resolved with the <i>getRealPath()</i> method.
    <li><i>other</i>: In all other cases the parameter is interpreted as the file
        contents provided as a binary string.
 </ul>
<li><b>$theIdentifier</b>: If provided, this parameter is interpreted as the file's
    metadata and will be enclosed in an array labeled <i>metadata</i>.
<li><b>$theModifiers</b>: This parameter is initialised to
    {@link kFLAG_PERSIST_INSERT kFLAG_PERSIST_INSERT}, since this is the default and
    only operation possible.
</ul>

<p>The method will return the object's key within the container or raise an exception if
the operation was not successful.</p>

<p>The only reason to overload this method is to write this documentation and set the
default modifier, there is no functional difference between this method and its
{@link CMongoContainer::Commit() inherited} version.</p>]]></long-description>
          <tag line="143" name="param" description="&amp;$theObject Object to commit." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="143" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="143" name="param" description="Commit modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="143" name="access" description="public"/>
          <tag line="143" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="143" name="uses" description="\_PrepareCommit()" refers="\_PrepareCommit()"/>
          <tag line="143" name="uses" description="\_Commit()" refers="\_Commit()"/>
          <tag line="143" name="uses" description="\_FinishCommit()" refers="\_FinishCommit()"/>
          <tag line="143" name="see" description="\kFLAG_PERSIST_INSERT" refers="\kFLAG_PERSIST_INSERT"/>
        </docblock>
        <argument line="143">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_PERSIST_INSERT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="201" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="201">
          <description><![CDATA[Commit provided object.]]></description>
          <long-description><![CDATA[<p>We implement this method to handle MongoGridFS object stores, this method will store
the object in the current container.</p>

<p>This particular container type only supports creating new records, that is, files are
added to the grid and cannot be modified. Also, files can be added either by path or
by content, depending on the provided object parameter.</p>

<p>The parameters accepted by this method are:</p>

<ul>
<li><b>&$theObject</b>: This parameter holds the file to be added:
 <ul>
    <li><i>SplFileInfo</i>: In this case the parameter is interpreted as a file path,
        it will be resolved with the <i>getRealPath()</i> method.
    <li><i>other</i>: In all other cases the parameter is interpreted as the file
        contents provided as a binary string.
 </ul>
<li><b>$theIdentifier</b>: This parameter is interpreted as the file's metadata and
    has been normalised before this method.
<li><b>$theModifiers</b>: We ignore this parameter.
</ul>

<p>The</p>]]></long-description>
          <tag line="201" name="param" description="&amp;$theObject Object to commit." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="201" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="201" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="201" name="access" description="protected"/>
          <tag line="201" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="201" name="uses" description="\Container()" refers="\Container()"/>
        </docblock>
        <argument line="201">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="260" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="260">
          <description><![CDATA[Prepare before a {@link _Commit() commit}.]]></description>
          <long-description><![CDATA[<p>We {@link CMongoContainer::_PrepareCommit() override} this method to reset the
parameters that are not relevant to the operation, that is, we set the identifier to
an empty array if <i>NULL</i> or enclose it in a <i>metadata</i> array if not and
force the modifiers to {@link kFLAG_PERSIST_INSERT kFLAG_PERSIST_INSERT}.</p>

<p>We also check if the native container is of the correct type.</p>

<p>Note that we do not call the parent method, but the grandpa method explicitly.</p>]]></long-description>
          <tag line="260" name="param" description="&amp;$theObject Object or data." type="\reference" variable="$theObject">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="260" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="260" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="260" name="access" description="protected"/>
          <tag line="260" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="260" name="uses" description="\Container()" refers="\Container()"/>
          <tag line="260" name="see" description="\kFLAG_PERSIST_INSERT" refers="\kFLAG_PERSIST_INSERT"/>
          <tag line="260" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="260">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJztWt1uGzcWvh49BRsUiWQoUpqLLuDYamR5nApryYYkt+iVQM1QFtej4ZScsSI03jfoO+zD7L7XHh5yfjWy42y8NbpbFIU8JM/5eHh+Ph726IdoFTUa3YODBjkgR7w3GInwWnyQ3B+IMKY8ZPKoy3vEC6hSxGdLHvKYi7AD8/WS2YorsuQBI56Zr0i8YjvTiViSo0W99EWPbFbcWxG+jgK2ZmGsCNWycfLpiRGvYiGZ1eq8j6h3Q6+ZM9r+LGkUMYlfVbJIBy6ZVFzFLPRYuoYm8UpIxxnx4EaQfof86x83Ysn/+Ts5WneU/um99645lR0hr3u45FZLEaHzXefNG/L2L90333ffvvnuLYx1tdGOn+Yfrbr2n4PiSI0tO3CYtXN3pDwNcGMV9Is+GF4fWclPeOgFic9q/CWiEs59x21UB00t2a8Jl2wuQGiT3Fz2Zz/Oz4cnk/7kl/n04moycDsvjDlKpnhBWu8yQDhMotQt4l2vMhgNBPYR5viAGHzxt/cBD29IRQGhdod3JBa56xJaEEwWVDFfi4YIyI7rbJruHcB8qUd3GwZojRdk4CuIG781HOePdtvLq5Pz4YCM3NGJOyHD8cydnPUHbr2L/xfdtuGQhvMkpgHJB052CHX7cp5iY3pTjvZ9Rzs/DcGFit6feWBHT8BJP7M9rn54mP1stoiApBgI6oPf63hZM8iqvo4BFqoEfD5e0VjHNMqMpLjlPvNzfQTW0FIwiMXfmBfnOCAUJF2TNf/IfLTQtyDtJxokTPtPzRaIgH9hb9QUpoKMhRABoyEKuWbxRYACZ5Mrl8CfRAQ+udWCC8qpB2GtSJQsAu6ZT5LFiQwNIP2l23DMMFkmoYflLTcQydCSYzK+Oj9vE6sa/j7rn09d0mo4OhS7XfwP+ZGGPmQM0CI5u2V6Nz4LWKxRmUl82STNgtxjIxnkOOTTp+oQKmlpLY5joZv0WjzHHGaOr/XOuiSAOj7u6WyRoxysmHeTWSvHleuGXB7rpAilvni8XwlHvJJiQ0K2IQP3o8cibfYmeTEMARIv+le8jdiLdsOKIOTGnUwuJvPh+Kf++fB0ftmf9EcupJ3ilJE7nfY/uPPZL5fuHOcXRqmUdNskrzLQr8hxr7DvlgUMaL95/w0ibjh3RNssD7Lnk3ov3cl0OJ2544G7k3//tNl3veZx7a6ePvca5XkmrKa7e9OuXnpfzl2Z3OHhxJiH18g+FAqmCrJiJICB6Jm+8BLk1h2t0a5D6pUCw5QJaUcqvXQpgkBs1GGG8ygJemjNo4D3gMvrALjAvWgKf2jYUyYD0lkkmUIyr7UgKQIYC0uNfBTs5FKNWN6bRsEZzB2GS6EvHodkGJpNe8ClUq5odSClhB+gKYYNUJWyr4jGq7YR64DtNzwItGYAJIJbmLnh8QplgUJIOhNGg0tY0mzhXceYt1OCJWC2zABRkIdfEJV6EFZqAQtJJyu0TGZ7hL7gIZVbsI+Eg+xY+3RrzD70YTVfcnN7AkTLTFLbGOtzwLxSBg7Moz6NKTBaPzMV0MwAXYfDbkOTA0lAF1CYfG21dJE2SaeKbyR8RKdqPQMRAb2HvG1808CwQXBzdt7/MLdJCrL21J3Maj/etYmCCwUzG+ZmX3B1oEkQ660YqSIMtjk5IBAOii8CU/Bz4+JfM1hvIwutYGuWFmti9pUiN2yLzsPN9xIFkRT2o43F0vpE+BIlo4gMwwbOIBQxUQlSjWUSdEoYELJkVMFciJg09kuhr7cryEby2O4/DW+jQp+kYjkNS82ytgejvYQBV+MaScZiaEBgeAkD2qwLFm8YC0tqtVy4EqHMB5MWD0EHAISsZe/ROxxPMqsNCy15mecU+GB+6H2a9FZidmV2mAdEtoxnn8qMkMfwzfDAkqs6tkpkNlKPI4Xma6KzwfwSkh8wndQSxaG6b2cQDmpVHDGjirH7wmE668+ArYwHF6fu6V5eikKLls2ZTdlyKV0tDWfmgdFaKJbL7vA7o7agtaKtXRGPFMryvYw9mVN/DtRpcjFzBzP3lIz6YyCKI3c8+18hT/Pnzp7y3ks9Odq9axoKotqlBZjzcSDP2TaV2GSfSLnn6pxWuJh7SUBl5TZiMrpKgIxJKPoe5HakavoyI5knpI9Q4NrM4QcSOCi4Bgb1fcPfNIJr2ATmYI+GuoJAnbbZyu+QfqBEuhrG9aBZzDgylcUWaRFUKhQMf1oa0obyELHQ15BEWOaE1gJZ8S5XqiJj9HTNgxUgt1QxJNtPIV8+wCFXcEHfoY+4qf+zx6/HHuvo2R7CSIpc0cBZwYSF5gmhkGtL6RZsKSQr+sFDFFGH8XWYLSr72y5P+3o8om7l57OJutWPYxRSxCDfUIh7SUWhBZfW+nRtXu7ndfW+uql2BWe1HzUEck4C4VGTDul13vD5Nk9sx7qAc/W6VwD2Tk8RSH01YUgbJ4ouGfZMsPGGswrq+r6f5qadxlJq/byzVAjwUmcpR/a6h0lczyoKeV0O1Yzm4MlVDFQeSzeUtaVKfal9+k+2MVMPMKCi5FSmJT/zZ8l+ir2jq9nwfDgbutM/Of0pkfk/hANZBGlapenVK7tM2MR291lNpertBC+YQCzYTnNJ928Krfy82CNX0Yg0CZEsYLc0jFOSkl10C5xmw9LraCGT2ps/3pjXUby1TQa+1HVVX0WwnMLF2vYi4OaJ3Yhq+yFfp+HYwkTAVJ6p+Fn61Qgf3WUo2ZQCxyIedsJBnRYewlZvWfl5QyxtcwD4oi48QAFzKWMR2zcSMIovELOnGUHhGdQcQZssktjyPthVRNOjYR8juOTxONh+0YVavy+A6Z5tGTQj2O/PH1+znn/h5939JfLLLtF2hXk0uLicDS/G89FwOh2OP+x9SqgOoNB7qnQ5Av+jYj2FsEq7O8U3MFuvK1f4ZvnDS9L8e9k2o/70r60W+VRrskrhntJbVvYIq1TpgeNKuXvXqLZqbMOhInWgYyF9W8/Zoxkf7M9jj+o1lFVOmHmtr9lL9vJWNFqN5+BT3EuwJ8T/3PIeYwdkKRAU+E6HXwpspq9nGtAtYp/sLK26ChWTpkdqJqQCET0SJGNn+xiYLS5bGDUYZsYCxfJ19Sj2SEmZXJp2zQuYloO0CgUMRASKSKbqkYJwYUp+SkfbwRLfwJG9/9MDTGr80Gv8Gyoeb14=</source>
  </file>
  <file path="classes/CMongoQuery.php" hash="92ac0145d391e2b4b45c7123049fc1b0" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Mongo container.]]></description>
        <long-description><![CDATA[<p>This include file contains the class definitions of the Mongo container.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="48" package="MyWrapper\Persistence">
      <extends>CQuery</extends>
      <name>CMongoQuery</name>
      <full_name>\CMongoQuery</full_name>
      <docblock line="48">
        <description><![CDATA[Mongo query.]]></description>
        <long-description><![CDATA[<p>This class extends its {@link CQuery ancestor} to implement a public method that will
convert the current object's query into a query suitable to be submitted to a Mongo
database.</p>

<p>This class implements a query that {@link Export() exports} as a Mongo query.</p>]]></long-description>
        <tag line="48" name="package" description="MyWrapper"/>
        <tag line="48" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="MyWrapper\Persistence">
        <name>Export</name>
        <full_name>Export</full_name>
        <docblock line="79">
          <description><![CDATA[Export query.]]></description>
          <long-description><![CDATA[<p>The method will return an array suitable to be provided as a MongoDB query, the method
requires a container that will take care of converting query arguments to native data
types, this container must be an instance of {@link CMongoContainer CMongoContainer},
or the method will raise an exception.</p>]]></long-description>
          <tag line="79" name="param" description="Query container." type="\CMongoContainer" variable="$theContainer">
            <type by_reference="false">\CMongoContainer</type>
          </tag>
          <tag line="79" name="access" description="public"/>
          <tag line="79" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="138" package="MyWrapper\Persistence">
        <name>_ValidateCondition</name>
        <full_name>_ValidateCondition</full_name>
        <docblock line="138">
          <description><![CDATA[Validate condition.]]></description>
          <long-description><![CDATA[<p>This method expects a condition as its argument, it will check if it is a valid
condition, then it will {@link _ValidateStatement() validate} all condition
statements.</p>

<p>In this class we handle queries to Mongo databases, so the depth of the query
conditions cannot go beyond 2 levels.</p>

<p>We overload this method to prevent nesting OR conditions.</p>]]></long-description>
          <tag line="138" name="param" description="Boolean condition." type="string" variable="$theCondition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="Statements list." type="array" variable="$theStatements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="param" description="[PRIVATE] condition level." type="integer" variable="$theLevel">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="138" name="access" description="protected"/>
        </docblock>
        <argument line="138">
          <name>$theCondition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$theStatements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$theLevel</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="194" package="MyWrapper\Persistence">
        <name>_ConvertCondition</name>
        <full_name>_ConvertCondition</full_name>
        <docblock line="194">
          <description><![CDATA[Convert condition.]]></description>
          <long-description><![CDATA[<p>This method will convert the statements of the provided condition to Mongo format.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>&$theQuery</b>: Reference to an array that will receive the converted
    condition.
<li><b>$theContainer</b>: Data container, must be derived from
    {@link CMongoContainer CMongoContainer}.
<li><b>$theCondition</b>: Boolean condition code.
<li><b>$theStatements</b>: List of condition statements.
</ul>]]></long-description>
          <tag line="194" name="param" description="&amp;$theQuery Receives converted query." type="\reference" variable="$theQuery">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="194" name="param" description="Query container." type="\CMongoContainer" variable="$theContainer">
            <type by_reference="false">\CMongoContainer</type>
          </tag>
          <tag line="194" name="param" description="Boolean condition." type="string" variable="$theCondition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="param" description="Statements list." type="array" variable="$theStatements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="194" name="access" description="protected"/>
        </docblock>
        <argument line="194">
          <name>$theQuery</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="194">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$theCondition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$theStatements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="275" package="MyWrapper\Persistence">
        <name>_ConvertStatement</name>
        <full_name>_ConvertStatement</full_name>
        <docblock line="275">
          <description><![CDATA[Convert statement.]]></description>
          <long-description><![CDATA[<p>This method will convert the statement to Mongo format.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>&$theQuery</b>: Reference to an array that will receive the converted
    statement.
<li><b>$theContainer</b>: Data container, must be derived from
    {@link CMongoContainer CMongoContainer} and we assume this check has been done by
    the {@link _ConvertCondition() caller}.
<li><b>$theCondition</b>: Boolean condition code.
<li><b>$theStatement</b>: Statement.
</ul>]]></long-description>
          <tag line="275" name="param" description="&amp;$theQuery Receives converted statement." type="\reference" variable="$theQuery">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="275" name="param" description="Query container." type="\CMongoContainer" variable="$theContainer">
            <type by_reference="false">\CMongoContainer</type>
          </tag>
          <tag line="275" name="param" description="Boolean condition." type="string" variable="$theCondition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="Statement." type="array" variable="$theStatement">
            <type by_reference="false">array</type>
          </tag>
          <tag line="275" name="access" description="protected"/>
        </docblock>
        <argument line="275">
          <name>$theQuery</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="275">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$theCondition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$theStatement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="781" package="MyWrapper\Persistence">
        <name>_OrderRange</name>
        <full_name>_OrderRange</full_name>
        <docblock line="781">
          <description><![CDATA[Order range elements.]]></description>
          <long-description><![CDATA[<p>This method will order the provided range elements, the method accepts an array of
two elements which represent the range bounds and will return an array with the two
provided elements sorted.</p>

<p>The method accepts three parameters:</p>

<ul>
<li><b>$theRange</b>: An array containing two elements representing the range
    bounds.
<li><b>$theContainer</b>: The {@link CMongoContainer container} on which the query
    will be executed.
<li><b>$theType</b>: The data type of the range elements.
</ul>

<p>The method expects the range elements to be in
{@link CDataType::SerialiseData() serialised} format, these elements will be
{@link CContainer::UnserialiseData() converted} by this method which will return
them in sorted order.</p>]]></long-description>
          <tag line="781" name="param" description="Range elements." type="mixed" variable="$theRange">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="781" name="param" description="Query container." type="\CMongoContainer" variable="$theContainer">
            <type by_reference="false">\CMongoContainer</type>
          </tag>
          <tag line="781" name="param" description="Elements data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="781" name="access" description="protected"/>
          <tag line="781" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="781">
          <name>$theRange</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="781">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>CMongoContainer</type>
        </argument>
        <argument line="781">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CObject.php" hash="66f561c01452b35d047fb3c8abc7a4ec" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Exceptions.]]></description>
        <long-description><![CDATA[<p>This include file contains all exception class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Flags.]]></description>
        <long-description><![CDATA[<p>This include file contains all flags definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="99" package="MyWrapper\Framework">
      <extends/>
      <name>CObject</name>
      <full_name>\CObject</full_name>
      <docblock line="99">
        <description><![CDATA[Common static ancestor.]]></description>
        <long-description><![CDATA[<p>This <i>abstract</i> class implements a common interface shared by all classes in this
library.</p>

<p>The library uses the following conventions:</p>

<p><b>Naming standards</b></p>

<ul>
<li><b>Classes</b>: All class names in this library start with a capital (<i>C</i>), for
    instance <i>CAnotherClass</i>, followed by a name starting with another capital
    letter.
<li><b>Public methods</b>: All public method names should begin with a capital letter,
    for instance <i>AnotherMethod()</i>.
<li><b>Protected and private methods</b>: All protected and private method names should
    begin with an underscore, for instance <i>_AnotherMethod()</i>. Another case in
    which names would start with an underscore is with core static methods.
<li><b>Members</b>: All members should start with lowercase (<i>m</i>), followed
    by a capital letter. For instance <i>mMember</i>.
<li><b>Static members</b>: All static members should begin with lowercase (<i>s</i>), so
    a static member could be <i>CSomeClass::$sStaticMember</i>.
<li><b>Definitions</b>: All definitions should start with a (<i>k</i>) and be followed
    by a code and ending with an uppercase name, for instance <i>kTAG_DOMAIN</i> would
    be the definition of a domain tag.
<li><b>Method arguments</b>: All method arguments should start with either <i>the</i>,
    for parameters holding miscellaneous values, such as <i>$theVariable</i>,, or with a
    lowercase verb, such as <i>is</i>, <i>has</i> or <i>do</i>, for parameters holding a
    flag value, such as <i>isProtected</i>.
<li><b>Local variables</b>: All local variables should be in <i>lowercase</i>, for
    instance <i>$local_counter</i>.
</ul>

<p>In general, abstract classes implement public interfaces which call a protected
implementation. Usually the public methods should not be overridden, while derived
classes may implement custom behaviours in the protected interface.</p>

<p>This class implements the following interfaces:</p>

<ul>
<li><i>Offsets</i>: In this class there cannot be an offset with a <i>NULL</i> value,
    the offset itself should be {@link offsetUnset() deleted} in that case. Because of
    this we also override the inherited behaviour by suppressing notices and warnings
    when {@link offsetGet() getting} non-existant offsets.
<li><i>JSON encoding</i>: Derived classes will use JSON for web-services, so we provide
    two static methods to {@link JsonEncode() encode} and {@link JsonDecode() decode}
    JSON strings allowing for exceptions on errors.
<li><i>String formatting</i>: We provide a generalised static method to
    {@link StringNormalise() format} strings which accepts a bitfield parameter that
    indicates which operation to perform, such as {@link kFLAG_MODIFIER_UTF8 UTF8}
    encode, {@link kFLAG_MODIFIER_LTRIM left} and {@link kFLAG_MODIFIER_RTRIM right}
    trim, {@link kFLAG_MODIFIER_NULL NULL} handling, {@link kFLAG_MODIFIER_NOCASE case}
    insensitive conversion, {@link kFLAG_MODIFIER_URL URL},
    {@link kFLAG_MODIFIER_HTML HTML} and {@link kFLAG_MODIFIER_HEX HEX} encoding and
    {@link kFLAG_MODIFIER_HASH hashing}.
<li><i>Time formatting</i>: We provide a generalised static
    {@link DurationString() method} to display duration strings.
</ul>]]></long-description>
        <tag line="99" name="package" description="MyWrapper"/>
        <tag line="99" name="subpackage" description="Framework"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="125" package="MyWrapper\Framework">
        <name>JsonEncode</name>
        <full_name>JsonEncode</full_name>
        <docblock line="125">
          <description><![CDATA[Return JSON encoded data.]]></description>
          <long-description><![CDATA[<p>This method will return the provided array or object into a JSON encoded string.</p>]]></long-description>
          <tag line="125" name="param" description="Input data." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="125" name="static" description=""/>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$theData</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="186" package="MyWrapper\Framework">
        <name>JsonDecode</name>
        <full_name>JsonDecode</full_name>
        <docblock line="186">
          <description><![CDATA[Return JSON decoded data.]]></description>
          <long-description><![CDATA[<p>This method will return an array representation of the provided JSON string.</p>]]></long-description>
          <tag line="186" name="param" description="Input data." type="string" variable="$theData">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="static" description=""/>
          <tag line="186" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$theData</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="307" package="MyWrapper\Framework">
        <name>StringNormalise</name>
        <full_name>StringNormalise</full_name>
        <docblock line="307">
          <description><![CDATA[Normalise string.]]></description>
          <long-description><![CDATA[<p>This method can be used to format a string, the provided modifiers bitfield
determines what manipulations are applied:</p>

<ul>
<li><b>{@link kFLAG_MODIFIER_UTF8 kFLAG_MODIFIER_UTF8}</b>: Convert the string to
    the <i>UTF8</i> character set.
<li><b>{@link kFLAG_MODIFIER_LTRIM kFLAG_MODIFIER_LTRIM}</b>: Apply left trimming to
    the string.
<li><b>{@link kFLAG_MODIFIER_RTRIM kFLAG_MODIFIER_RTRIM}</b>: Apply right trimming
    to the string.
<li><b>{@link kFLAG_MODIFIER_TRIM kFLAG_MODIFIER_TRIM}</b>: Apply both left and
    right trimming to the string.
<li><b>{@link kFLAG_MODIFIER_NULL kFLAG_MODIFIER_NULL}</b>: If this flag is set and
    the resulting string is empty, the method will return <i>NULL</i>.
 <ul>
    <li><b>{@link kFLAG_MODIFIER_NULLSTR kFLAG_MODIFIER_NULLSTR}</b>: If this flag
        is set and the resulting string is empty, the method will return the
        '<i>NULL</i>' string; this option implies that the
        {@link kFLAG_MODIFIER_NULL kFLAG_MODIFIER_NULL} is also set.
 </ul>
<li><b>{@link kFLAG_MODIFIER_NOCASE kFLAG_MODIFIER_NOCASE}</b>: Set the string to
    lowercase, this is the default way to generate a case insensitive string.
<li><b>{@link kFLAG_MODIFIER_URL kFLAG_MODIFIER_URL}</b>: URL-encode the string;
    note that this option and {@link kFLAG_MODIFIER_HTML kFLAG_MODIFIER_HTML} are
    mutually exclusive.
<li><b>{@link kFLAG_MODIFIER_HTML kFLAG_MODIFIER_HTML}</b>: HTML-encode the string;
    note that this option and {@link kFLAG_MODIFIER_URL kFLAG_MODIFIER_URL} are
    mutually exclusive.
<li><b>{@link kFLAG_MODIFIER_HEX kFLAG_MODIFIER_HEX}</b>: Convert the string to
    hexadecimal; note that this option and {@link kFLAG_MODIFIER_MASK_HASH hashing}
    are mutually exclusive.
 <ul>
    <li><b>{@link kFLAG_MODIFIER_HEXEXP kFLAG_MODIFIER_HEXEXP}</b>: Convert the
        string to a hexadecimal expression; note that this option implies
        {@link kFLAG_MODIFIER_HEX kFLAG_MODIFIER_HEX}, and this option and
        {@link kFLAG_MODIFIER_MASK_HASH hashing} are mutually exclusive.
 </ul>
<li><b>{@link kFLAG_MODIFIER_HASH kFLAG_MODIFIER_HASH}</b>: If this bit is set
    the resulting string will be hashed using the <i>md5</i> algorithm resulting in
    a 32 character hexadecimal string; this option is mutually exclusive with the
    {@link kFLAG_MODIFIER_MASK_HEX kFLAG_MODIFIER_MASK_HEX} option.
 <ul>
    <li><b>{@link kFLAG_MODIFIER_HASH_BIN kFLAG_MODIFIER_HASH_BIN}</b>: If this bit
        is set, the resulting value should be a 16 character binary string; if the
        bit is <i>OFF</i>, the resulting value should be a 32 character hexadecimal
        string.
 </ul>
</ul>

<p>The order in which these modifications are applied are as stated.</p>]]></long-description>
          <tag line="307" name="param" description="String to normalise." type="string" variable="$theString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="param" description="Modifiers bitfield." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="307" name="static" description=""/>
          <tag line="307" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="307" name="see" description="\kFLAG_DEFAULT," refers="\kFLAG_DEFAULT,"/>
          <tag line="307" name="see" description="\kFLAG_MODIFIER_UTF8" refers="\kFLAG_MODIFIER_UTF8"/>
          <tag line="307" name="see" description="\kFLAG_MODIFIER_LTRIM," refers="\kFLAG_MODIFIER_LTRIM,"/>
          <tag line="307" name="see" description="\kFLAG_MODIFIER_NULL," refers="\kFLAG_MODIFIER_NULL,"/>
          <tag line="307" name="see" description="\kFLAG_MODIFIER_NOCASE," refers="\kFLAG_MODIFIER_NOCASE,"/>
          <tag line="307" name="see" description="\kFLAG_MODIFIER_HEX," refers="\kFLAG_MODIFIER_HEX,"/>
          <tag line="307" name="see" description="\kFLAG_MODIFIER_HASH," refers="\kFLAG_MODIFIER_HASH,"/>
        </docblock>
        <argument line="307">
          <name>$theString</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="437" package="MyWrapper\Framework">
        <name>DurationString</name>
        <full_name>DurationString</full_name>
        <docblock line="437">
          <description><![CDATA[Return a formatted duration.]]></description>
          <long-description><![CDATA[<p>This function will return a formatted duration string in H:MM:SS:mmmmm format, where
<i>H</i> stands for hours, <i>M</i> stands for minutes, <i>S</i> stands for seconds
and <i>m</i> stands for milliseconds, from the value of <i>microtime( TRUE )</i>.</p>

<p><i>Note: The provided value should be a difference between two timestamps taken with
microtime( true ).</i></p>]]></long-description>
          <tag line="437" name="param" description="Microtime difference." type="float" variable="$theTime">
            <type by_reference="false">float</type>
          </tag>
          <tag line="437" name="static" description=""/>
          <tag line="437" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="437">
          <name>$theTime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="493" package="MyWrapper\Framework">
        <name>ManageMember</name>
        <full_name>ManageMember</full_name>
        <docblock line="493">
          <description><![CDATA[Manage a member.]]></description>
          <long-description><![CDATA[<p>This library implements a standard interface for managing object properties using
methods, this method implements this interface:</p>

<ul>
<li><b>$theMember</b>: The member to manage, it is a reference to the element being
    managed.
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the member's current value.
    <li><i>FALSE</i>: Reset the member, <i>NULL</i> by default.
    <li><i>other</i>: Any other type represents the member's new value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value of the member <i>before</i> it was eventually
        modified.
    <li><i>FALSE</i>: Return the value of the member <i>after</i> it was eventually
        modified.
 </ul>
</ul>]]></long-description>
          <tag line="493" name="param" description="&amp;$theMember Offset." type="string" variable="$theMember">
            <type by_reference="false">string</type>
          </tag>
          <tag line="493" name="param" description="Value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="493" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="493" name="static" description=""/>
          <tag line="493" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="493">
          <name>$theMember</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="493">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="493">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/COntologyEdge.php" hash="3404da79f52adbf3140b51c7d932796f" package="Default">
    <namespace-alias name="Transport">Everyman\Neo4j\Transport</namespace-alias>
    <namespace-alias name="Client">Everyman\Neo4j\Client</namespace-alias>
    <namespace-alias name="NodeIndex">Everyman\Neo4j\Index\NodeIndex</namespace-alias>
    <namespace-alias name="RelationshipIndex">Everyman\Neo4j\Index\RelationshipIndex</namespace-alias>
    <namespace-alias name="NodeFulltextIndex">Everyman\Neo4j\Index\NodeFulltextIndex</namespace-alias>
    <namespace-alias name="Node">Everyman\Neo4j\Node</namespace-alias>
    <namespace-alias name="Batch">Everyman\Neo4j\Batch</namespace-alias>
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Nodes.]]></description>
        <long-description><![CDATA[<p>This include file contains the ontology node class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="59" package="MyWrapper\Ontology">
      <extends>CGraphEdge</extends>
      <name>COntologyEdge</name>
      <full_name>\COntologyEdge</full_name>
      <docblock line="59">
        <description><![CDATA[Ontology graph edge node.]]></description>
        <long-description><![CDATA[<p>This class implements an ontology graph edge node.</p>

<p>The class is derived from {@link CGraphEdge CGraphEdge} and implements the exact same
functionality as {@link COntologyNode COntologyNode}, it adds two elements: the
{@link SubjectTerm() subject} and {@link ObjectTerm() object} {@link COntologyTerm terms}
which are linked with the {@link Subject() subject} and {@link Object() object} nodes.</p>

<p>Instances of this class represent predicate nodes and they hold the referenced nodes.</p>]]></long-description>
        <tag line="59" name="package" description="MyWrapper"/>
        <tag line="59" name="subpackage" description="Ontology"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="68" namespace="" package="Default">
        <name>$mPredicateTerm</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="68">
          <description><![CDATA[Predicate term.]]></description>
          <long-description><![CDATA[<p>This data member holds the node predicate {@link COntologyTerm term}.</p>]]></long-description>
          <tag line="68" name="var" description="" type="\COntologyTerm">
            <type by_reference="false">\COntologyTerm</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="77" namespace="" package="Default">
        <name>$mSubjectTerm</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="77">
          <description><![CDATA[Subject term.]]></description>
          <long-description><![CDATA[<p>This data member holds the node subject {@link COntologyTerm term}.</p>]]></long-description>
          <tag line="77" name="var" description="" type="\COntologyTerm">
            <type by_reference="false">\COntologyTerm</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="86" namespace="" package="Default">
        <name>$mObjectTerm</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="86">
          <description><![CDATA[Object term.]]></description>
          <long-description><![CDATA[<p>This data member holds the node object {@link COntologyTerm term}.</p>]]></long-description>
          <tag line="86" name="var" description="" type="\COntologyTerm">
            <type by_reference="false">\COntologyTerm</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="MyWrapper\Ontology">
        <name>Term</name>
        <full_name>Term</full_name>
        <docblock line="137">
          <description><![CDATA[Manage node term.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the node term reference, it uses the standard
accessor {@link CObject::ManageMember() method} to manage the property:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>{@link COntologyTermObject COntologyTermObject}</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status} and the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} if the node is provided.</p>]]></long-description>
          <tag line="137" name="param" description="Term or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="137" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="137" name="access" description="public"/>
          <tag line="137" name="return" description="" type="\COntologyTermObject">
            <type by_reference="false">\COntologyTermObject</type>
          </tag>
          <tag line="137" name="uses" description="\CObject::ManageMember()" refers="\CObject::ManageMember()"/>
          <tag line="137" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="137" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="137">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="225" package="MyWrapper\Ontology">
        <name>SubjectTerm</name>
        <full_name>SubjectTerm</full_name>
        <docblock line="225">
          <description><![CDATA[Manage subject term.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the subject node term reference, it uses the
standard accessor {@link CObject::ManageMember() method} to manage the property:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>{@link COntologyTermObject COntologyTermObject}</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status} and the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} if the node is provided.</p>]]></long-description>
          <tag line="225" name="param" description="Term or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="225" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="225" name="access" description="public"/>
          <tag line="225" name="return" description="" type="\COntologyTermObject">
            <type by_reference="false">\COntologyTermObject</type>
          </tag>
          <tag line="225" name="uses" description="\CObject::ManageMember()" refers="\CObject::ManageMember()"/>
          <tag line="225" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="225" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="225">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="225">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="307" package="MyWrapper\Ontology">
        <name>ObjectTerm</name>
        <full_name>ObjectTerm</full_name>
        <docblock line="307">
          <description><![CDATA[Manage object term.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object node term reference, it uses the
standard accessor {@link CObject::ManageMember() method} to manage the property:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>{@link COntologyTermObject COntologyTermObject}</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status} and the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} if the node is provided.</p>]]></long-description>
          <tag line="307" name="param" description="Term or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="307" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="307" name="access" description="public"/>
          <tag line="307" name="return" description="" type="\COntologyTermObject">
            <type by_reference="false">\COntologyTermObject</type>
          </tag>
          <tag line="307" name="uses" description="\CObject::ManageMember()" refers="\CObject::ManageMember()"/>
          <tag line="307" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="307" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="307">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="387" package="MyWrapper\Ontology">
        <name>SubjectNode</name>
        <full_name>SubjectNode</full_name>
        <docblock line="387">
          <description><![CDATA[Return subject node.]]></description>
          <long-description><![CDATA[<p>This method can be used to convert the {@link Subject() subject}
{@link COntologyNode node} into an ontology {@link COntologyNode node}.</p>

<p>The method accepts a single parameter which represents the term and node containers
structured as follows:</p>

<ul>
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes
    container, it must be a Everyman\Neo4j\Client instance.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms
    container, it must be a {@link CContainer CContainer} instance.
</ul>]]></long-description>
          <tag line="387" name="param" description="Object container." type="array" variable="$theContainer">
            <type by_reference="false">array</type>
          </tag>
          <tag line="387" name="access" description="public"/>
          <tag line="387" name="return" description="" type="\COntologyNode">
            <type by_reference="false">\COntologyNode</type>
          </tag>
          <tag line="387" name="uses" description="\Subject()" refers="\Subject()"/>
          <tag line="387" name="uses" description="\SubjectTerm()" refers="\SubjectTerm()"/>
        </docblock>
        <argument line="387">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="437" package="MyWrapper\Ontology">
        <name>ObjectNode</name>
        <full_name>ObjectNode</full_name>
        <docblock line="437">
          <description><![CDATA[Return object node.]]></description>
          <long-description><![CDATA[<p>This method can be used to convert the {@link Object() object}
{@link COntologyNode node} into an ontology {@link COntologyNode node}.</p>

<p>The method accepts a single parameter which represents the term and node containers
structured as follows:</p>

<ul>
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes
    container, it must be a Everyman\Neo4j\Client instance.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms
    container, it must be a {@link CContainer CContainer} instance.
</ul>]]></long-description>
          <tag line="437" name="param" description="Object container." type="array" variable="$theContainer">
            <type by_reference="false">array</type>
          </tag>
          <tag line="437" name="access" description="public"/>
          <tag line="437" name="return" description="" type="\COntologyNode">
            <type by_reference="false">\COntologyNode</type>
          </tag>
          <tag line="437" name="uses" description="\Object()" refers="\Object()"/>
          <tag line="437" name="uses" description="\ObjectTerm()" refers="\ObjectTerm()"/>
        </docblock>
        <argument line="437">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="482" package="MyWrapper\Ontology">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="482">
          <description><![CDATA[Check whether a given offset exists.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>]]></long-description>
          <tag line="482" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="482" name="access" description="public"/>
          <tag line="482" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="518" package="MyWrapper\Ontology">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="518">
          <description><![CDATA[Return a value at a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>

<p>In this class no offset may have a <i>NULL</i> value, if this method returns a
<i>NULL</i> value, it means that the offset doesn't exist.</p>]]></long-description>
          <tag line="518" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="518" name="access" description="public"/>
          <tag line="518" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="518">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="552" package="MyWrapper\Ontology">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="552">
          <description><![CDATA[Count number of elements.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>

<p>Note that if the node exists the method will return an integer, if not, it will
return <i>NULL</i>.</p>]]></long-description>
          <tag line="552" name="access" description="public"/>
          <tag line="552" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="574" package="MyWrapper\Ontology">
        <name>getArrayCopy</name>
        <full_name>getArrayCopy</full_name>
        <docblock line="574">
          <description><![CDATA[Create a copy of the array.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>

<p>Note that if the node exists the method will return an array, if not, it will
return an empty array.</p>]]></long-description>
          <tag line="574" name="access" description="public"/>
          <tag line="574" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="632" package="MyWrapper\Ontology">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="632">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphEdge::_Commit() overload} this method to provide the correct
container to the {@link CGraphEdge parent} {@link CGraphEdge::_Commit() method}.</p>

<p>We also {@link COntologyTerm::Commit() commit} the {@link SubjectTerm() subject} and
{@link ObjectTerm() object} {@link COntologyTerm terms}, setting or removing
{@link COntologyTerm their} {@link kTAG_NODEnode} reference.</p>

<p>We also overload this method to store the node properties into a Mongo collection
named {@link kDEFAULT_CNT_EDGES kDEFAULT_CNT_EDGES}, the record will be indexed by
the combination of subject and node IDs interleaved with the predicate term
{@link kTAG_GID identifier} and divided by the
{@link kTOKEN_INDEX_SEPARATOR kTOKEN_INDEX_SEPARATOR} token.</p>]]></long-description>
          <tag line="632" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="632" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="632" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="632" name="access" description="protected"/>
          <tag line="632" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="632" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
        <argument line="632">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="632">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="632">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="731" package="MyWrapper\Ontology">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="731">
          <description><![CDATA[Find object.]]></description>
          <long-description><![CDATA[<p>In this class we pass the correct parameters to the {@link CGraphEdge parent}
{@link CGraphEdge::_Load() method}.</p>]]></long-description>
          <tag line="731" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="731" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="731" name="param" description="&amp;$theModifiers Create options." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="731" name="access" description="protected"/>
          <tag line="731" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="731">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="731">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="731">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="780" package="MyWrapper\Ontology">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="780">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>In this class we first check whether the container has the following structure:</p>

<ul>
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes
    container, it must be a Everyman\Neo4j\Client instance.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms
    container, it must be a {@link CContainer CContainer} instance.
</ul>

<p>If the container has the correct structure the {@link kTAG_NODE node} container will
be passed to the parent method and the method will check if the
{@link kTAG_TERM term} container is a
{@link COntologyTermObject COntologyTermObject}.</p>]]></long-description>
          <tag line="780" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="780" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="780" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="780" name="access" description="protected"/>
          <tag line="780" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="780" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="780">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="780">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="780">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="949" package="MyWrapper\Ontology">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="949">
          <description><![CDATA[Normalise parameters of a find.]]></description>
          <long-description><![CDATA[<p>In this class we check if the provided container is supported., terms require a
container instance derived from {@link CContainer CContainer}.</p>]]></long-description>
          <tag line="949" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="949" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="949" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="949" name="access" description="protected"/>
          <tag line="949" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="949">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="949">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="949">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1022" package="MyWrapper\Ontology">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="1022">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>In this class we check if the provided container is supported and we set the
{@link kTAG_TERM term} property in the node and {@link Commit() commit} the
{@link Term() term}.</p>]]></long-description>
          <tag line="1022" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1022" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1022" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1022" name="access" description="protected"/>
          <tag line="1022" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="1022">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1022">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1022">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1123" package="MyWrapper\Ontology">
        <name>_FinishCreate</name>
        <full_name>_FinishCreate</full_name>
        <docblock line="1123">
          <description><![CDATA[Normalise after a {@link _Create() create}.]]></description>
          <long-description><![CDATA[<p>In this class we initialise the {@link Term() predicate},
{@link SubjectTerm() subject} and {@link ObjectTerm() object}
{@link COntologyTerm terms}.</p>]]></long-description>
          <tag line="1123" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1123" name="access" description="protected"/>
        </docblock>
        <argument line="1123">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1177" package="MyWrapper\Ontology">
        <name>_FinishLoad</name>
        <full_name>_FinishLoad</full_name>
        <docblock line="1177">
          <description><![CDATA[Normalise after a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>In this class we get the term reference from the node {@link Type() type} property
and load it, along with the {@link Subject() subject} and {@link Object() object}
terms.</p>

<p>Note that if the object has a {@link Type() type} it means it was read from the
container: in this case it <i>must</i> have term references for both the
{@link SubjectTerm() subject} and {@link ObjectTerm() object}, or an exception should
be raised.</p>]]></long-description>
          <tag line="1177" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1177" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1177" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1177" name="access" description="protected"/>
        </docblock>
        <argument line="1177">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1177">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1177">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1355" package="MyWrapper\Ontology">
        <name>_IndexTerms</name>
        <full_name>_IndexTerms</full_name>
        <docblock line="1355">
          <description><![CDATA[Create node indexes.]]></description>
          <long-description><![CDATA[<p>This method will save node indexes after the node was {@link _Commit() committed},
it will perform the following selections:</p>

<ul>
<li><i>{@link kINDEX_EDGE_TERM kINDEX_EDGE_TERM}</i>: The {@link Term() term}
    {@link kTAG_GID global} identifier (RelationshipIndex).
    container, it must be a Everyman\Neo4j\Client instance.
<li><i>{@link kINDEX_EDGE_NAME kINDEX_EDGE_NAME}</i>: The {@link Term() term}
    {@link COntologyTermObject::Name() names} in all languages (RelationshipIndex).
<li><i>{@link kINDEX_EDGE_TERMS kINDEX_EDGE_TERMS}</i>: The node relations, this
    index records the relation terms, that is, the combination of the subject
    {@link SubjectTerm() term}, predicate {@link Term() term} and the object
    {@link ObjectTerm() term}, this can be used to retrieve existing relations.
</ul>

<p>The following index tags are set:</p>

<ul>
<li><i>{@link kTAG_GID kTAG_GID}</i>: The {@link Term() term}
    {@link kTAG_GID global} identifier.
<li><i>{@link kTAG_NAME kTAG_NAME}</i>: The {@link Term() term}
    {@link kTAG_NAME names}.
<li><i>{@link kTAG_EDGE_TERM kTAG_EDGE_TERM}</i>: The relationships between terms
    taken from the {@link Node() node}'s {@link kTAG_EDGE_TERM kTAG_EDGE_TERM}
    property, formatted as a SUBJECT/PREDICATE/OBJECT string, in which each element
    is the {@link kTAG_GID global} {@link COntologyTerm term} identifier.
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: The relationships between
    {@link Node() nodes}, expressed as a SUBJECT/PREDICATE/OBJECT string, in which
    the subject and object are the {@link Node() node} identifiers and the predicate
    is the {@link kTAG_GID global} {@link Term() term}  identifier.
</ul>]]></long-description>
          <tag line="1355" name="param" description="Node container." type="\Everyman\Neo4j\Client" variable="$theContainer">
            <type by_reference="false">\Everyman\Neo4j\Client</type>
          </tag>
          <tag line="1355" name="access" description="protected"/>
        </docblock>
        <argument line="1355">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>Everyman\Neo4j\Client</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1410" package="MyWrapper\Ontology">
        <name>_GetNodeIndex</name>
        <full_name>_GetNodeIndex</full_name>
        <docblock line="1410">
          <description><![CDATA[Retrieve the edge index.]]></description>
          <long-description><![CDATA[<p>This method can be used to return an edge index identified by the provided index tag.</p>]]></long-description>
          <tag line="1410" name="param" description="Node container." type="\Everyman\Neo4j\Client" variable="$theContainer">
            <type by_reference="false">\Everyman\Neo4j\Client</type>
          </tag>
          <tag line="1410" name="param" description="Index tag." type="string" variable="$theIndex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1410" name="param" description="TRUE means clear index." type="boolean" variable="$doClear">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1410" name="access" description="protected"/>
          <tag line="1410" name="return" description="" type="\Everyman\Neo4j\RelationshipIndex">
            <type by_reference="false">\Everyman\Neo4j\RelationshipIndex</type>
          </tag>
        </docblock>
        <argument line="1410">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>Everyman\Neo4j\Client</type>
        </argument>
        <argument line="1411">
          <name>$theIndex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1412">
          <name>$doClear</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/COntologyEdgeIndex.php" hash="2639fd74524481b73964a9413032b7e4" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This includes the ancestor class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Tokens.]]></description>
        <long-description><![CDATA[<p>This include file contains all token definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="94" package="MyWrapper\Persistence">
      <extends>COntologyNodeIndex</extends>
      <name>COntologyEdgeIndex</name>
      <full_name>\COntologyEdgeIndex</full_name>
      <docblock line="94">
        <description><![CDATA[Edge index.]]></description>
        <long-description><![CDATA[<p>This class implements a graph edge node index, it can be used to replicate a Neo4j edge
node to a MongoDB collection.</p>

<p>Neo4j uses Lucene as its standard indexing tool, in this library we use MongoDB as the
standard database, so it is a logical choice to use Mongo as the indexing mechanism for
Neo4j. Also, by storing nodes in Mongo, by dumping the database contents we also have the
graph structure with it.</p>

<p>The class features a single data member, the {@link Node() node} which contains a Neo4j
edge node reference. When {@link __construct() instantiating} this class you are required to
provide a persistent instance of a node.</p>

<p>The contents of the object will be the node properties as will be stored in the Mongo
{@link kDEFAULT_CNT_EDGES default} collection for edges:</p>

<ul>
<li><i>{@link kTAG_LID kTAG_LID}</i>: This offset will hold the edge node ID.
<li><i>{@link kTAG_PATH kTAG_PATH}</i>: This offset will hold the edge node path, that
    is, the source node ID, the predicate term {@link kTAG_GID identifier} and the
    object node ID, all three separated by the
    {@link kTOKEN_INDEX_SEPARATOR kTOKEN_INDEX_SEPARATOR} token.
<li><i>{@link kTAG_SUBJECT kTAG_SUBJECT}</i>: This offset will hold the subject node
    information:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The subject node term
        {@link kTAG_GID identifier}.
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The subject node ID.
 </ul>
<li><i>{@link kTAG_PREDICATE kTAG_PREDICATE}</i>: This offset will hold the predicate
    information:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The predicate term
        {@link kTAG_GID identifier}, which corresponds to the edge node type.
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The edge node ID.
 </ul>
<li><i>{@link kTAG_OBJECT kTAG_OBJECT}</i>: This offset will hold the object node
    information:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The object node term
        {@link kTAG_GID identifier}.
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The object node ID.
 </ul>
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: This offset will hold the edge node properties.
</ul>

<p>The class provides a single member accessor method: {@link Node() Node}, which can be
used to set the referenced edge node.</p>

<p><i>Note that the class will not cast to an array correctly, you must use the
{@link getArrayCopy() getArrayCopy} method to get an array, if you know how to solve
this, please do it!</i></p>]]></long-description>
        <tag line="94" name="package" description="MyWrapper"/>
        <tag line="94" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="MyWrapper\Persistence">
        <name>Node</name>
        <full_name>Node</full_name>
        <docblock line="122">
          <description><![CDATA[Manage native node.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyNodeIndex::Node() overload} this method to ensure that the
provided node is an edge node.</p>]]></long-description>
          <tag line="122" name="param" description="Node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="122" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="122" name="access" description="public"/>
          <tag line="122" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="197" package="MyWrapper\Persistence">
        <name>EdgeNodePath</name>
        <full_name>EdgeNodePath</full_name>
        <docblock line="197">
          <description><![CDATA[Build an edge node path.]]></description>
          <long-description><![CDATA[<p>The edge path represents the unique identifier of an edge node using the relationship
node identifiers, it is composed by the subject and object node IDs and the predicate
term identifier.</p>

<p>This method will return the {@link kTAG_PATH path} according to the provided
parameters:</p>

<ul>
<li><b>$theSubject</b>: The relation subject node reference:
 <ul>
    <li><i>{@link COntologyNode COntologyNode}</i>: The node ID will be used.
    <li><i>Neo4j node</i>: The node ID will be used.
    <li><i>other</i>: Other types will be cast to a string.
 </ul>
<li><b>$thePredicate</b>: The relation predicate term reference, the value will be
    cast to a string and is expected to represent the {@link COntologyTerm term}
    {@link kTAG_GID global} identifier.
<li><b>$theObject</b>: The relation object node reference:
 <ul>
    <li><i>{@link COntologyNode COntologyNode}</i>: The node ID will be used.
    <li><i>Neo4j node</i>: The node ID will be used.
    <li><i>other</i>: Other types will be cast to a string.
 </ul>
</ul>

<p>The method will check if all three parameters are not empty, if this is not the case,
the method will raise an exception.</p>]]></long-description>
          <tag line="197" name="param" description="Subject node reference." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="197" name="param" description="Predicate term reference." type="mixed" variable="$thePredicate">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="197" name="param" description="Object node reference." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="197" name="static" description=""/>
          <tag line="197" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="197">
          <name>$thePredicate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="197">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="293" package="MyWrapper\Persistence">
        <name>EdgeTermPath</name>
        <full_name>EdgeTermPath</full_name>
        <docblock line="293">
          <description><![CDATA[Build an edge term path.]]></description>
          <long-description><![CDATA[<p>This edge path represents an identifier of an edge node using the relationship term
identifiers, it is composed by the subject, predicate and object term
{@link kTAG_GID identifiers}.</p>

<p>This method will return the {@link kTAG_EDGE_TERM path} according to the provided
parameters:</p>

<ul>
<li><b>$theSubject</b>: The relation subject term reference, the value will be
    cast to a string and is expected to represent the {@link COntologyTerm term}
    {@link kTAG_GID global} identifier.
<li><b>$thePredicate</b>: The relation predicate term reference, the value will be
    cast to a string and is expected to represent the {@link COntologyTerm term}
    {@link kTAG_GID global} identifier.
<li><b>$theObject</b>: The relation object node reference, the value will be
    cast to a string and is expected to represent the {@link COntologyTerm term}
    {@link kTAG_GID global} identifier.
</ul>

<p>The method will check if all three parameters are not empty, if this is not the case,
the method will raise an exception.</p>]]></long-description>
          <tag line="293" name="param" description="Subject term reference." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="param" description="Predicate term reference." type="mixed" variable="$thePredicate">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="param" description="Object term reference." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="static" description=""/>
          <tag line="293" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$thePredicate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="354" package="MyWrapper\Persistence">
        <name>_ResolveIndexContainer</name>
        <full_name>_ResolveIndexContainer</full_name>
        <docblock line="354">
          <description><![CDATA[Resolve index container.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyNodeIndex::_ResolveIndexContainer() overload} this class to use
the correct {@link kDEFAULT_CNT_EDGES default} collection when providing a MongoDB.</p>]]></long-description>
          <tag line="354" name="param" description="Index container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="354" name="access" description="protected"/>
          <tag line="354" name="return" description="" type="\MongoCollection">
            <type by_reference="false">\MongoCollection</type>
          </tag>
          <tag line="354" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="402" package="MyWrapper\Persistence">
        <name>_LocateNode</name>
        <full_name>_LocateNode</full_name>
        <docblock line="402">
          <description><![CDATA[Locate node in container.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyNodeIndex::_LocateNode() overload} this method to locate
relationships in place of nodes.</p>

<p>We also override the rule of raising an exception on zero node IDs, because the first
relationship will have an ID of zero, here we check if the identifier is numeric.</p>

<p>Finally, we handle arrays in the node parameter: in this case we assume the array
holds the subject node ID, the predicate term {@link kTAG_GID identifier} and the
object node ID, these elements will be used to select the edge node whose
{@link kTAG_PATH kTAG_PATH} offset corresponds to this combination. In this case the
provided container must be an array structured as follows:</p>

<ul>
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: The graph container.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: The index container.
</ul>]]></long-description>
          <tag line="402" name="param" description="Graph node identifier." type="mixed" variable="$theNode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="402" name="param" description="Graph container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="402" name="access" description="protected"/>
          <tag line="402" name="return" description="" type="\Everyman\Neo4j\Node|NULL">
            <type by_reference="false">\Everyman\Neo4j\Node</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="402" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="402" name="uses" description="\_ResolveIndexContainer()" refers="\_ResolveIndexContainer()"/>
        </docblock>
        <argument line="402">
          <name>$theNode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="402">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="477" package="MyWrapper\Persistence">
        <name>_LoadNodeProperties</name>
        <full_name>_LoadNodeProperties</full_name>
        <docblock line="477">
          <description><![CDATA[Copy node properties to object.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyNodeIndex::_LocateNode() overload} this method to load the edge
node properties along with the subject, predicate and object information as follows:</p>

<ul>
<li><i>{@link kTAG_LID kTAG_LID}</i>: This offset will hold the edge node ID.
<li><i>{@link kTAG_PATH kTAG_PATH}</i>: This offset will hold the edge node path,
    that is, the source node ID, the predicate term {@link kTAG_GID identifier} and
    the object node ID, all three separated by the
    {@link kTOKEN_INDEX_SEPARATOR kTOKEN_INDEX_SEPARATOR} token.
<li><i>{@link kTAG_SUBJECT kTAG_SUBJECT}</i>: This offset will hold the subject node
    information:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The subject node term
        {@link kTAG_GID identifier}.
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The subject node ID.
 </ul>
<li><i>{@link kTAG_PREDICATE kTAG_PREDICATE}</i>: This offset will hold the
    predicate information:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The predicate term
        {@link kTAG_GID identifier}, which corresponds to the edge node type.
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The edge node ID.
 </ul>
<li><i>{@link kTAG_OBJECT kTAG_OBJECT}</i>: This offset will hold the object node
    information:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The object node term
        {@link kTAG_GID identifier}.
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The object node ID.
 </ul>
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: This offset will hold the edge node
    properties.
</ul>]]></long-description>
          <tag line="477" name="access" description="protected"/>
          <tag line="477" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="569" package="MyWrapper\Persistence">
        <name>_UpdateRelationshipCounts</name>
        <full_name>_UpdateRelationshipCounts</full_name>
        <docblock line="569">
          <description><![CDATA[Update relationship counts.]]></description>
          <long-description><![CDATA[<p>This method will increment or decrement the relationships count in the subject and
object {node indexes.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theContainer</b>: The index Mongo container, we use the
    {@link CMongoContainer::Database() database} element and force the
    {@link kDEFAULT_CNT_NODES default} node collection name, since it apparently
    gives this class personality disorder problems to use the parent version of the
    {@link _ResolveIndexContainer() _ResolveIndexContainer} method.
<li><b>$theModifiers</b>: This parameter represents the commit operation options,
    these will have been passed by the {@link Commit() commit} method.
</ul>

<p>These counts are stored in the {@link COntologyNodeIndex indexes} in the following
structure:</p>

<ul>
<li><i>{@link kTAG_IN kTAG_IN}</i>: This element represents incoming relationships,
    it is an array structured as follows:
 <ul>
    <li><i>Key</i>: The term {@link kTAG_GID identifier} of the relationship
        predicate.
    <li><i>Value</i>: The number of incoming relationships for the given predicate.
 </ul>
<li><i>{@link kTAG_OUT kTAG_OUT}</i>: This element represents outgoing
    relationships, it is an array structured as follows:
 <ul>
    <li><i>Key</i>: The term {@link kTAG_GID identifier} of the relationship
        predicate.
    <li><i>Value</i>: The number of outgoing relationships for the given predicate.
 </ul>
</ul>]]></long-description>
          <tag line="569" name="param" description="Mongo container." type="\MongoContainer" variable="$theContainer">
            <type by_reference="false">\MongoContainer</type>
          </tag>
          <tag line="569" name="param" description="Commit modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="569" name="access" description="protected"/>
        </docblock>
        <argument line="569">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="569">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/COntologyNode.inc.php" hash="0b01411115c880c9f2dc23f6f1f6366d" package="Default">
    <constant namespace="" line="39" package="Default">
      <name>kINDEX_NODE_TERM</name>
      <full_name>\kINDEX_NODE_TERM</full_name>
      <value><![CDATA['TERMS']]></value>
      <docblock line="39">
        <description><![CDATA[Terms index.]]></description>
        <long-description><![CDATA[<p>This tag defines the index (NodeIndex) collecting ontology node term references. This
index will link the node to the term via the following keys:</p>

<ul>
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This key links the current node to the node's
    {@link COntologyTerm term} {@link kTAG_GID identifiers}.
<li><i>{@link kTAG_NAME kTAG_NAME}</i>: This key links the current node to the node's
    {@link COntologyTerm term} {@link kTAG_NAME names}.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="66" package="Default">
      <name>kINDEX_NODE_NODE</name>
      <full_name>\kINDEX_NODE_NODE</full_name>
      <value><![CDATA['NODES']]></value>
      <docblock line="66">
        <description><![CDATA[Nodes index.]]></description>
        <long-description><![CDATA[<p>This tag defines the index (NodeIndex) collecting ontology node properties. This
index will link the node to its properties via the following keys:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: This key links the current node to its
    {@link COntologyNode::Type() type}, which may either be inherited from its
    {@link COntologyNode::Term() term} or have been
    {@link COntologyNode::Type() explicitly} set.
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: This key links the current node to its
    {@link COntologyNode::Kind() kinds}, which may either be inherited from its
    {@link COntologyNode::Term() term} or have been
    {@link COntologyNode::Kind() explicitly} set.
<li><i>{@link kTAG_DOMAIN kTAG_DOMAIN}</i>: This key links the current node to its
    {@link COntologyNode::Domain() domains}, which may either be inherited from its
    {@link COntologyNode::Term() term} or have been
    {@link COntologyNode::Domain() explicitly} set.
<li><i>{@link kTAG_CATEGORY kTAG_CATEGORY}</i>: This key links the current node to its
    {@link COntologyNode::Category() categories}, which may either be inherited from its
    {@link COntologyNode::Category() term} or have been
    {@link COntologyNode::Category() explicitly} set.
</ul>]]></long-description>
      </docblock>
    </constant>
    <source>eJzFVdtu2kAQfYavGOUlCYpsEvWJuiQouBFKgSpx1eYpcszaHvmy1u6SxKr4hP5DP6b9r86uIZiWKFSFxg94FnvOHJ9zvHZOi7hoNu3Wu90cTWg11h6t2pXzca54yqNyxCfMwjywiNTaO//E2A3tlt0EEkUPgK9nKeYJrJBcXc1gwkLMUSHPpUU9us2LUUKIKYOA58rHXFKRZTyv3wxTySZwV4KK2SaDNHCQ+nIxpXFW+EHiR6wxLD8LvyiYMP/K6d3iwqJ/0eBPVcxFozHENOHQs+Dn94SH+OMbOJkldRmcBRH6wuIi6pqWeyYksW0cW+02nBzb7Tf2Sfv4hK7ZO45O333f+/TBg8Go736BUW/oXv/fFCxC4DGRScB8wh5XDFZ+VPnJpPHQ3AEH2qyBLg/J9DRlgcI8Aj63AnLtrCJIECxkguUBk5YB1MAVxgOmKZhAaNyqg5vaNN6jbxYhwfMHjZ6wUnbm3JxpaqxzUuw62J0nK/F6F7eeezVcVjPHxm6nehYCMAOrJwmmgoiplcm63pfmffw9rFogw2wG9WkXgz7ghHAwRErRzHqGlbZ2We2alZmW+xmrCIFjV3rZzcrLA9hLTORuR+O+a4TaO6rStq8X1/tw+PYpG9rsLWejEJxeZYWbxgKVrPX8QzhuPrrLanMbaP5a/fWzdjpeWbCDQ1B0mh3BQ4xBDJlfAkPCEnCnpaECFe2FoeDZS3Dkp4YztnIBsX/PCITlL1Ngj0WKAaq0nIFk6rk0XpL5y2pbMlySg8QhoZN8LR3mHDbUoT8e9gajer0tLfo8o08iMZmY4tX0eOKxoSLnPc+9GF/drK62pcq5r1jERUl8gqqkt3kb0tSA/0qeWt8agV7aN/XP076pF/N987Tb/AXXaDBS</source>
  </file>
  <file path="classes/COntologyNode.php" hash="f30bb3da231c4e2745b02962205b14bd" package="Default">
    <namespace-alias name="Transport">Everyman\Neo4j\Transport</namespace-alias>
    <namespace-alias name="Batch">Everyman\Neo4j\Batch</namespace-alias>
    <namespace-alias name="Client">Everyman\Neo4j\Client</namespace-alias>
    <namespace-alias name="Node">Everyman\Neo4j\Node</namespace-alias>
    <namespace-alias name="Relationship">Everyman\Neo4j\Relationship</namespace-alias>
    <namespace-alias name="NodeIndex">Everyman\Neo4j\Index\NodeIndex</namespace-alias>
    <namespace-alias name="RelationshipIndex">Everyman\Neo4j\Index\RelationshipIndex</namespace-alias>
    <namespace-alias name="NodeFulltextIndex">Everyman\Neo4j\Index\NodeFulltextIndex</namespace-alias>
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Wrapper defines.]]></description>
        <long-description><![CDATA[<p>This include file contains the data wrapper definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name/>
      <docblock line="41">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains the local class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="48" type="Require Once" package="Default">
      <name/>
      <docblock line="48">
        <description><![CDATA[Edges.]]></description>
        <long-description><![CDATA[<p>This include file contains the ontology edge class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="86" package="MyWrapper\Ontology">
      <extends>CGraphNode</extends>
      <name>COntologyNode</name>
      <full_name>\COntologyNode</full_name>
      <docblock line="86">
        <description><![CDATA[Ontology graph node.]]></description>
        <long-description><![CDATA[<p>This class implements an ontology graph node.</p>

<p>The class is derived from {@link CGraphNode CGraphNode}, it adds another required
property, the {@link Term() term}. This class will wrap the array access framework to
the combination of the {@link Node() node} properties and the {@link Term() term}
elements, except that the {@link Term() term} elements will be read-only.</p>

<p>This class introduces a new kind of container: it must be an array of two elements
structured as follows:</p>

<ul>
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes container,
    it must be a Everyman\Neo4j\Client instance.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms container,
    it must be a {@link CContainer CContainer} instance.
</ul>

<p><i>Note that the class will not cast to an array correctly, you must use the
{@link getArrayCopy() getArrayCopy} method to get an array, if you know how to solve
this, please do it!</i></p>]]></long-description>
        <tag line="86" name="package" description="MyWrapper"/>
        <tag line="86" name="subpackage" description="Ontology"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="95" namespace="" package="Default">
        <name>$mTerm</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="95">
          <description><![CDATA[Term.]]></description>
          <long-description><![CDATA[<p>This data member holds the node {@link COntologyTerm term}.</p>]]></long-description>
          <tag line="95" name="var" description="" type="\COntologyTerm">
            <type by_reference="false">\COntologyTerm</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="MyWrapper\Ontology">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="122">
          <description><![CDATA[Return object identifier.]]></description>
          <long-description><![CDATA[<p>In this class we return the {@link Term() term} {@link Node() node}
{@link kTAG_TERM property}.</p>]]></long-description>
          <tag line="122" name="access" description="public"/>
          <tag line="122" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="MyWrapper\Ontology">
        <name>Term</name>
        <full_name>Term</full_name>
        <docblock line="185">
          <description><![CDATA[Manage node term.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the node term reference, it uses the standard
accessor {@link CObject::ManageMember() method} to manage the property:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>{@link COntologyTermObject COntologyTermObject}</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status} and the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status} if the node is provided.</p>]]></long-description>
          <tag line="185" name="param" description="Term or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="185" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="185" name="access" description="public"/>
          <tag line="185" name="return" description="" type="\COntologyTermObject">
            <type by_reference="false">\COntologyTermObject</type>
          </tag>
          <tag line="185" name="uses" description="\CObject::ManageMember()" refers="\CObject::ManageMember()"/>
          <tag line="185" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="185" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
        </docblock>
        <argument line="185">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="254" package="MyWrapper\Ontology">
        <name>Kind</name>
        <full_name>Kind</full_name>
        <docblock line="254">
          <description><![CDATA[Manage node kind.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the node {@link kTAG_KIND kinds}, in general it
reflects the {@link Term() term} {@link CCodedUnitObject::Kind() kinds}.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link _ManagePropertyArray() _ManagePropertyArray} method, in which the first
parameter will be the constant {@link kTAG_KIND kTAG_KIND}.</p>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status}.</p>]]></long-description>
          <tag line="254" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="254" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="254" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="254" name="access" description="public"/>
          <tag line="254" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="uses" description="\_ManagePropertyArray()" refers="\_ManagePropertyArray()"/>
          <tag line="254" name="see" description="\kTAG_KIND" refers="\kTAG_KIND"/>
        </docblock>
        <argument line="254">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="254">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="254">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="309" package="MyWrapper\Ontology">
        <name>Type</name>
        <full_name>Type</full_name>
        <docblock line="309">
          <description><![CDATA[Manage node type.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the node {@link kTAG_TYPE type}, in general it
reflects the {@link Term() term} {@link COntologyTerm::Type() type}.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete Set value exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status}.</p>]]></long-description>
          <tag line="309" name="param" description="Term or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="309" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="309" name="access" description="public"/>
          <tag line="309" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="309" name="uses" description="\_ManageProperty()" refers="\_ManageProperty()"/>
          <tag line="309" name="see" description="\kTAG_TYPE" refers="\kTAG_TYPE"/>
        </docblock>
        <argument line="309">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="362" package="MyWrapper\Ontology">
        <name>Cardinality</name>
        <full_name>Cardinality</full_name>
        <docblock line="362">
          <description><![CDATA[Manage data cardinality.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the measure data {@link kTAG_CARDINALITY type}, it
uses the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_TYPE offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>string</i>: String values represent the cardinality enumeration:
     <ul>
        <li><i>{@link kCARD_0_1 kCARD_0_1}</i>: Zero or one, a scalar or none.
        <li><i>{@link kCARD_1 kCARD_1}</i>: Exactly one, a required scalar.
        <li><i>{@link kCARD_ANY kCARD_ANY}</i>: Any, this implies that we either
            have an array or no data.
     </ul>
    <li><i>integer</i>: An integer represents the exact cardinality, in that case
        we assume the data is an array of at most that number of elements.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="362" name="param" description="Data type tag." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="362" name="access" description="public"/>
          <tag line="362" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="362">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="362">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="419" package="MyWrapper\Ontology">
        <name>Domain</name>
        <full_name>Domain</full_name>
        <docblock line="419">
          <description><![CDATA[Manage node kind.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the node {@link kTAG_DOMAIN domains}, in general it
reflects the {@link Term() term} {@link COntologyTermObject::Domain() domains}.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link _ManagePropertyArray() _ManagePropertyArray} method, in which the first
parameter will be the constant {@link kTAG_DOMAIN kTAG_DOMAIN}.</p>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status}.</p>]]></long-description>
          <tag line="419" name="param" description="Term or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="419" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="419" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="419" name="access" description="public"/>
          <tag line="419" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="419" name="uses" description="\_ManagePropertyArray()" refers="\_ManagePropertyArray()"/>
          <tag line="419" name="see" description="\kTAG_DOMAIN" refers="\kTAG_DOMAIN"/>
        </docblock>
        <argument line="419">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="419">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="419">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="465" package="MyWrapper\Ontology">
        <name>Category</name>
        <full_name>Category</full_name>
        <docblock line="465">
          <description><![CDATA[Manage node kind.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the node {@link kTAG_CATEGORY categories}, in
general it reflects the {@link Term() term}
{@link COntologyTermObject::Category() categories}.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link _ManagePropertyArray() _ManagePropertyArray} method, in which the first
parameter will be the constant {@link kTAG_CATEGORY kTAG_CATEGORY}.</p>

<p>The method will also set the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY status}.</p>]]></long-description>
          <tag line="465" name="param" description="Term or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="465" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="465" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="465" name="access" description="public"/>
          <tag line="465" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="465" name="uses" description="\_ManagePropertyArray()" refers="\_ManagePropertyArray()"/>
          <tag line="465" name="see" description="\kTAG_CATEGORY" refers="\kTAG_CATEGORY"/>
        </docblock>
        <argument line="465">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="465">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="465">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="553" package="MyWrapper\Ontology">
        <name>RelateTo</name>
        <full_name>RelateTo</full_name>
        <docblock line="553">
          <description><![CDATA[Create a graph edge.]]></description>
          <long-description><![CDATA[<p>This method can be used to create a graph edge or relation between the current node
and an object node using a predicate node. This method consideres the triplet subject
node/predicate term/object node as the relationship identifier when considering
duplicate relationships. For that reason the subject and object terms of the
relationship must relate to {@link _IsCommitted() committed} nodes.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theContainer</b>: The graph and term containers as an array:
 <ul>
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes
        container, it must be a Everyman\Neo4j\Client instance.
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms
        container, it must be a {@link CContainer CContainer} instance.
 </ul>
<li><b>$thePredicate</b>: The predicate term:
 <ul>
    <li><i>COntologyNode</i>: The node {@link Term() term} {@link kTAG_GID global}
        {@link COntologyTerm::GID() identifier}.
    <li><i>{@link COntologyTerm COntologyTerm}</i>: The term {@link kTAG_GID global}
        identifier will be used as the {@link COntologyEdge node}
        {@link COntologyEdge::Type() type}.
    <li><i>Everyman\Neo4j\Relationship</i>: The relationship's type will be used as
        the predicate, all other elements of the provided edge node will be ignored.
    <li><i>string</i>: Any other type will be converted to string and will be used
        as the {@link COntologyEdge node} {@link COntologyEdge::Type() type}.
 </ul>
<li><b>$theObject</b>: The destination node or relationship object node:
 <ul>
    <li><i>COntologyNode</i>: The method will use it's {@link Node() node}.
    <li><i>Everyman\Neo4j\Node</i>: The method will use it as the relationship
        object.
    <li><i>integer</i>: The method will search for the node corresponding to
        the provided number, if the node was not found, the method will raise an
        exception.
    <li><i>other</i>: Any other type will raise an exception.
 </ul>
<li><b>$doDuplicate</b>: This flag determines whether cuplicate relationships are
    allowed: if <i>FALSE</i>, if a relationship with the same subject and object
    nodes, along with the same predicate term are found, it will be considered a
    duplicate, and this method will actually return that relationship.
</ul>

<p>The method will return a {@link COntologyEdge COntologyEdge} object, or raise an
exception if the operation was not successful.</p>]]></long-description>
          <tag line="553" name="param" description="Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="553" name="param" description="Predicate." type="mixed" variable="$thePredicate">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="553" name="param" description="Object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="553" name="param" description="TRUE means duplicate relationship." type="boolean" variable="$doDuplicate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="553" name="access" description="public"/>
          <tag line="553" name="return" description="" type="\COntologyEdge">
            <type by_reference="false">\COntologyEdge</type>
          </tag>
        </docblock>
        <argument line="553">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="553">
          <name>$thePredicate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="553">
          <name>$theObject</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="554">
          <name>$doDuplicate</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="823" package="MyWrapper\Ontology">
        <name>GetRelated</name>
        <full_name>GetRelated</full_name>
        <docblock line="823">
          <description><![CDATA[Return related {@link COntologyEdge edges}.]]></description>
          <long-description><![CDATA[<p>This method will return all nodes that are related to the current one in an array of
{@link COntologyEdge edge} nodes whose elements are structured as follows:</p>

<ul>
<li><i>Key</i>: The edge ID.
<li><i>Value</i>: The edge {@link COntologyEdge object}.
</ul>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theContainer</b>: The graph and term containers as an array:
 <ul>
    <li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes
        container, it must be a Everyman\Neo4j\Client instance.
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms
        container, it must be a {@link CContainer CContainer} instance.
 </ul>
<li><b>$thePredicate</b>: The predicate terms as an array of the following types:
 <ul>
    <li><i>COntologyNode</i>: The node {@link Term() term} {@link kTAG_GID global}
        {@link COntologyTerm::GID() identifier}.
    <li><i>{@link COntologyTerm COntologyTerm}</i>: The term {@link kTAG_GID global}
        identifier will be used as the {@link COntologyEdge node}
        {@link COntologyEdge::Type() type}.
    <li><i>Everyman\Neo4j\Relationship</i>: The relationship's type will be used as
        the predicate, all other elements of the provided edge node will be ignored.
    <li><i>string</i>: Any other type will be converted to string and will be used
        as the {@link COntologyEdge node} {@link COntologyEdge::Type() type}.
 </ul>
<li><b>$theDirection</b>: The direction of the relation:
 <ul>
    <li><i>out</i>: Outgoing relations, the current node is the subject.
    <li><i>in</i>: Incoming relations, the current node is the object.
    <li><i>all</i>: Incoming and outgoing relations (default), the current node is
        the object or the subject.
 </ul>
</ul>]]></long-description>
          <tag line="823" name="param" description="Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="823" name="param" description="Predicate." type="mixed" variable="$thePredicate">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="823" name="param" description="Relation direction." type="string" variable="$theDirection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="823" name="access" description="protected"/>
          <tag line="823" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="823" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="823">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="823">
          <name>$thePredicate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="823">
          <name>$theDirection</name>
          <default><![CDATA['all']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="995" package="MyWrapper\Ontology">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="995">
          <description><![CDATA[Check whether a given offset exists.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>]]></long-description>
          <tag line="995" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="995" name="access" description="public"/>
          <tag line="995" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="995">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1031" package="MyWrapper\Ontology">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="1031">
          <description><![CDATA[Return a value at a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>

<p>In this class no offset may have a <i>NULL</i> value, if this method returns a
<i>NULL</i> value, it means that the offset doesn't exist.</p>]]></long-description>
          <tag line="1031" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1031" name="access" description="public"/>
          <tag line="1031" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1031">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1065" package="MyWrapper\Ontology">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="1065">
          <description><![CDATA[Count number of elements.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>

<p>Note that if the node exists the method will return an integer, if not, it will
return <i>NULL</i>.</p>]]></long-description>
          <tag line="1065" name="access" description="public"/>
          <tag line="1065" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1087" package="MyWrapper\Ontology">
        <name>getArrayCopy</name>
        <full_name>getArrayCopy</full_name>
        <docblock line="1087">
          <description><![CDATA[Create a copy of the array.]]></description>
          <long-description><![CDATA[<p>We overload this method to wrap the internal array over the node properties.</p>

<p>Note that if the node exists the method will return an array, if not, it will
return an empty array.</p>]]></long-description>
          <tag line="1087" name="access" description="public"/>
          <tag line="1087" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1139" package="MyWrapper\Ontology">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="1139">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphNode::_Commit() overload} this method to provide the correct
container to the {@link CGraphNode parent} {@link CGraphNode::_Commit() method}.</p>

<p>We also overload this method to store the node properties into a Mongo collection
named {@link kDEFAULT_CNT_NODES kDEFAULT_CNT_NODES}, the record will be indexed by
node ID as a 64 bit integer.</p>]]></long-description>
          <tag line="1139" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1139" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1139" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1139" name="access" description="protected"/>
          <tag line="1139" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1139" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
        <argument line="1139">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1139">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1139">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1293" package="MyWrapper\Ontology">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="1293">
          <description><![CDATA[Find object.]]></description>
          <long-description><![CDATA[<p>In this class we try to load the node.</p>]]></long-description>
          <tag line="1293" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1293" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1293" name="param" description="&amp;$theModifiers Create options." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1293" name="access" description="protected"/>
          <tag line="1293" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1293">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1293">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1293">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1341" package="MyWrapper\Ontology">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="1341">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>In this class we first check whether the container has the following structure:</p>

<ul>
<li><i>{@link kTAG_NODE kTAG_NODE}</i>: This element should hold the nodes
    container, it must be a Everyman\Neo4j\Client instance.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This element should hold the terms
    container, it must be a {@link COntologyTermObject COntologyTermObject} instance.
</ul>

<p>We then call the {@link CGraphNode parent}
{@link CGraphNode::_PrepareCreate() method} and check if the container was replaced
with the content: in that case we try to load the related {@link Term() term}.</p>]]></long-description>
          <tag line="1341" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1341" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1341" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1341" name="access" description="protected"/>
          <tag line="1341" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="1341" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="1341">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1341">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1341">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1452" package="MyWrapper\Ontology">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="1452">
          <description><![CDATA[Normalise parameters of a find.]]></description>
          <long-description><![CDATA[<p>In this class we check if the provided container is supported., terms require a
container instance derived from {@link CContainer CContainer}.</p>]]></long-description>
          <tag line="1452" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1452" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1452" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1452" name="access" description="protected"/>
          <tag line="1452" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="1452">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1452">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1452">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1531" package="MyWrapper\Ontology">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="1531">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>In this class we check if the provided container is supported and we set the
{@link kTAG_TERM term} property in the node and {@link Commit() commit} the
{@link Term() term}.</p>

<p>We also copy the {@link CCodedUnitObject::Kind() kind},
{@link COntologyTermObject::Domain() domain},
{@link COntologyTermObject::Category() category} and
{@link COntologyTerm::Type() type} elements, if not yet present, from the
{@link Term() term} to the current node.</p>]]></long-description>
          <tag line="1531" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1531" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1531" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1531" name="access" description="protected"/>
          <tag line="1531" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="1531">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1531">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1531">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1606" package="MyWrapper\Ontology">
        <name>_FinishCreate</name>
        <full_name>_FinishCreate</full_name>
        <docblock line="1606">
          <description><![CDATA[Normalise after a {@link _Create() create}.]]></description>
          <long-description><![CDATA[<p>In this class we initialise the {@link Term() term} if necessary.</p>]]></long-description>
          <tag line="1606" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1606" name="access" description="protected"/>
        </docblock>
        <argument line="1606">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1642" package="MyWrapper\Ontology">
        <name>_FinishLoad</name>
        <full_name>_FinishLoad</full_name>
        <docblock line="1642">
          <description><![CDATA[Normalise after a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>In this class we get the {@link kTAG_TERM term} reference from the node properties
and load it.</p>]]></long-description>
          <tag line="1642" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1642" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1642" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1642" name="access" description="protected"/>
        </docblock>
        <argument line="1642">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1642">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1642">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1716" package="MyWrapper\Ontology">
        <name>_IndexTerms</name>
        <full_name>_IndexTerms</full_name>
        <docblock line="1716">
          <description><![CDATA[Create node/term indexes.]]></description>
          <long-description><![CDATA[<p>This method will save node indexes after the node was {@link _Commit() committed},
there are two main indexes for nodes:</p>

<ul>
<li><i>{@link kINDEX_NODE_TERM kINDEX_NODE_TERM}</i>: This index (NodeIndex) links
    the node to its {@link Term() term} through the following keys:
 <ul>
    <li><i>{@link kTAG_TERM kTAG_TERM}</i>: This key represents the
        {@link Term() term} {@link kTAG_GID identifier}.
    <li><i>{@link kTAG_NAME kTAG_NAME}</i>: This key represents the
        {@link Term() term} {@link kTAG_NAME names} in all languages.
 </ul>
</ul>]]></long-description>
          <tag line="1716" name="param" description="Node container." type="\Everyman\Neo4j\Client" variable="$theContainer">
            <type by_reference="false">\Everyman\Neo4j\Client</type>
          </tag>
          <tag line="1716" name="access" description="protected"/>
        </docblock>
        <argument line="1716">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>Everyman\Neo4j\Client</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1776" package="MyWrapper\Ontology">
        <name>_IndexNodes</name>
        <full_name>_IndexNodes</full_name>
        <docblock line="1776">
          <description><![CDATA[Create node property indexes.]]></description>
          <long-description><![CDATA[<p>This method will save node indexes after the node was {@link _Commit() committed},
there are two main indexes for node properties:</p>

<ul>
<li><i>{@link kINDEX_NODE_NODE kINDEX_NODE_NODE}</i>: This index (NodeIndex) links
    the node to its properties through the following keys:
 <ul>
    <li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: This key links the current node to its
        {@link Type() type}, which may either be inherited from its
        {@link Term() term} or have been {@link Type() explicitly} set.
    <li><i>{@link kTAG_KIND kTAG_KIND}</i>: This key links the current node to its
        {@link Kind() kinds}, which may either be inherited from its
        {@link Term() term} or have been {@link Kind() explicitly} set.
    <li><i>{@link kTAG_DOMAIN kTAG_DOMAIN}</i>: This key links the current node to
        its {@link Domain() domains}, which may either be inherited from its
        {@link Term() term} or have been {@link Domain() explicitly} set.
    <li><i>{@link kTAG_CATEGORY kTAG_CATEGORY}</i>: This key links the current node
        to its {@link Category() categories}, which may either be inherited from its
        {@link Category() term} or have been {@link Category() explicitly} set.
 </ul>
</ul>]]></long-description>
          <tag line="1776" name="param" description="Node container." type="\Everyman\Neo4j\Client" variable="$theContainer">
            <type by_reference="false">\Everyman\Neo4j\Client</type>
          </tag>
          <tag line="1776" name="access" description="protected"/>
        </docblock>
        <argument line="1776">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>Everyman\Neo4j\Client</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1840" package="MyWrapper\Ontology">
        <name>_GetNodeIndex</name>
        <full_name>_GetNodeIndex</full_name>
        <docblock line="1840">
          <description><![CDATA[Retrieve the node index.]]></description>
          <long-description><![CDATA[<p>This method can be used to return a node index identified by the provided index tag.</p>]]></long-description>
          <tag line="1840" name="param" description="Node container." type="\Everyman\Neo4j\Client" variable="$theContainer">
            <type by_reference="false">\Everyman\Neo4j\Client</type>
          </tag>
          <tag line="1840" name="param" description="Index tag." type="string" variable="$theIndex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1840" name="param" description="TRUE means clear index." type="boolean" variable="$doClear">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1840" name="access" description="protected"/>
          <tag line="1840" name="return" description="" type="\Everyman\Neo4j\NodeIndex">
            <type by_reference="false">\Everyman\Neo4j\NodeIndex</type>
          </tag>
        </docblock>
        <argument line="1840">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>Everyman\Neo4j\Client</type>
        </argument>
        <argument line="1841">
          <name>$theIndex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1842">
          <name>$doClear</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1912" package="MyWrapper\Ontology">
        <name>_ManageProperty</name>
        <full_name>_ManageProperty</full_name>
        <docblock line="1912">
          <description><![CDATA[Manage scalar property.]]></description>
          <long-description><![CDATA[<p>This method will set, retrieve and delete scalar properties, it accepts the following
parameters:</p>

<ul>
<li><b>$theOffset</b>: The property offset to manage.
<li><b>$theValue</b>: The property value or operation:
 <ul>
    <li><i>NULL</i>: Return the property current value.
    <li><i>FALSE</i>: Delete the property.
    <li><i>other</i>: Any other type represents the new property value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value of the property <i>before</i> it was
        eventually modified.
    <li><i>FALSE</i>: Return the value of the property <i>after</i> it was
        eventually modified.
 </ul>
</ul>

<p>Note that if the current object does no yet have a {@link Node() node} reference, the
method will raise an exception.</p>]]></long-description>
          <tag line="1912" name="param" description="Property key." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1912" name="param" description="Value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1912" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1912" name="access" description="protected"/>
          <tag line="1912" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1912" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="1912" name="uses" description="\Node()" refers="\Node()"/>
          <tag line="1912" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
        </docblock>
        <argument line="1912">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1912">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1912">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="2022" package="MyWrapper\Ontology">
        <name>_ManagePropertyArray</name>
        <full_name>_ManagePropertyArray</full_name>
        <docblock line="2022">
          <description><![CDATA[Manage scalar property.]]></description>
          <long-description><![CDATA[<p>This method will set, retrieve and delete array element properties, it accepts the
following parameters:</p>

<ul>
<li><b>$theOffset</b>: The property offset to manage.
<li><b>$theValue</b>: This parameter represents either the value to add, or the
    index of the element to operate on:
 <ul>
    <li><i>NULL</i>: This value indicates that we want to operate on all elements,
        which means that we are retrieving the full list or deleting it.
    <li><i>array</i>: This value indicates that we want to replace the whole list,
        this will only be tested if the next parameter evaluates to <i>TRUE</i>.
    <li><i>other</i>: Any other type represents either the new value to be added or
        the index to the value to be returned or deleted. <i>It must be possible to
        cast this value to a string, this is what will be used to compare
        elements</i>.
 </ul>
<li><b>$theOperation</b>: This parameter represents the operation to be performed,
    it will be evaluated as a boolean and its scope depends on the value of the
    previous parameter:
 <ul>
    <li><i>NULL</i>: Return the element or list.
    <li><i>FALSE</i>: Delete the element or list.
    <li><i>TRUE</i>: Add the element or list. Note that with this value, if you
        provide <i>NULL</i> in the previous parameter, it will be equivalent to
        deleting the whole list.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the element or list <i>before</i> it was eventually
        modified.
    <li><i>FALSE</i>: Return the element or list <i>after</i> it was eventually
        modified.
 </ul>
</ul>]]></long-description>
          <tag line="2022" name="param" description="Property key." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2022" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2022" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2022" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2022" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2022" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="2022" name="uses" description="\Node()" refers="\Node()"/>
          <tag line="2022" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
        </docblock>
        <argument line="2022">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2022">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="2023">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="2024">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/COntologyNodeIndex.php" hash="ef15f3143b7e07e541d96710bd44d2e9" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This includes the ancestor class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Graph defines.]]></description>
        <long-description><![CDATA[<p>This include file contains graph node definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="69" package="MyWrapper\Persistence">
      <extends>CArrayObject</extends>
      <name>COntologyNodeIndex</name>
      <full_name>\COntologyNodeIndex</full_name>
      <docblock line="69">
        <description><![CDATA[Node index.]]></description>
        <long-description><![CDATA[<p>This class implements a graph node index, it can be used to replicate a Neo4j node to
a MongoDB collection.</p>

<p>Neo4j uses Lucene as its standard indexing tool, in this library we use MongoDB as the
standard database, so it is a logical choice to use Mongo as the indexing mechanism for
Neo4j. Also, by storing nodes in Mongo, by dumping the database contents we also have the
graph structure with it.</p>

<p>The class features a single data member, the {@link Node() node} which contains a Neo4j
node reference. When {@link __construct() instantiating} this class you are required to
provide a persistent instance of a node.</p>

<p>The contents of the object will be the node properties as will be stored in the Mongo
{@link kDEFAULT_CNT_NODES default} collection for nodes:</p>

<ul>
<li><i>{@link kTAG_LID kTAG_LID}</i>: This offset will hold the node ID.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: This offset will hold the node properties.
</ul>

<p>The class provides a single member accessor method: {@link Node() Node}, which can be
used to set the referenced node.</p>

<p><i>Note that the class will not cast to an array correctly, you must use the
{@link getArrayCopy() getArrayCopy} method to get an array, if you know how to solve
this, please do it!</i></p>]]></long-description>
        <tag line="69" name="package" description="MyWrapper"/>
        <tag line="69" name="subpackage" description="Persistence"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="78" namespace="" package="Default">
        <name>$mNode</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="78">
          <description><![CDATA[Node.]]></description>
          <long-description><![CDATA[<p>This data member holds the Neo4j node.</p>]]></long-description>
          <tag line="78" name="var" description="" type="\Everyman\Neo4j\PropertyContainer">
            <type by_reference="false">\Everyman\Neo4j\PropertyContainer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="151">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor can be used to instantiate an object with a node, there is no
provision for instantiating an empty object.</p>

<p>The method expects the following parameters:</p>

<ul>
<li><b>$theNode</b>: The referenced node, this data can come in three flavours:
 <ul>
    <li><i>Neo4j node</i>: This is the expected format, the node must be persistent,
        that is, it must have an ID. In this case the second parameter is ignored.
    <li><i>integer</i> or <i>numeric string</i>: The value refers to the node ID, in
        this case the node will have to be loaded from a Neo4j client, which must be
        provided in the next parameter.
    <li><i>{@link CMongoQuery query}</i>: In this case we assume the value
        represents a {@link CMongoQuery query} that will be sent to the index, only
        the first matching record will be used.
 </ul>
<li><b>$theContainer</b>: The nodes container, depending on the first parameter:
 <ul>
    <li><i>Neo4j node</i>: The parameter will be ignored.
    <li><i>integer</i> or <i>numeric string</i>: The parameter is expected to be an
        instance of a Neo4j client, it will be used to locate the node in the graph.
    <li><i>array</i>: The parameter is expected to have two elements:
     <ul>
        <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The Neo4j client (graph container).
        <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The Mongo container (index container),
            which can take the following types:
         <ul>
            <li><i>MongoDB</i>: The database will be used to instantiate a
                MongoCollection named as the
                {@link kDEFAULT_CNT_NODES kDEFAULT_CNT_NODES} tag.
            <li><i>MongoCollection</i>: The provided collection will be used.
            <li><i>{@link CMongoContainer CMongoContainer}</i>: The referenced Mongo
                {@link CContainer::Container() collection} will be used (be careful not
                to send the terms collection).
         </ul>
     </ul>
 </ul>
</ul>

<p>If any of the above conditions is not met, or if the node was not found, an exception
will be raised.</p>]]></long-description>
          <tag line="151" name="param" description="Graph node." type="mixed" variable="$theNode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="param" description="Graph container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="access" description="public"/>
          <tag line="151" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="151" name="uses" description="\Node()" refers="\Node()"/>
          <tag line="151" name="uses" description="\_LocateNode()" refers="\_LocateNode()"/>
        </docblock>
        <argument line="151">
          <name>$theNode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="227" package="MyWrapper\Persistence">
        <name>Node</name>
        <full_name>Node</full_name>
        <docblock line="227">
          <description><![CDATA[Manage native node.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the native node reference, it uses the standard
accessor {@link CObject::ManageMember() method} to manage the property:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>Everyman\Neo4j\PropertyContainer</i>: Set value.
    <li><i>other</i>: Raise exception.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="227" name="param" description="Node or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="227" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="227" name="access" description="public"/>
          <tag line="227" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="227" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="227" name="uses" description="\_LoadNodeProperties()" refers="\_LoadNodeProperties()"/>
        </docblock>
        <argument line="227">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="227">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="337" package="MyWrapper\Persistence">
        <name>Commit</name>
        <full_name>Commit</full_name>
        <docblock line="337">
          <description><![CDATA[Commit the object into a container.]]></description>
          <long-description><![CDATA[<p>This method should be used to commit the object to a container, the method accepts
two parameters:</p>

<ul>
<li><b>$theContainer</b>: This parameter represents the index container, the value
    will be fed to the {@link _ResolveIndexContainer() _ResolveIndexContainer}
    protected method which should return a {@link CMongoContainer CMongoContainer}.
<li><b>$theModifiers</b>: This parameter represents the commit operation options,
    only the following options are considered:
 <ul>
    <li><i>{@link kFLAG_PERSIST_REPLACE kFLAG_PERSIST_REPLACE}</i>: The provided
        object will be {@link kFLAG_PERSIST_INSERT inserted}, if the identifier
        doesn't match any container elements, or it will
        {@link kFLAG_PERSIST_UPDATE replace} the existing object. As with
        {@link kFLAG_PERSIST_UPDATE update}, it is assumed that the provided
        object's attributes will replace all the existing object's ones.
    <li><i>{@link kFLAG_PERSIST_DELETE kFLAG_PERSIST_DELETE}</i>: This option
        assumes you want to remove the object from the container, although the
        container features a specific {@link CContainer::Delete() method} for this
        purpose, this option may be used to implement a <i>deleted state</i>, rather
        than actually removing the object from the container.
 </ul>
</ul>]]></long-description>
          <tag line="337" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="337" name="param" description="Commit modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="337" name="access" description="public"/>
          <tag line="337" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="337" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="337" name="uses" description="\_ResolveIndexContainer()" refers="\_ResolveIndexContainer()"/>
          <tag line="337" name="uses" description="\_LoadNodeProperties()" refers="\_LoadNodeProperties()"/>
        </docblock>
        <argument line="337">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="337">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_PERSIST_REPLACE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="456" package="MyWrapper\Persistence">
        <name>_ResolveIndexContainer</name>
        <full_name>_ResolveIndexContainer</full_name>
        <docblock line="456">
          <description><![CDATA[Resolve index container.]]></description>
          <long-description><![CDATA[<p>This method can be used to resolve the provided parameter to the index container, the
method will return a {@link CMongoContainer CMongoContainer} which points to the
index collection; the provided parameter can take the following types:</p>

<ul>
<li><i>MongoDB</i>: The method will return a {@link CMongoContainer container} using
    a MongoCollection named after the value of the
    {@link kDEFAULT_CNT_NODES kDEFAULT_CNT_NODES} tag.
<li><i>MongoCollection</i>: The method will return a
    {@link CMongoContainer container} instantiated with the collection.
<li><i>{@link CMongoContainer CMongoContainer}</i>: The method will use that value.
</ul>

<p>If the provided parameter is of any other type, the method will raise an exception.</p>]]></long-description>
          <tag line="456" name="param" description="Index container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="456" name="access" description="protected"/>
          <tag line="456" name="return" description="" type="\CMongoContainer">
            <type by_reference="false">\CMongoContainer</type>
          </tag>
          <tag line="456" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="456">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="543" package="MyWrapper\Persistence">
        <name>_QueryNode</name>
        <full_name>_QueryNode</full_name>
        <docblock line="543">
          <description><![CDATA[Query node.]]></description>
          <long-description><![CDATA[<p>This method can be used to locate a node in the provided container, it accepts two
parameters:</p>

<ul>
<li><b>$theNode</b>: The node reference:
 <ul>
    <li><i>integer</i> or <i>numeric string</i>: The value refers to the node ID, in
        this case the node will have to be loaded from a Neo4j client, which must be
        provided in the next parameter.
    <li><i>{@link CMongoQuery query}</i>: In this case we assume the value
        represents a {@link CMongoQuery query} that will be sent to the index, only
        the first matching record will be used.
 </ul>
<li><b>$theContainer</b>: The nodes container:
 <ul>
    <li><i>Neo4j client</i>: The first parameter is interpreted as the node ID.
    <li><i>array</i>: The parameter is expected to have two elements:
     <ul>
        <li><i>{@link kTAG_NODE kTAG_NODE}</i>: The Neo4j client (graph container).
        <li><i>{@link kTAG_TERM kTAG_TERM}</i>: The Mongo container (index container),
            which can take the following types:
         <ul>
            <li><i>MongoDB</i>: The database will be used to instantiate a
                MongoCollection named as the
                {@link kDEFAULT_CNT_NODES kDEFAULT_CNT_NODES} tag.
            <li><i>MongoCollection</i>: The provided collection will be used.
            <li><i>{@link CMongoContainer CMongoContainer}</i>: The referenced Mongo
                {@link CContainer::Container() collection} will be used (be careful not
                to send the terms collection).
         </ul>
     </ul>
 </ul>
</ul>

<p>The method will return the located node or <i>NULL</i> if not found.</p>

<p>If the located node has an ID of zero, meaning that it is the default Neo4j node, the
method will raise an exception, because most likely the node parameter was a string
that resolved to zero.</p>

<p>If any of the provided parameters is incorrect, the method will raise an exception.</p>]]></long-description>
          <tag line="543" name="param" description="Node reference." type="mixed" variable="$theNode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="543" name="param" description="Node container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="543" name="access" description="protected"/>
          <tag line="543" name="return" description="" type="\Everyman\Neo4j\Node|NULL">
            <type by_reference="false">\Everyman\Neo4j\Node</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="543" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="543">
          <name>$theNode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="543">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="650" package="MyWrapper\Persistence">
        <name>_LocateNode</name>
        <full_name>_LocateNode</full_name>
        <docblock line="650">
          <description><![CDATA[Locate node in graph.]]></description>
          <long-description><![CDATA[<p>This method can be used to locate a node in the provided graph container, it accepts
two parameters:</p>

<ul>
<li><b>$theNode</b>: The node reference, it can be either an integer or a numeric
    string referring to the seeked node ID.
<li><b>$theContainer</b>: The graph container, it must be a Neo4j client.
</ul>

<p>The method will return the located node or <i>NULL</i> if not found.</p>

<p>If the located node has an ID of zero, meaning that it is the default Neo4j node, the
method will raise an exception, because most likely the node parameter was a string
that resolved to zero.</p>

<p>If any of the provided parameters is incorrect, the method will raise an exception.</p>]]></long-description>
          <tag line="650" name="param" description="Node reference." type="mixed" variable="$theNode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="650" name="param" description="Node container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="650" name="access" description="protected"/>
          <tag line="650" name="return" description="" type="\Everyman\Neo4j\Node|NULL">
            <type by_reference="false">\Everyman\Neo4j\Node</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="650" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="650">
          <name>$theNode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="650">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="707" package="MyWrapper\Persistence">
        <name>_LoadNodeProperties</name>
        <full_name>_LoadNodeProperties</full_name>
        <docblock line="707">
          <description><![CDATA[Copy node properties to object.]]></description>
          <long-description><![CDATA[<p>This method will set the current object's {@link kTAG_LID kTAG_LID} offset to the
current {@link Node() node}'s ID and the {@link kTAG_DATA kTAG_DATA} offset to the
{@link Node() node}'s properties.</p>]]></long-description>
          <tag line="707" name="access" description="protected"/>
          <tag line="707" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/COntologyTag.inc.php" hash="b690aa21f6c45693d753009d904708dd" package="Default">
    <constant namespace="" line="32" package="Default">
      <name>kTAG_SINGLETON_ID</name>
      <full_name>\kTAG_SINGLETON_ID</full_name>
      <value><![CDATA['@']]></value>
      <docblock line="32">
        <description><![CDATA[Singleton default identifier.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the default singleton identifier, it represents the ID of
the record that holds the sequence count.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9Ut1qwjAYvW6f4sMbtyJt9WIM5rSyqhT8gdmxS4lt2obWpEvSgYw9wt5hD7O919JqnaKwKxdyke/nnO8j53T7eZLrumXcX+boYGhnj3FYeZhTyTIWb3wUm4QGplrqbOMJxWW2Niwd1J9Uo9+cjNAUDlc8Ct4hxBGhRBJGhakQ6oKfEAERyTAEjEpEqFCP9ZrRw2YoBA5htQGZYPhzTEkbZEjUMzQnR0GKYqxNN88c5TnmVVYUq7qwS4sagAqZMK5pU5KlDAYmfH+mLCJfH9Bdm6J8Bk4QE8RNxuNeBXlVcLWr1jZtGzq3ln1jdex2R9WsC7vGHY4GTxMfFt5sPBn68xl47nDmeyNv+PiPPtjZABaExhmWWwVRkUkgIaaSRATzI9XVLfWUSj+ZIAkc5xwL1brN12ix5/vlaQE56fdcYFFJXgYcB4yHW96EZeG2ReCXAtOg9FpBpVlpU9kMX0Ej9Qfj5f4Pl57baGla02nC9Z2u93v6D7sjEHk=</source>
  </file>
  <file path="classes/COntologyTag.php" hash="4cd36fbc44dd3d757aa37f1724a2c43e" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="104" package="MyWrapper\Ontology">
      <extends>COntologyTermObject</extends>
      <name>COntologyTag</name>
      <full_name>\COntologyTag</full_name>
      <docblock line="104">
        <description><![CDATA[Ontology tag.]]></description>
        <long-description><![CDATA[<p>A data element tagged by an instance of the {@link COntologyTerm COntologyTerm} class
will have all its metadata stored in that term, but there are cases in which one term is
not enough to describe the full metadata of a data element: for instance, a trait may be
measured using different methods and workflows, and this data may also be measured in
different units. For this reason this class extends the term
{@link COntologyTermObject base} class to handle this case.</p>

<p>Instances of this class contain a list of ontology {@link COntologyTerm terms} whose
elements are related between each other by predicates, which are also
{@link COntologyTerm terms}, this {@link kTAG_TERM attribute}</p>

<p>This path or chain of {@link COntologyTerm terms} represents the unique identifier of
this class instances and the tags with which data elements can be described.</p>

<p>The path root is a {@link COntologyTerm term} whose {@link COntologyNode::Kind() kind}
must be {@link kTYPE_TRAIT kTYPE_TRAIT} which represents <i>what</b> the data element is
and the path leaf is a {@link COntologyTerm term} whose
{@link COntologyNode::Kind() kind} must be {@link kTYPE_MEASURE kTYPE_MEASURE} which
represents the <b>type</b> or <b>scale</b> of the data; all the
{@link COntologyTerm terms} found between these two describe <b>how</b> the data was
measured or obtained. This path or chain represents the <i>descriptors</i> of data in
this library and the container in which these objects are stored represents the data
dictionary.</p>

<p>No two objects may exist with the same {@link Path() path}.</p>

<p>All instances of this class are uniquely {@link GID() identified} by a combination of two
elements:</p>

<ul>
<li><i>{@link NS() Namespace}</i>: There is one instance of this class which represents
    the default namespace of all objects derived from this class, its
    {@link GID() identifier} is a '@' character (which is forbidden in other related
    term classes).
<li><i>{@link Code() Code}</i>: The aforementioned namespace contains an integer field
    which represents a sequence counter which will be used as the object's
    {@link Code() code}.
</ul>

<p>The class features the following properties:</p>

<ul>
<li><i>{@link kTAG_PATH kTAG_PATH}</i>: This {@link Path() attribute} holds the list of
    {@link COntologyTerm term} {@link COntologyTerm::GID() identifiers} representing the
    tag path, the attribute is a string formed by the concatenation of all the
    {@link COntologyTerm term} {@link COntologyTerm::GID() identifiers} structured as
    follows: <i>TERM/PREDICATE/TERM/PREDICATE/.../TERM</i> where all items are
    {@link COntologyTerm term} {@link COntologyTerm::GID() identifiers}. This property
    represents the object's unique identifier, no two records can have this same value.
<li><i>{@link kTAG_TERM kTAG_TERM}</i>: This {@link Term() attribute} holds the list of
    {@link COntologyTerm terms} featured in the {@link Path() path} as an array of
    {@link COntologyTerm term} {@link kTAG_LID identifiers} in which odd elements
    represent the subjects and objects of the relationships and the even elements the
    relationship predicates.
<li><i>{@link kTAG_UID kTAG_UID}</i>: This attribute holds the hashed value of the
    {@link Path() path}: it will be used to detect duplicate records.
<li><i>{@link kTAG_REF_COUNT kTAG_REF_COUNT}</i>: This {@link RefCount() attribute}
    holds the count of data instances that refer to the current tag, or the number of
    data instances tagged by the current path. This attribute is required and is
    initialised to 0.
</ul>]]></long-description>
        <tag line="104" name="package" description="MyWrapper"/>
        <tag line="104" name="subpackage" description="Ontology"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="MyWrapper\Ontology">
        <name>NS</name>
        <full_name>NS</full_name>
        <docblock line="134">
          <description><![CDATA[Manage term namespace.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTerm::NS() overload} this method to force a default namespace
with a '@' code, this namespace element is created programmatically.</p>]]></long-description>
          <tag line="134" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="134" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="134" name="access" description="public"/>
          <tag line="134" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="see" description="\kTAG_NAMESPACE" refers="\kTAG_NAMESPACE"/>
        </docblock>
        <argument line="134">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="165" package="MyWrapper\Ontology">
        <name>Code</name>
        <full_name>Code</full_name>
        <docblock line="165">
          <description><![CDATA[Get code.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTerm::Code() overload} this method to make this method read-only,
the code is generated programmatically.</p>]]></long-description>
          <tag line="165" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="165" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="165" name="access" description="public"/>
          <tag line="165" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="see" description="\kTAG_CODE" refers="\kTAG_CODE"/>
        </docblock>
        <argument line="165">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="191" package="MyWrapper\Ontology">
        <name>Path</name>
        <full_name>Path</full_name>
        <docblock line="191">
          <description><![CDATA[Get path.]]></description>
          <long-description><![CDATA[<p>This {@link kTAG_PATH attribute} holds the list of {@link COntologyTerm term}
{@link COntologyTerm::GID() identifiers} representing the tag path, each element is
separated by a {@link kTOKEN_INDEX_SEPARATOR kTOKEN_INDEX_SEPARATOR} token.</p>

<p>This value represents the unique identifier of the object and it is set automatically
by the {@link Term() term} method, for this reason this method is read-only.</p>]]></long-description>
          <tag line="191" name="access" description="public"/>
          <tag line="191" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="191" name="see" description="\kTAG_PATH" refers="\kTAG_PATH"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="MyWrapper\Ontology">
        <name>RefCount</name>
        <full_name>RefCount</full_name>
        <docblock line="211">
          <description><![CDATA[Manage references count.]]></description>
          <long-description><![CDATA[<p>This method can be used to retrieve the object's {@link kTAG_REF_COUNT references}
count, or number of data instances tagged by this object.</p>

<p>This method is read-only, because this value is set programmatically.</p>]]></long-description>
          <tag line="211" name="access" description="public"/>
          <tag line="211" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="211" name="see" description="\kTAG_REF_COUNT" refers="\kTAG_REF_COUNT"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="270" package="MyWrapper\Ontology">
        <name>Term</name>
        <full_name>Term</full_name>
        <docblock line="270">
          <description><![CDATA[Manage terms.]]></description>
          <long-description><![CDATA[<p>This method can be used to add {@link COntologyTerm term} elements of the path, it
accepts a single parameter which represents either the elements to be added or the
operation to be performed:</p>

<ul>
<li><i>NULL</i>: This value indicates that we want to retrieve the whole list.
<li><i>FALSE</i>: This value indicates that we want to delete the whole list.
<li><i>array</i>: The elements of the array will be added to the list by recursing
    this method.
<li><i>other</i>: Any other type will be analysed as follows:
 <ul>
    <li><i>{@link COntologyTerm COntologyTerm}</i>: The term's
        {@link kTAG_GID identifier} will be used.
    <li><i>{@link COntologyEdge COntologyEdge}</i>: The edge elements will be
        handled as follows:
     <ul>
        <li><i>The current list is empty</i>: The three terms will make the list.
        <li><i>The current list exists</i>: The method will check if the edge's
            subject matches the last element in the list: if this is the case, the
            method will add the predicate and object terms; if not, it will raise an
            exception.
     </ul>
    <li><i>{@link COntologyEdgeIndex COntologyEdgeIndex}</i>: The same treatment as
        for the {@link COntologyEdge COntologyEdge}.
    <li><i>other</i>: Any other type will be cast to a string and interpreted as the
        {@link COntologyTerm term}'s {@link kTAG_GID identifier}.
 </ul>
</ul>

<p>All elements will be appended to the list in the order they were provided, it must be
noted that the class expects this list to be a sequence of term/predicate/term
elements, this method is not responsible for checking this.</p>

<p>The method will prevent modifications if the object is
{@link _IsCommitted() committed}, because this would change the object's unique
{@link kTAG_UID identifier}.</p>

<p>The method will return the current full list.</p>]]></long-description>
          <tag line="270" name="param" description="Term or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="270" name="access" description="public"/>
          <tag line="270" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="270" name="uses" description="\_CheckReference()" refers="\_CheckReference()"/>
          <tag line="270" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="270" name="see" description="\kTAG_TERM" refers="\kTAG_TERM"/>
        </docblock>
        <argument line="270">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="412" package="MyWrapper\Ontology">
        <name>HashIndex</name>
        <full_name>HashIndex</full_name>
        <docblock line="412">
          <description><![CDATA[Hash index.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentUnitObject::HashIndex() overload} this method to disable index
hashing.</p>]]></long-description>
          <tag line="412" name="param" description="Value to hash." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="412" name="static" description=""/>
          <tag line="412" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="412">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="437" package="MyWrapper\Ontology">
        <name>_index</name>
        <full_name>_index</full_name>
        <docblock line="437">
          <description><![CDATA[Return the object's unique index.]]></description>
          <long-description><![CDATA[<p>In this class we use the term's {@link kTAG_CODE code} as the {@link kTAG_LID local}
identifier.</p>]]></long-description>
          <tag line="437" name="access" description="protected"/>
          <tag line="437" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="472" package="MyWrapper\Ontology">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="472">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>We {@link CGraphNode::_Commit() overload} this method to provide the correct
container to the {@link CGraphNode parent} {@link CGraphNode::_Commit() method}.</p>

<p>We also overload this method to store the node properties into a Mongo collection
named {@link kDEFAULT_CNT_NODES kDEFAULT_CNT_NODES}, the record will be indexed by
node ID as a 64 bit integer.</p>]]></long-description>
          <tag line="472" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="472" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="472" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="472" name="access" description="protected"/>
          <tag line="472" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="472" name="uses" description="\Node()" refers="\Node()"/>
        </docblock>
        <argument line="472">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="472">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="472">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="538" package="MyWrapper\Ontology">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="538">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTerm::_PrepareCommit() overload} this method to check whether
there is another record with the same {@link kTAG_UID unique} identifier, in that
case we load the current object with the contents of the found one.</p>]]></long-description>
          <tag line="538" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="538" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="538" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="538" name="access" description="protected"/>
          <tag line="538" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="538" name="uses" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="538">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="538">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="538">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="649" package="MyWrapper\Ontology">
        <name>_Inited</name>
        <full_name>_Inited</full_name>
        <docblock line="649">
          <description><![CDATA[Return {@link _IsInited() initialised} status.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTerm::_Inited() overload} this method to link the presence of the
{@link Term() term} {@link kTAG_TERM attribute} to the
{@link _IsInited() initialised} {@link kFLAG_STATE_INITED status} and disable all
other inherited requirements.</p>]]></long-description>
          <tag line="649" name="see" description="\kTAG_TERM" refers="\kTAG_TERM"/>
          <tag line="649" name="access" description="protected"/>
          <tag line="649" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="683" package="MyWrapper\Ontology">
        <name>_NewSequence</name>
        <full_name>_NewSequence</full_name>
        <docblock line="683">
          <description><![CDATA[Get new sequence.]]></description>
          <long-description><![CDATA[<p>This method will return the next sequence number and increment the existing one.
The sequence is stored in a singleton record identified by the
{@link kTAG_SINGLETON_ID kTAG_SINGLETON_ID} character, this record contains a single
{@link kTAG_COUNT attribute} which represents the next available sequence number.</p>

<p>When retrieving the sequence, if the main record does not exist, this method will
create one with a first value of 1.</p>]]></long-description>
          <tag line="683" name="param" description="Object container." type="\CMongoContainer" variable="$theContainer">
            <type by_reference="false">\CMongoContainer</type>
          </tag>
          <tag line="683" name="access" description="protected"/>
          <tag line="683" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="683" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="683">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type>CMongoContainer</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/COntologyTerm.php" hash="f927d9dc106657bd8814db2420d4d586" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="59" package="MyWrapper\Ontology">
      <extends>COntologyTermObject</extends>
      <name>COntologyTerm</name>
      <full_name>\COntologyTerm</full_name>
      <docblock line="59">
        <description><![CDATA[Generic term.]]></description>
        <long-description><![CDATA[<p>This kind of {@link COntologyTermObject term} represents a generic ontology term.</p>

<p>This class handles the {@link _IsInited() inited} status by checking the following values
in its {@link Kind() kinds} list:</p>

<ul>
<li><i>Default</i>: By default the object must have its {@link kTAG_CODE code} set.
<li><i>{@link kTYPE_NAMESPACE kTYPE_NAMESPACE}</i>: It uses the default requirements.
<li><i>{@link kTYPE_ROOT kTYPE_ROOT}</i>: It requires the {@link kTAG_NAME name} to be
    set.
<li><i>{@link kTYPE_PREDICATE kTYPE_PREDICATE}</i>: It requires the
    {@link kTAG_NAME name}.
<li><i>{@link kTYPE_ATTRIBUTE kTYPE_ATTRIBUTE}</i>: It requires the
    {@link kTAG_NAME name} and {@link kTAG_CARDINALITY cardinality}.
<li><i>{@link kTYPE_MEASURE kTYPE_MEASURE}</i>: It requires the {@link kTAG_NAME name}
    and {@link kTAG_TYPE type}.
<li><i>{@link kTYPE_ENUMERATION kTYPE_ENUMERATION}</i>: It requires the
    {@link kTAG_NAME name} and {@link kTAG_ENUM enumeration}.
</ul>

<p>In this class we ensure that the term has both the {@link Code() code} and
{@link Name() name} in order to have an {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}.</p>]]></long-description>
        <tag line="59" name="package" description="MyWrapper"/>
        <tag line="59" name="subpackage" description="Ontology"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="MyWrapper\Ontology">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="92">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CCodedUnitObject::__construct() overload} the constructor to initialise
the {@link _IsInited() inited} {@link kFLAG_STATE_INITED flag} if the
{@link Code() code} and {@link Name() name} attributes are set.</p>]]></long-description>
          <tag line="92" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="92" name="access" description="public"/>
          <tag line="92" name="uses" description="\_IsInited" refers="\_IsInited"/>
          <tag line="92" name="see" description="\kTAG_CODE" refers="\kTAG_CODE"/>
        </docblock>
        <argument line="92">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="MyWrapper\Ontology">
        <name>NS</name>
        <full_name>NS</full_name>
        <docblock line="139">
          <description><![CDATA[Manage term namespace.]]></description>
          <long-description><![CDATA[<p>We {@link CTerm::NS() overload} this method in order to normalise the namespace: it
must be provided as a string, so if you provide an object, it must be derived from
this class and this method will use the provided object's {@link _index() index}.</p>

<p>In this class we do not support instances as namespaces.</p>]]></long-description>
          <tag line="139" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="139" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="139" name="access" description="public"/>
          <tag line="139" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="see" description="\kTAG_NAMESPACE" refers="\kTAG_NAMESPACE"/>
        </docblock>
        <argument line="139">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="209" package="MyWrapper\Ontology">
        <name>NamespaceName</name>
        <full_name>NamespaceName</full_name>
        <docblock line="209">
          <description><![CDATA[Manage term namespace name.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the term {@link kOFFSET_NAMESPACE namespace}, it
uses the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kOFFSET_NAMESPACE offset}.</p>

<p>This property represents the term's namespace name or acronym; not to be confused
with the {@link kTAG_NAMESPACE kTAG_NAMESPACE} offset which represents the namespace
term reference.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kOFFSET_NAMESPACE kOFFSET_NAMESPACE}.</p>]]></long-description>
          <tag line="209" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="209" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="209" name="access" description="public"/>
          <tag line="209" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="209" name="see" description="\kOFFSET_NAMESPACE" refers="\kOFFSET_NAMESPACE"/>
        </docblock>
        <argument line="209">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="209">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="242" package="MyWrapper\Ontology">
        <name>Code</name>
        <full_name>Code</full_name>
        <docblock line="242">
          <description><![CDATA[Manage code.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTermObject::Code() overload} this method to check the format of
the code, we perform the following checks:</p>

<ul>
<li><i>Characters</i>: There are a number of characters that are forbidden in
    codes, providing a code with such characters will trigger an exception:
 <ul>
    <li><i>at (@)</i>: No code may start with this character, this is reserved for
        identifying annotation terms.
 </ul>
</ul>]]></long-description>
          <tag line="242" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="242" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="242" name="access" description="public"/>
          <tag line="242" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="299" package="MyWrapper\Ontology">
        <name>Node</name>
        <full_name>Node</full_name>
        <docblock line="299">
          <description><![CDATA[Manage node references.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_NODE node} references, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of nodes that point to this term.</p>

<p>Each element of this list represents the ID of a node in the ontology: each time a
node references this term, its identifier will be aded to this offset.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_KIND kTAG_KIND}.</p>

<p>Note that you should only use this method for retrieving information, since
{@link COntologyNode nodes} store automatically this information when
{@link Commit() saved}.</p>]]></long-description>
          <tag line="299" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="299" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="299" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="299" name="access" description="public"/>
          <tag line="299" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="299" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="299" name="see" description="\kTAG_NODE" refers="\kTAG_NODE"/>
        </docblock>
        <argument line="299">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="299">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="299">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="341" package="MyWrapper\Ontology">
        <name>Predicate</name>
        <full_name>Predicate</full_name>
        <docblock line="341">
          <description><![CDATA[Manage predicate node references.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's predicate {@link kTAG_EDGE node}
references, it uses the standard accessor
{@link CAttribute::ManageArrayOffset() method} to
manage the list of predicate nodes that point to this term.</p>

<p>Each element of this list represents the ID of an edge node in the ontology: each
time an edge node references this term, its identifier will be aded to this offset.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_KIND kTAG_KIND}.</p>

<p>Note that you should only use this method for retrieving information, since
{@link COntologyNode nodes} store automatically this information when
{@link Commit() saved}.</p>]]></long-description>
          <tag line="341" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="341" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="341" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="341" name="access" description="public"/>
          <tag line="341" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="341" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="341" name="see" description="\kTAG_EDGE" refers="\kTAG_EDGE"/>
        </docblock>
        <argument line="341">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="341">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="341">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="378" package="MyWrapper\Ontology">
        <name>Enumeration</name>
        <full_name>Enumeration</full_name>
        <docblock line="378">
          <description><![CDATA[Manage enumerations.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_ENUM enumerations}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of enumerations.</p>

<p>Each element of this list should indicate a code or acronym defining the current
object</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_ENUM kTAG_ENUM}.</p>]]></long-description>
          <tag line="378" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="378" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="378" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="378" name="access" description="public"/>
          <tag line="378" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="378" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="378" name="see" description="\kTAG_ENUM" refers="\kTAG_ENUM"/>
        </docblock>
        <argument line="378">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="378">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="378">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="417" package="MyWrapper\Ontology">
        <name>Type</name>
        <full_name>Type</full_name>
        <docblock line="417">
          <description><![CDATA[Manage data type.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the measure data {@link kTAG_TYPE type}, it uses
the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_TYPE offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="417" name="param" description="Data type tag." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="417" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="417" name="access" description="public"/>
          <tag line="417" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="417">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="453" package="MyWrapper\Ontology">
        <name>Pattern</name>
        <full_name>Pattern</full_name>
        <docblock line="453">
          <description><![CDATA[Manage patterns.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_PATTERN patterns}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of patterns.</p>

<p>This term usually describes a {@link kTYPE_STRING string} data element that is
restricted by a series of string patterns, use the standard XML format.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_PATTERN kTAG_PATTERN}.</p>]]></long-description>
          <tag line="453" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="453" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="453" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="453" name="access" description="public"/>
          <tag line="453" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="453" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="453" name="see" description="\kTAG_PATTERN" refers="\kTAG_PATTERN"/>
        </docblock>
        <argument line="453">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="453">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="453">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="500" package="MyWrapper\Ontology">
        <name>Cardinality</name>
        <full_name>Cardinality</full_name>
        <docblock line="500">
          <description><![CDATA[Manage data cardinality.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the measure data {@link kTAG_CARDINALITY type}, it
uses the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_TYPE offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>string</i>: String values represent the cardinality enumeration:
     <ul>
        <li><i>{@link kCARD_0_1 kCARD_0_1}</i>: Zero or one, a scalar or none.
        <li><i>{@link kCARD_1 kCARD_1}</i>: Exactly one, a required scalar.
        <li><i>{@link kCARD_ANY kCARD_ANY}</i>: Any, this implies that we either
            have an array or no data.
     </ul>
    <li><i>integer</i>: An integer represents the exact cardinality, in that case
        we assume the data is an array of at most that number of elements.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="500" name="param" description="Data type tag." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="500" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="500" name="access" description="public"/>
          <tag line="500" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="500">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="500">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="539" package="MyWrapper\Ontology">
        <name>Unit</name>
        <full_name>Unit</full_name>
        <docblock line="539">
          <description><![CDATA[Manage data unit.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the measure {@link kTAG_UNIT unit}, it uses the
standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_UNIT offset}.</p>

<p>The value provided to this property should be the {@link _id() identifier} of a term
hat defines a unit.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kTAG_VALID kTAG_VALID}.</p>

<p>In this class we feed the value to the{@link _CheckReference() _CheckReference}
method that will take care of handling object references.</p>]]></long-description>
          <tag line="539" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="539" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="539" name="access" description="public"/>
          <tag line="539" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="539" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="539" name="see" description="\kTAG_UNIT" refers="\kTAG_UNIT"/>
        </docblock>
        <argument line="539">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="585" package="MyWrapper\Ontology">
        <name>Examples</name>
        <full_name>Examples</full_name>
        <docblock line="585">
          <description><![CDATA[Manage data examples.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle data {@link kTAG_EXAMPLES examples}, it is a list
of strings handles by the standard accessor
{@link CAttribute::ManageArrayOffset() method} in the examples
{@link kTAG_EXAMPLES offset}.</p>

<p>The provided value should be an example of how the current term could be represented,
an extensive set of examples should be included in order to provide enough
information to handle correctly any kind of output referenced data elements could
represent.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_VALID kTAG_VALID}.</p>]]></long-description>
          <tag line="585" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="585" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="585" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="585" name="access" description="public"/>
          <tag line="585" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="585" name="see" description="\kTAG_EXAMPLES" refers="\kTAG_EXAMPLES"/>
        </docblock>
        <argument line="585">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="585">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="585">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="622" package="MyWrapper\Ontology">
        <name>Domain</name>
        <full_name>Domain</full_name>
        <docblock line="622">
          <description><![CDATA[Manage domains.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_DOMAIN domains}, it uses
the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage the
list of domains.</p>

<p>Each element of this list should indicate a domain to which the current object
belongs to.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_CATEGORY kTAG_CATEGORY}.</p>]]></long-description>
          <tag line="622" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="622" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="622" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="622" name="access" description="public"/>
          <tag line="622" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="622" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="622" name="see" description="\kTAG_DOMAIN" refers="\kTAG_DOMAIN"/>
        </docblock>
        <argument line="622">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="622">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="622">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="659" package="MyWrapper\Ontology">
        <name>Category</name>
        <full_name>Category</full_name>
        <docblock line="659">
          <description><![CDATA[Manage categories.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's {@link kTAG_CATEGORY categories}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of categories.</p>

<p>Each element of this list should indicate a category to which the current object
belongs to.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_CATEGORY kTAG_CATEGORY}.</p>]]></long-description>
          <tag line="659" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="659" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="659" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="659" name="access" description="public"/>
          <tag line="659" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="659" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="659" name="see" description="\kTAG_CATEGORY" refers="\kTAG_CATEGORY"/>
        </docblock>
        <argument line="659">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="659">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="659">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="726" package="MyWrapper\Ontology">
        <name>Image</name>
        <full_name>Image</full_name>
        <docblock line="726">
          <description><![CDATA[Manage cross-references.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term's list of {@link kOFFSET_IMAGE images},
this {@link kOFFSET_IMAGE offset} is represented by an array of items holding three
elements:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: This element represents the kind or
    qualifier of the image, the element is required.
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: This element represents the data type of the
    image, this element is required.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: This element represents the image data which
    should be expressed in the data type declared in the {@link kTAG_TYPE kTAG_TYPE}
    element.
</ul>

<p>The method expects the following parameters:</p>

<ul>
<li><b>$theOffset</b>: The main offset to manage.
<li><b>$theKind</b>: The item {@link kTAG_KIND kind}; it should be able to cast this
    value to a string which represents an index.
<li><b>$theType</b>: The item {@link kTAG_TYPE type}; it should be able to cast this
    value to a string which represents an index.
<li><b>$theData</b>: This parameter represents the item's {@link kTAG_DATA data}
    element, or the operation to be performed:
 <ul>
    <li><i>NULL</i>: This indicates that we want to retrieve the data of the item
        with index matching the previous parameters.
    <li><i>FALSE</i>: This indicates that we want to remove the item matching the
        index provided in the previous parameters.
    <li><i>other</i>: Any other value indicates that we want to add or replace the
        {@link kTAG_DATA data} element of the item matching the previous parameters.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the element or list <i>before</i> it was eventually
        modified.
    <li><i>FALSE</i>: Return the element or list <i>after</i> it was eventually
        modified.
 </ul>
</ul>

<p>The method makes use of a static {@link CAttribute::ManageTypedKindOffset() method},
please consult its reference for more information.</p>]]></long-description>
          <tag line="726" name="param" description="Image kind." type="mixed" variable="$theKind">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="726" name="param" description="Image type." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="726" name="param" description="Image value." type="mixed" variable="$theData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="726" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="726" name="access" description="public"/>
          <tag line="726" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="726">
          <name>$theKind</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="726">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="726">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="726">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="785" package="MyWrapper\Ontology">
        <name>Source</name>
        <full_name>Source</full_name>
        <docblock line="785">
          <description><![CDATA[Manage term sources.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term {@link kTAG_SOURCE sources}, it manages an
array of strings with the following offsets:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: The source kind, this string can be used to
    define the type of the source, this element represents the array key, although
    technically it is implemented as an element to allow searching on all values.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The source, this element should hold the
    actual source reference, which should be convertable to a string.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theType</b>: The element type, kind or index:
 <ul>
    <li><i>NULL</i>: This value indicates that the phone has no type or kind, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the kind or type of
        the phone number.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="785" name="param" description="Source." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="785" name="param" description="Source kind or index." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="785" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="785" name="access" description="public"/>
          <tag line="785" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="785">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="785">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="785">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="831" package="MyWrapper\Ontology">
        <name>Version</name>
        <full_name>Version</full_name>
        <docblock line="831">
          <description><![CDATA[Manage version.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term public {@link kOFFSET_VERSION version}, it
uses the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kOFFSET_VERSION offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>Note that the object features another version {@link kTAG_VERSION offset} which is
automatically managed by the {@link CPersistentUnitObject ancestor}, the latter is an
internal value, this one can be considere the <i>public</i> version.</p>]]></long-description>
          <tag line="831" name="param" description="Version or operation." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="831" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="831" name="access" description="public"/>
          <tag line="831" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="831" name="see" description="\kOFFSET_VERSION" refers="\kOFFSET_VERSION"/>
        </docblock>
        <argument line="831">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="831">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="874" package="MyWrapper\Ontology">
        <name>Synonym</name>
        <full_name>Synonym</full_name>
        <docblock line="874">
          <description><![CDATA[Manage synonyms.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTermObject::Synonym() overload} this method to restrict the
synonym {@link kTAG_KIND kind}: the <i>$theType</i> parameter must take one of the
following values:</p>

<ul>
<li><i>{@link kTYPE_EXACT kTYPE_EXACT}</i>: Exact synonym.
<li><i>{@link kTYPE_BROAD kTYPE_BROAD}</i>: Broad synonym.
<li><i>{@link kTYPE_NARROW kTYPE_NARROW}</i>: Narrow synonym.
<li><i>{@link kTYPE_RELATED kTYPE_RELATED}</i>: Related synonym.
</ul>]]></long-description>
          <tag line="874" name="param" description="Synonym." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="874" name="param" description="Synonym type." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="874" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="874" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="874" name="access" description="public"/>
          <tag line="874" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="874">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="874">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="874">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="874">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="936" package="MyWrapper\Ontology">
        <name>Xref</name>
        <full_name>Xref</full_name>
        <docblock line="936">
          <description><![CDATA[Manage cross-references.]]></description>
          <long-description><![CDATA[<p>We {@link COntologyTermObject::Xref() overload} this method to restrict the
cross-reference {@link kTAG_KIND kind}: the <i>$theType</i> parameter must take one
of the following values:</p>

<ul>
<li><i>{@link kTYPE_EXACT kTYPE_EXACT}</i>: Exact cross-reference.
<li><i>{@link kTYPE_BROAD kTYPE_BROAD}</i>: Broad cross-reference.
<li><i>{@link kTYPE_NARROW kTYPE_NARROW}</i>: Narrow cross-reference.
<li><i>{@link kTYPE_RELATED kTYPE_RELATED}</i>: Related cross-reference.
</ul>

<p>We also {@link _CheckReference() filter} the provided value to extract the object
identifier.</p>]]></long-description>
          <tag line="936" name="param" description="Reference or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="936" name="param" description="Reference type." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="936" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="936" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="936" name="access" description="public"/>
          <tag line="936" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="936">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1008" package="MyWrapper\Ontology">
        <name>Relate</name>
        <full_name>Relate</full_name>
        <docblock line="1008">
          <description><![CDATA[Manage object references.]]></description>
          <long-description><![CDATA[<p>We {@link CRelatedUnitObject::Relate() override} this method to handle references
structured as follows:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: This offset represents the reference
    predicate, it may be omitted if the reference has no type or when we want to
    define a default reference. By default we expect here a term
    {@link _CheckReference() reference}.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: This offset represents the referenced term,
    it should be in the form of an object {@link _CheckReference() reference}.
</ul>

<p>The main reason to override the method is to ensure references are standard
{@link CDataTypeBinary binary} strings.</p>]]></long-description>
          <tag line="1008" name="param" description="Reference object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1008" name="param" description="Reference predicate." type="mixed" variable="$thePredicate">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1008" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1008" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1008" name="access" description="public"/>
          <tag line="1008" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1008" name="see" description="\kTAG_LINK_OUT" refers="\kTAG_LINK_OUT"/>
        </docblock>
        <argument line="1008">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1008">
          <name>$thePredicate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1009">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1010">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1059" package="MyWrapper\Ontology">
        <name>Valid</name>
        <full_name>Valid</full_name>
        <docblock line="1059">
          <description><![CDATA[Manage valid reference.]]></description>
          <long-description><![CDATA[<p>We {@link CRelatedUnitObject::Valid() overload} this method to
{@link _CheckReference() ensure} that references are provided in the correct manner,
that is, as a {@link CDataTypeBinary binary} standard type.</p>]]></long-description>
          <tag line="1059" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1059" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1059" name="access" description="public"/>
          <tag line="1059" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1059" name="uses" description="\_CheckReference()" refers="\_CheckReference()"/>
          <tag line="1059" name="uses" description="\Valid()" refers="\Valid()"/>
          <tag line="1059" name="see" description="\kTAG_VALID" refers="\kTAG_VALID"/>
        </docblock>
        <argument line="1059">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1059">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1101" package="MyWrapper\Ontology">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="1101">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if the {@link Code() code} and
{@link Name() name} attributes are set.</p>]]></long-description>
          <tag line="1101" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1101" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="1101" name="access" description="public"/>
        </docblock>
        <argument line="1101">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1101">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1132" package="MyWrapper\Ontology">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="1132">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if the {@link Code() code} and
{@link Name() name} attributes are set.</p>]]></long-description>
          <tag line="1132" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1132" name="access" description="public"/>
        </docblock>
        <argument line="1132">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1173" package="MyWrapper\Ontology">
        <name>ValidObject</name>
        <full_name>ValidObject</full_name>
        <docblock line="1173">
          <description><![CDATA[Return a valid object.]]></description>
          <long-description><![CDATA[<p>We {@link CRelatedUnitObject::ValidObject() overload} this method to enforce the
{@link _IsEncoded() encoded} {@link kFLAG_STATE_ENCODED flag}.</p>]]></long-description>
          <tag line="1173" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1173" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1173" name="param" description="Load modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="1173" name="static" description=""/>
          <tag line="1173" name="return" description="" type="\CCodedUnitObject">
            <type by_reference="false">\CCodedUnitObject</type>
          </tag>
        </docblock>
        <argument line="1173">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1174">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1175">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1234" package="MyWrapper\Ontology">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="1234">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We overload this method to set default {@link Kind() kinds} according to which data
properties the object has:</p>

<ul>
<li><i>{@link Cardinality() Cardinality}</i>: We set the {@link Kind() kind} to
    {@link kTYPE_ATTRIBUTE attribute}.
<li><i>Data {@link Type() Type}</i>: We set the {@link Kind() kind} to
    {@link kTYPE_MEASURE measure}.
<li><i>{@link Enumeration() Enumeration}</i>: We set the {@link Kind() kind} to
    {@link kTYPE_ENUMERATION enumeration}.
</ul>

<p>We also set by default the {@link Enumerstion() enumeration} to the value of the
{@link Code() code}, if the term has the {@link kTYPE_ENUMERATION enumeration}
{@link Kind() kind} and the term {@link Enumeration() enumerations} are empty.</p>]]></long-description>
          <tag line="1234" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1234" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1234" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1234" name="access" description="protected"/>
          <tag line="1234" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="1234" name="uses" description="\Kind()" refers="\Kind()"/>
          <tag line="1234" name="see" description="\kTYPE_ENUMERATION" refers="\kTYPE_ENUMERATION"/>
        </docblock>
        <argument line="1234">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1234">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1234">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1300" package="MyWrapper\Ontology">
        <name>_Inited</name>
        <full_name>_Inited</full_name>
        <docblock line="1300">
          <description><![CDATA[Return {@link _IsInited() initialised} status.]]></description>
          <long-description><![CDATA[<p>This method will check the contents of the object and return the correct
{@link _IsInited() initialised} status according to the contents of the
{@link Kind() kind} {@link kTAG_KIND property}:</p>

<ul>
<li><i>Default</i>: By default the object must have its {@link kTAG_CODE code} set,
    this is {@link COntologyTermObject inherited}.
<li><i>{@link kTYPE_NAMESPACE kTYPE_NAMESPACE}</i>: It uses the default
    requirements.
<li><i>{@link kTYPE_ROOT kTYPE_ROOT}</i>: It requires the {@link kTAG_NAME name}.
<li><i>{@link kTYPE_PREDICATE kTYPE_PREDICATE}</i>: It requires the
    {@link kTAG_NAME name}.
<li><i>{@link kTYPE_ATTRIBUTE kTYPE_ATTRIBUTE}</i>: It requires the
    {@link kTAG_NAME name} and {@link kTAG_CARDINALITY cardinality}.
<li><i>{@link kTYPE_MEASURE kTYPE_MEASURE}</i>: It requires the
    {@link kTAG_NAME name} and {@link kTAG_TYPE type}.
<li><i>{@link kTYPE_ENUMERATION kTYPE_ENUMERATION}</i>: It requires the
    {@link kTAG_NAME name} and {@link kTAG_ENUM enumeration}.
</ul>]]></long-description>
          <tag line="1300" name="access" description="protected"/>
          <tag line="1300" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/COntologyTermObject.php" hash="f70367e35492d1d801782a37d631e057" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Tokens.]]></description>
        <long-description><![CDATA[<p>This include file contains all default token definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="64" package="MyWrapper\Ontology">
      <extends>CCodedUnitObject</extends>
      <name>COntologyTermObject</name>
      <full_name>\COntologyTermObject</full_name>
      <docblock line="64">
        <description><![CDATA[Ontology term ancestor.]]></description>
        <long-description><![CDATA[<p>An ontology term represents a concept identified by a pair of elements: the
{@link NS() namespace} and the {@link Code() code}. The {@link NS() namespace} groups all
{@link Code() codes} belonging to a specific category, the {@link Code() code} identifies
the term within the {@link NS() namespace}.</p>

<p>The unique {@link _index() identifier} of instances from this class are formed by the
combination of the {@link NS() namespace} and @link Code() code}, separated by a
{@link kTOKEN_NAMESPACE_SEPARATOR separator} token; if the term has no namespace, the
token is omitted.</p>

<p>This class represents the ancestor of ontology terms, it adds to its
{@link CCodedUnitObject parent} the following requirements and features:</p>

<ul>
<li><i>{@link _CheckReference() _CheckReference}</i>: When instantiating the class, the
    parameter provided as the identifier is required to be an object reference.
<li><i>{@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED} flag</i>: This flag is enforced,
    which means that all derived classes must use the standard {@link CDataType types}.
</ul>

<p>We declare this class abstract to force the creation of specific ontology term types.</p>]]></long-description>
        <tag line="64" name="package" description="MyWrapper"/>
        <tag line="64" name="subpackage" description="Ontology"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="MyWrapper\Ontology">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="96">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CCodedUnitObject::__construct() overload} the constructor to
{@link _CheckReference() normalise} the provided identifier.</p>]]></long-description>
          <tag line="96" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="96" name="access" description="public"/>
          <tag line="96" name="uses" description="\_IsInited" refers="\_IsInited"/>
          <tag line="96" name="see" description="\kTAG_CODE" refers="\kTAG_CODE"/>
        </docblock>
        <argument line="96">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="MyWrapper\Ontology">
        <name>NS</name>
        <full_name>NS</full_name>
        <docblock line="151">
          <description><![CDATA[Manage term namespace.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the term {@link kTAG_NAMESPACE namespace}, it uses
the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_NAMESPACE offset}.</p>

<p>The namespace collects a series of terms under a common group in which each term
{@link Code() code} is unique, this {@link kTAG_NAMESPACE offset} represents a term
reference.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kTAG_NAMESPACE kTAG_NAMESPACE}.</p>]]></long-description>
          <tag line="151" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="151" name="access" description="public"/>
          <tag line="151" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="151" name="see" description="\kTAG_NAMESPACE" refers="\kTAG_NAMESPACE"/>
        </docblock>
        <argument line="151">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="184" package="MyWrapper\Ontology">
        <name>Code</name>
        <full_name>Code</full_name>
        <docblock line="184">
          <description><![CDATA[Manage code.]]></description>
          <long-description><![CDATA[<p>We {@link CCodedUnitObject::Code() overload} this method to check the format of the
code, we perform the following checks:</p>

<ul>
<li><i>Characters</i>: There are a number of characters that are forbidden in
    codes, providing a code with such characters will trigger an exception:
 <ul>
    <li><i>period (.)</i>: No periods can be embedded in codes, these conflict with
        the sub-fields character in Mongo.
 </ul>
</ul>]]></long-description>
          <tag line="184" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="184" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="184" name="access" description="public"/>
          <tag line="184" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="184">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="225" package="MyWrapper\Ontology">
        <name>GID</name>
        <full_name>GID</full_name>
        <docblock line="225">
          <description><![CDATA[Manage term global identifier.]]></description>
          <long-description><![CDATA[<p>The term global {@link kTAG_GID identifier} represents the un-hashed version of the
term local {@link kTAG_LID identifier}.</p>

<p>This value is set automatically by methods, so this method is read-only.</p>]]></long-description>
          <tag line="225" name="access" description="public"/>
          <tag line="225" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="see" description="\kTAG_GID" refers="\kTAG_GID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="286" package="MyWrapper\Ontology">
        <name>Name</name>
        <full_name>Name</full_name>
        <docblock line="286">
          <description><![CDATA[Manage term name.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term {@link kTAG_NAME name}, it manages an
array of structures with the following offsets:</p>

<ul>
<li><i>{@link kTAG_LANGUAGE kTAG_LANGUAGE}</i>: The name's language, this element
    represents the code of the language in which the next element is expressed in.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The term name or label.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The name or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theLanguage</b>: The name's language code:
 <ul>
    <li><i>NULL</i>: This value indicates that the name has no language, in general,
        when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the language code.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="286" name="param" description="Term name or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="286" name="param" description="Term name language code." type="mixed" variable="$theLanguage">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="286" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="286" name="access" description="public"/>
          <tag line="286" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="uses" description="\CAttribute::ManageTypedOffset()" refers="\CAttribute::ManageTypedOffset()"/>
          <tag line="286" name="see" description="\kTAG_NAME" refers="\kTAG_NAME"/>
        </docblock>
        <argument line="286">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$theLanguage</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="346" package="MyWrapper\Ontology">
        <name>Definition</name>
        <full_name>Definition</full_name>
        <docblock line="346">
          <description><![CDATA[Manage term definition.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term {@link kTAG_DEFINITION definition}, it
manages an array of structures with the following offsets:</p>

<ul>
<li><i>{@link kTAG_LANGUAGE kTAG_LANGUAGE}</i>: The definition's language, this
    element represents the code of the language in which the next element is
    expressed in.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The term definition or description.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The definition or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theLanguage</b>: The definition's language code:
 <ul>
    <li><i>NULL</i>: This value indicates that the definition has no language, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the language code.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="346" name="param" description="Term definition or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="346" name="param" description="Term definition language code." type="mixed" variable="$theLanguage">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="346" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="346" name="access" description="public"/>
          <tag line="346" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="uses" description="\CAttribute::ManageTypedOffset()" refers="\CAttribute::ManageTypedOffset()"/>
          <tag line="346" name="see" description="\kTAG_DEFINITION" refers="\kTAG_DEFINITION"/>
        </docblock>
        <argument line="346">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$theLanguage</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="406" package="MyWrapper\Ontology">
        <name>Description</name>
        <full_name>Description</full_name>
        <docblock line="406">
          <description><![CDATA[Manage term description.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term {@link kTAG_DESCRIPTION description}, it
manages an array of structures with the following offsets:</p>

<ul>
<li><i>{@link kTAG_LANGUAGE kTAG_LANGUAGE}</i>: The description's language, this
    element represents the code of the language in which the next element is
    expressed in.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The term description or comment.
</ul>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theValue</b>: The description or operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the second parameter.
    <li><i>FALSE</i>: Delete the value selected by the second parameter.
    <li><i>other</i>: Set value selected by the second parameter.
 </ul>
<li><b>$theLanguage</b>: The description's language code:
 <ul>
    <li><i>NULL</i>: This value indicates that the description has no language, in
        general, when adding elements, this case applies to default elements.
    <li><i>other</i>: All other types will be interpreted as the language code.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="406" name="param" description="Term description or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="406" name="param" description="Term description language code." type="mixed" variable="$theLanguage">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="406" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="406" name="access" description="public"/>
          <tag line="406" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="406" name="uses" description="\CAttribute::ManageTypedOffset()" refers="\CAttribute::ManageTypedOffset()"/>
          <tag line="406" name="see" description="\kTAG_DESCRIPTION" refers="\kTAG_DESCRIPTION"/>
        </docblock>
        <argument line="406">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="406">
          <name>$theLanguage</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="406">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="474" package="MyWrapper\Ontology">
        <name>Synonym</name>
        <full_name>Synonym</full_name>
        <docblock line="474">
          <description><![CDATA[Manage synonyms.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term {@link kTAG_REFERENCE_SYNONYM synonyms}
list, these elements are strings that can be considered synonyms of the current term.</p>

<p>This property is organised as an array of items structured as follows:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: The synonym kind, its value is provided in
    the <i>$theType</i> parameter.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The synonym values organised as an array of
    strings.
</ul>

<p>The method expects the following parameters:</p>

<ul>
<li><b>$theValue</b>: The synonym value.
<li><b>$theType</b>: The synonym type.
<li><b>$theOperation</b>: The operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the previous parameters.
    <li><i>FALSE</i>: Delete the value selected by the previous parameters.
    <li><i>other</i>: Set value selected by the previous parameters.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method makes use of a static
{@link CAttribute::ManageTypedArrayOffset() method}, please consult its reference for
more information.</p>]]></long-description>
          <tag line="474" name="param" description="Synonym." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="474" name="param" description="Synonym type." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="474" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="474" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="474" name="access" description="public"/>
          <tag line="474" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="535" package="MyWrapper\Ontology">
        <name>Xref</name>
        <full_name>Xref</full_name>
        <docblock line="535">
          <description><![CDATA[Manage cross-references.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the term
{@link kTAG_REFERENCE_XREF cross-references} list, these elements are references to
other terms that can be considered synonyms of the current term, the reference should
be the term's {@link _id() identifier}.</p>

<p>This property is organised as an array of items structured as follows:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: The cross-reference kind, its value is
    provided in the <i>$theType</i> parameter.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: The cross-reference values organised as an
    array of term identifiers.
</ul>

<p>The method expects the following parameters:</p>

<ul>
<li><b>$theValue</b>: The cross-reference.
<li><b>$theType</b>: The cross-reference type.
<li><b>$theOperation</b>: The operation:
 <ul>
    <li><i>NULL</i>: Return the current value selected by the previous parameters.
    <li><i>FALSE</i>: Delete the value selected by the previous parameters.
    <li><i>other</i>: Set value selected by the previous parameters.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The method makes use of a static
{@link CAttribute::ManageTypedArrayOffset() method}, please consult its reference for
more information.</p>]]></long-description>
          <tag line="535" name="param" description="Object or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="535" name="param" description="Cross-reference type." type="mixed" variable="$theType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="535" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="535" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="535" name="access" description="public"/>
          <tag line="535" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="535">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$theType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="571" package="MyWrapper\Ontology">
        <name>_index</name>
        <full_name>_index</full_name>
        <docblock line="571">
          <description><![CDATA[Return the object's unique index.]]></description>
          <long-description><![CDATA[<p>In this class we use the term's {@link kTAG_NAMESPACE namespace} and
{@link kTAG_CODE code} to build the object's unique
{@link kTAG_LID identifier}; if the {@link kTAG_NAMESPACE namespace} is
missing, we use the {@link kTAG_CODE code}; if the {@link kTAG_NAMESPACE namespace}
is present, we use it as a prefix with the {@link kTAG_CODE code}, separated by the
{@link kTOKEN_NAMESPACE_SEPARATOR separator} token.</p>]]></long-description>
          <tag line="571" name="access" description="protected"/>
          <tag line="571" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="612" package="MyWrapper\Ontology">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="612">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>We overload this method to enforce the {@link kFLAG_STATE_ENCODED encoded} modifier.</p>]]></long-description>
          <tag line="612" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="612" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="612" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="612" name="access" description="protected"/>
          <tag line="612" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="612" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="612">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="612">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="612">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="648" package="MyWrapper\Ontology">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="648">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We overload this method to enforce the {@link kFLAG_STATE_ENCODED encoded} modifier.</p>]]></long-description>
          <tag line="648" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="648" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="648" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="648" name="access" description="protected"/>
          <tag line="648" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="648" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="648" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="648">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="648">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="648">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="715" package="MyWrapper\Ontology">
        <name>_CheckReference</name>
        <full_name>_CheckReference</full_name>
        <docblock line="715">
          <description><![CDATA[Normalise reference parameter.]]></description>
          <long-description><![CDATA[<p>This method can be used to normalise a parameter that is supposed to be a reference
to another term, that is, a binary string hash of the term's
{@link _index() identifier} converted to a {@link CDataTypeBinary binary}
standard type.</p>

<p>The method will perform the following conversions:</p>

<ul>
<li><i>{@link CDataTypeBinary CDataTypeBinary}</i>: This is the default data type
    for the identifier.
<li><i>{@link MongoBinData MongoBinData}</i>: This type will be converted to the
    standard {@link CDataTypeBinary CDataTypeBinary} type.
<li><i>COntologyTermObject</i>: Objects of the same class will have their
    {@link _id() identifier} extracted.
<li><i>NULL</i>: NULL data will simply be passed.
<li><i>other</i>: Any other data type is assumed to be the term's
    {@link _index() identifier}, so it will be hashed into a binary string and
    converted to the standard {@link CDataTypeBinary CDataTypeBinary} type.
<li><i>array</i>: Arrays cannot be converted to string, so the method will raise an
    exception.
</ul>]]></long-description>
          <tag line="715" name="param" description="Object reference." type="mixed" variable="$theReference">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="715" name="access" description="protected"/>
          <tag line="715" name="return" description="" type="\CDataTypeBinary">
            <type by_reference="false">\CDataTypeBinary</type>
          </tag>
          <tag line="715" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="715" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="715">
          <name>$theReference</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CPersistentObject.php" hash="5800560842de5a6290265c3465aba603" package="Default">
    <include line="29" type="Require Once" package="Default">
      <name/>
      <docblock line="29">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="80" package="MyWrapper\Persistence">
      <extends>CStatusObject</extends>
      <name>CPersistentObject</name>
      <full_name>\CPersistentObject</full_name>
      <docblock line="80">
        <description><![CDATA[Persistent unit objects ancestor.]]></description>
        <long-description><![CDATA[<p>This class is the ancestor of all persistent objects in this library, it implements the
common interfaces and workflow that persistent objects will use to be
{@link __construct() instantiated}, {@link __construct() retrieved} or
{@link Commit() stored} in object {@link CContainer containers}.</p>

<p>This class interacts closely with {@link CContainer CContainer} derived classes so that
concrete classes derived from this one need only to be concerned with their specific
functionality, while persistent issues are handled foth by this class and by the
concrete classes derived from {@link CContainer CContainer}.</p>

<p>The class declares three main persistence operations whose workflow is as follows:</p>

<ul>
<li><i>{@link __construct() Create}</i>: The {@link __construct() constructor} can
    instantiate an object from data, as its {@link CArrayObject ancestor}, a protected
    {@link _Create() method} may be overloaded by derived classes to implement
    specific functionality.
<li><i>{@link __construct() Retrieve}</i>: The {@link __construct() constructor} is
    also used to retrieve objects stored in a {@link CContainer container}, this
    operation follows these steps:
 <ul>
    <li><i>{@link _PrepareLoad() Prepare}</i>: This step is used to check parameters and
        prepare the resources needed to locate and retrieve the object.
    <li><i>{@link _Load() Find}</i>: In this step the object will be searched for
        and retrieved from the {@link CContainer container}.
 </ul>
<li><i>{@link Commit() Store}</i>: This operation will store the object in a
    {@link CContainer container}, the followed steps are:
 <ul>
    <li><i>{@link _PrepareCommit() Prepare}</i>: This step is used to check parameters
        and prepare the resources needed to save the object.
    <li><i>{@link _Commit() Store}</i>: This operation will perform the actual
        storage, this step should be delegated to the {@link CContainer container}.
 </ul>
</ul>

<p>This class implements the default behaviour, in derived classes you should overload these
methods if necessary, without changing the public interface.</p>

<p>This class extends its {@link CStatusObject ancestor} behaviour to record persistence
status and accepts only instances derived from {@link CContainer CContainer} as
containers.</p>]]></long-description>
        <tag line="80" name="package" description="MyWrapper"/>
        <tag line="80" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="213" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="213">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor can be used to instantiate an empty object, instantiate an object
from some content, or load an object from a container.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theContainer</b>: This parameter represents either the <i>contents</i> of
    the object, if the next parameter is missing, or the
    <i>{@link CContainer container}</i> in which the object resides. If missing, we
    assume we want to create an empty object.
 <ul>
    <li><i>NULL</i>: In this case it is assumed you want to instantiate an empty
        object and the next parameter will be ignored.
    <li><i>Array</i> or <i>ArrayObject</i>: In this case we assume the parameter
        represents either the object contents, if the next parameter is <i>NULL</i>,
        or the {@link CContainer container} in which the object is
        {@link Commit() stored}, in which case we interpret the next parameter to be
        the object's identifier.
    <li><i>Other</i>: Any other type will raise an
        {@link kERROR_UNSUPPORTED exception}, or it should be handled by derived
        classes.
 </ul>
<li><b>$theIdentifier</b>: This parameter represents the key or query that will be
    used to locate the object in the container provided in the first parameter.
 <ul>
    <li><i>NULL</i>: This indicates that the first parameter represents the object
        <i>contents</i>.
    <li><i>other</i>: Any other type is considered as a key or query used to locate
        the object in the container provided in the first parameter.
 </ul>
<li><b>$theModifiers</b>: This bitfield parameter can be used to provide a series of
    options to the object. The available options can be consulted in
    {@link Flags.inc.php this} file. Most of these options are managed automatically
    and should not be provided explicitly. This class handles one option that has
    the following meaning:
 <ul>
    <li><i>{@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED}</i>: If the option is on,
        the object will be passed through a
        {@link CContainer::UnserialiseObject() conversion} process that will convert
        all {@link CDataType standard} data types into native container custom data
        types {@link CContainer::_PrepareCommit() before}
        {@link Commit() committing} the object; the opposite
        {@link CDataType::SerialiseObject() conversion} process will take place
        {@link CContainer::_FinishLoad() after} {@link __construct() loading} the
        object from a container. It is a good idea to keep this flag ON, because the
        converted object will be compatible with any {@link CContainer container}
        and it will make data transfers from one database to the other easy.
        This process is automatic and transparent.
 </ul>
</ul>

<p>Depending on the results of this method we set the {@link _IsCommitted() committed}
status {@link kFLAG_STATE_COMMITTED flag} as follows:</p>

<ul>
<li><i>Empty object</i>: By omitting the first parameter we indicate that we want to
    start from scratch, the object will not have its
    {@link _IsCommitted() committed} {@link kFLAG_STATE_COMMITTED flag} set.
<li><i>Filled object</i>: In this case we provide in the <i>$theContainer</i>
    parameter the object's <i>contents</i>. In this case we do not consider the
    object as persistent, so the object will not have its
    {@link _IsCommitted() committed} {@link kFLAG_STATE_COMMITTED flag} set.
<li><i>Selected object</i>: In this case we search the <i>$theContainer</i> with
    the provided <i>$theIdentifier</i> as a key or query, and if:
 <ul>
    <li><i>Found</i>: We set the {@link _IsCommitted() committed}
        {@link kFLAG_STATE_COMMITTED flag} on.
    <li><i>Not found</i>: We instantiate an empty object and ignore the
        {@link _IsCommitted() committed} {@link kFLAG_STATE_COMMITTED flag}.
 </ul>
</ul>

<p>The {@link _IsInited() inited} status {@link kFLAG_STATE_INITED flag} is not set by
default, this will prevent the object from being {@link Commit() stored} and it is
the responsibility of derived concrete instances to manage this status.</p>

<p>This method takes advantage of a protected interface which should be overloaded by
derived classes instead of overloading this method:</p>

<ul>
<li><i>Retrieve object</i>: If the second parameter was provided, it implies that
    the object is to be retrieved from the first parameter which represents the
    {@link CContainer container} in which the object contents are stored.
 <ul>
    <li><i>{@link _PrepareLoad() _PrepareLoad}()</i>: This method should check and
        normalise the container and identifier. In this class we ensure that the
        container is derived from {@link CContainer CContainer}.
    <li><i>{@link _Load() _Load}()</i>: This method will delegate the
        {@link CContainer container} the responsibility of locating and retrieving
        the object using the provided identifier.
 </ul>
<li><i>{@link _Create() _Create}()</i>: This method should instantiate
    the object from the contents returned by {@link _Load() _Load} or
    by the data provided in the first parameter in the case the second parameter
    was omitted.
</ul>

<p>Derived classes should overload the above interface rather than overloading this
method and should do so only if necessary, because this workflow should be sufficient
for persisting objects.</p>]]></long-description>
          <tag line="213" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="213" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="213" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="213" name="access" description="public"/>
          <tag line="213" name="uses" description="\_PrepareLoad()" refers="\_PrepareLoad()"/>
          <tag line="213" name="uses" description="\_Load()" refers="\_Load()"/>
          <tag line="213" name="uses" description="\_Create()" refers="\_Create()"/>
          <tag line="213" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
          <tag line="213" name="uses" description="\_FinishLoad()" refers="\_FinishLoad()"/>
          <tag line="213" name="uses" description="\_FinishCreate()" refers="\_FinishCreate()"/>
        </docblock>
        <argument line="213">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="214">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="215">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="382" package="MyWrapper\Persistence">
        <name>Commit</name>
        <full_name>Commit</full_name>
        <docblock line="382">
          <description><![CDATA[Commit the object into a container.]]></description>
          <long-description><![CDATA[<p>This method should be used to commit the object to a container, the method accepts
two parameters:</p>

<ul>
<li><b>$theContainer</b>: This parameter represents the <i>container</i> in which
    the object is to be stored. By default we enforce concrete instances of
    {@link CContainer CContainer}, derived classes may overload the protected
    interface to initialise this value.
<li><b>$theIdentifier</b>: This parameter represents the value by which the current
    object will be uniquely identified in the first parameter. By default this
    value is required, derived classes may overload the protected interface to
    initialise this value.
<li><b>$theModifiers</b>: This parameter represents the commit operation options, by
    default we assume you want to {@link kFLAG_PERSIST_REPLACE replace} an object,
    but you may change this value if you want to perform specific commit operations:
 <ul>
    <li><i>{@link kFLAG_PERSIST_INSERT kFLAG_PERSIST_INSERT}</i>: The provided
        object will be inserted in the container, it is assumed that no other
        element in the container shares the same identifier, in that case the
        container {@link CContainer::Commit() method} must raise an
        {@link kERROR_DUPLICATE exception}.
    <li><i>{@link kFLAG_PERSIST_UPDATE kFLAG_PERSIST_UPDATE}</i>: The provided
        object will replace the existing object. In this case the method expects
        the container to have an entry with the same key as the provided identifier,
        if this is not the case the container {@link CContainer::Commit() method}
        must raise an {@link kERROR_NOT_FOUND exception}. With this option it is
        assumed that the provided object's attributes will replace all the existing
        object's ones.
    <li><i>{@link kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY}</i>: The provided
        object is assumed to contain a subset of an existing object's attributes,
        these provided attributes will be appended or replace the existing ones.
        In this case the method expects the container to have an entry with the
        same key as the provided identifier, if this is not the case the method must
        raise an {@link kERROR_NOT_FOUND exception}.
    <li><i>{@link kFLAG_PERSIST_REPLACE kFLAG_PERSIST_REPLACE}</i>: The provided
        object will be {@link kFLAG_PERSIST_INSERT inserted}, if the identifier
        doesn't match any container elements, or it will
        {@link kFLAG_PERSIST_UPDATE replace} the existing object. As with
        {@link kFLAG_PERSIST_UPDATE update}, it is assumed that the provided
        object's attributes will replace all the existing object's ones.
    <li><i>{@link kFLAG_PERSIST_DELETE kFLAG_PERSIST_DELETE}</i>: This option
        assumes you want to remove the object from the container, although the
        container features a specific {@link CContainer::Delete() method} for this
        purpose, this option may be used to implement a <i>deleted state</i>, rather
        than actually removing the object from the container.
    <li><i>{@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED}</i>: If the option is on,
        the object will be passed through a
        {@link CContainer::UnserialiseObject() conversion} process that will convert
        all {@link CDataType standard} data types into native container custom data
        types {@link CContainer::_PrepareCommit() before} committing the object. It
        is a good idea to keep this flag ON, because the converted object will be
        compatible with any {@link CContainer container} and it will make data
        transfers from one database to the other easy. This process is automatic and
        transparent.
 </ul>
</ul>

<p>The method will only operate if either the {@link _IsCommitted() committed}
{@link kFLAG_STATE_COMMITTED flag} is <i>not set</i>, or the
{@link _IsDirty() dirty} {@link kFLAG_STATE_DIRTY flag} is <i>set</i>, if none of
these two conditions are satisfied, the method will do nothing.</p>

<p>The method will by default <i>set</i> the {@link _IsCommitted() committed}
{@link kFLAG_STATE_COMMITTED flag} and <i>reset</i> the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY flag} if the operation was successful.</p>

<p>This method should raise an exception if any error occurs.</p>

<p>The method should return the unique identifier of the object or <i>NULL</i> if the
operation was not performed.</p>

<p>In derived classes you should not overload this method, instead, you should overload
the protected interface:</p>

<ul>
<li><i>{@link _PrepareCommit() _PrepareCommit}()</i>: This method can be used to
    initialise or check the parameters and resources.
<li><i>{@link _Commit() _Commit}()</i>: This method will perform the
    actual commit.
<li><i>{@link _FinishCommit() _FinishCommit}()</i>: This method can be used to perform
    eventual post-flight adjustments.
</ul>]]></long-description>
          <tag line="382" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="382" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="382" name="param" description="Commit modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="382" name="access" description="public"/>
          <tag line="382" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="382" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="382" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
          <tag line="382" name="uses" description="\_PrepareCommit()" refers="\_PrepareCommit()"/>
          <tag line="382" name="uses" description="\_Commit()" refers="\_Commit()"/>
          <tag line="382" name="uses" description="\_FinishCommit()" refers="\_FinishCommit()"/>
          <tag line="382" name="see" description="\kFLAG_PERSIST_INSERT" refers="\kFLAG_PERSIST_INSERT"/>
          <tag line="382" name="see" description="\kFLAG_PERSIST_REPLACE" refers="\kFLAG_PERSIST_REPLACE"/>
        </docblock>
        <argument line="382">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="383">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="384">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_PERSIST_REPLACE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="444" package="MyWrapper\Persistence">
        <name>Uncommit</name>
        <full_name>Uncommit</full_name>
        <docblock line="444">
          <description><![CDATA[Reset {@link _IsCommitted() committed} status.]]></description>
          <long-description><![CDATA[<p>This method can be used to reset the object's {@link kFLAG_STATE_COMMITTED committed}
{@link _IsCommitted() status}, this may be necessary when copying an object from one
container to the other, since the object will be {@link Commit() committed} only if
the {@link kFLAG_STATE_COMMITTED committed} {@link _IsCommitted() status} is not set,
or if the {@link kFLAG_STATE_DIRTY dirty} {@link _IsDirty() status} is set.</p>]]></long-description>
          <tag line="444" name="access" description="public"/>
          <tag line="444" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="491" package="MyWrapper\Persistence">
        <name>_IsCommitted</name>
        <full_name>_IsCommitted</full_name>
        <docblock line="491">
          <description><![CDATA[Manage committed status.]]></description>
          <long-description><![CDATA[<p>This method can be used to get or set the object's committed state.</p>

<p>A committed object is one that has either been loaded from a container or committed
to a container. This state indicates that the object is persistent. This state,
combined with the {@link _IsDirty() dirty} status, can determine if an object needs
to be committed in a container or not.</p>

<p>The method features a single parameter:</p>

<ul>
<li><i>NULL</i>: The method will return <i>TRUE</i> if the object is committed, or
    <i>FALSE</i> if the object is not committed.
<li><i>TRUE</i>: The method will set the object to committed.
<li><i>FALSE</i>: The method will reset the object's committed state.
</ul>

<p>In all cases the method will return the state <i>after</i> it was eventually
modified.</p>]]></long-description>
          <tag line="491" name="param" description="TRUE, FALSE or NULL." type="mixed" variable="$theState">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="491" name="access" description="protected"/>
          <tag line="491" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="491" name="uses" description="\_ManageBitField()" refers="\_ManageBitField()"/>
          <tag line="491" name="see" description="\kFLAG_STATE_COMMITTED" refers="\kFLAG_STATE_COMMITTED"/>
        </docblock>
        <argument line="491">
          <name>$theState</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="547" package="MyWrapper\Persistence">
        <name>_IsEncoded</name>
        <full_name>_IsEncoded</full_name>
        <docblock line="547">
          <description><![CDATA[Manage encoded status.]]></description>
          <long-description><![CDATA[<p>This method can be used to get or set the object's encoded state.</p>

<p>This flag determines whether custom data types are to be converted to
{@link CDataType standard} types when working with the object. This is especially
useful when transmitting the object through the network or when managing custom
database types.</p>

<p>The conversion to {@link CDataType standard} types is
{@link CDataType::SerialiseObject() done} when {@link __construct() loading} the
object from a {@link CContainer container} and the opposite is
{@link CContainer::UnserialiseObject() done} before {@link Commit() storing} the
object into a {@link CContainer container}, these operations are performed by the
{@link CContainer container} object that takes care of object persistence.</p>

<p>This {@link kFLAG_STATE_ENCODED kFLAG_STATE_ENCODED} flag can be provided at
{@link __construct() instantiation} or directly to the persistence methods, although
it is a better idea to provide it in the {@link __construct() constructor} to have
this conversion happen transparently.</p>

<p>The method features a single parameter:</p>

<ul>
<li><i>NULL</i>: The method will return <i>TRUE</i> if the object is encoded, or
    <i>FALSE</i> if the object is not encoded.
<li><i>TRUE</i>: The method will set the object to encoded.
<li><i>FALSE</i>: The method will reset the object's encoded state.
</ul>

<p>In all cases the method will return the state <i>after</i> it was eventually
modified.</p>]]></long-description>
          <tag line="547" name="param" description="TRUE, FALSE or NULL." type="mixed" variable="$theState">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="547" name="access" description="protected"/>
          <tag line="547" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="547" name="uses" description="\_ManageBitField()" refers="\_ManageBitField()"/>
          <tag line="547" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="547">
          <name>$theState</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="603" package="MyWrapper\Persistence">
        <name>_Create</name>
        <full_name>_Create</full_name>
        <docblock line="603">
          <description><![CDATA[Create object.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to instantiate an object with the provided data.</p>

<p>The method expects one parameter which is passed by reference:</p>

<ul>
<li><b>&$theContent</b>: This parameter represents the object contents:
 <ul>
    <li><i>NULL</i>: The method will instantiate an empty object.
    <li><i>array</i> or an <i>ArrayObject</i>: The method will instantiate the
        object with the contents of the provided parameter.
    <li><i>other</i>: By default any other type will raise an exception, in derived
        classes you can overload this method to handle custom types.
 </ul>
</ul>

<p>The method returns a boolean where <i>TRUE</i> indicates that the object was
instantiated with data, and <i>FALSE</i> indicating that the object is empty. This
will be used by the {@link __construct() caller} to set the object
{@link _IsCommitted() committed} status {@link kFLAG_STATE_COMMITTED flag}.</p>

<p>The parameter is provided as a reference.</p>]]></long-description>
          <tag line="603" name="param" description="&amp;$theContent Object data content." type="\reference" variable="$theContent">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="603" name="access" description="protected"/>
          <tag line="603" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="603" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="603" name="see" description="\kERROR_UNSUPPORTED" refers="\kERROR_UNSUPPORTED"/>
        </docblock>
        <argument line="603">
          <name>$theContent</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="678" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="678">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to store the current object in the container provided in
the first parameter with as key the value provided in the second parameter with
options provided in the third parameter, please refer to {@link Commit() this}
documentation for a reference of these parameters. Note that in this method all three
parameters are passed by reference.</p>

<p>This class supports {@link CContainer CContainer} derived instances and will delegate
the operation to the container. Note that by default we call the container's
{@link CContainer::Commit() commit} method with the
{@link kFLAG_PERSIST_REPLACE kFLAG_PERSIST_REPLACE} option, which will
{@link kFLAG_PERSIST_INSERT insert} the object if new or
{@link kFLAG_PERSIST_UPDATE replace} the eventual existing object.</p>

<p>The method expects all parameters to have been previously
{@link _PrepareCommit() checked}, its main duty is to perform the actual storage.
In derived classes you should intercept custom containers, or call the parent method.</p>

<p>There might be cases in which you do not want the commit operation to occur: in those
cases you can clear all the persistence {@link kFLAG_PERSIST_MASK flags} in the
modifier parameter, in that case the operation will not occur.</p>

<p><i>Note: the duty of this method is to store only the array part of the object,
properties should be ignored.</i></p>]]></long-description>
          <tag line="678" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="678" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="678" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="678" name="access" description="protected"/>
          <tag line="678" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="678">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="678">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="678">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="714" package="MyWrapper\Persistence">
        <name>_Load</name>
        <full_name>_Load</full_name>
        <docblock line="714">
          <description><![CDATA[Find object.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to locate the object identified by <i>$theIdentifier</i>
in the container <i>$theContainer</i> and return its contents or <i>NULL</i> if not
found.</p>

<p>The method should expect both parameters to have been previously checked: in this
class, the container must be an <i>ArrayObject</i> representing either the actual
container, or a {@link CContainer CContainer} derived instance which will take care
of locating the object within its managed native container.</p>]]></long-description>
          <tag line="714" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="714" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="714" name="param" description="&amp;$theModifiers Create options." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="714" name="access" description="protected"/>
          <tag line="714" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="714">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="714">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="714">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="756" package="MyWrapper\Persistence">
        <name>_PrepareCreate</name>
        <full_name>_PrepareCreate</full_name>
        <docblock line="756">
          <description><![CDATA[Normalise parameters of a create.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to ensure that the parameters provided to a
{@link _Create() create} operation are valid.</p>

<p>The method has a chance to work with the container and the identifier before it is
set in the object.</p>

<p>In this class we set the {@link _IsEncoded() encoded} status
{@link kFLAG_STATE_ENCODED flag} if provided among the modifiers of the operation.</p>]]></long-description>
          <tag line="756" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="756" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="756" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="756" name="access" description="protected"/>
          <tag line="756" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="756" name="see" description="\kFLAG_STATE_ENCODED" refers="\kFLAG_STATE_ENCODED"/>
        </docblock>
        <argument line="756">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="756">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="756">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="802" package="MyWrapper\Persistence">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="802">
          <description><![CDATA[Normalise parameters of a find.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to ensure that the parameters provided to a
{@link _Load() find} operation are valid.</p>

<p>The method should first check if the provided container is of the correct type, then
it should ensure that the identifier is valid.</p>

<p>We know that the identifier cannot be missing, since this method is only called if
the identifier was provided. We should check that the provided container is of the
correct type. In derived classes you should first handle your custom types, then
let the parent method handle other types.</p>

<p>Any errors should raise an exception.</p>

<p>In this class we only support {@link CContainer CContainer} containers and the
identifier is not expected to be <i>NULL</i>.</p>]]></long-description>
          <tag line="802" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="802" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="802" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="802" name="access" description="protected"/>
          <tag line="802" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="802" name="uses" description="\_IsEncoded()" refers="\_IsEncoded()"/>
          <tag line="802" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="802">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="802">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="802">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="865" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="865">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>This method will be called before the {@link _Commit() store} operation, its
duty is to prepare the object and check the parameters for the
{@link _Commit() commit} operation, please refer to {@link Commit() this}
documentation for a reference of these parameters. Note that in this method all three
parameters are passed by reference.</p>

<p>By default we perform the following checks:</p>

<ul>
<li>Ensure the container is provided.
<li>Ensure the identifier is provided if {@link kFLAG_PERSIST_UPDATE updating}.
<li>Ensure the object is {@link _IsInited() initialised}.
</ul>

<p>In derived classes you should handle your custom containers or delegate to the parent
method.</p>

<p>In this class we do not check the identifier.</p>

<p>Any errors should raise an exception.</p>]]></long-description>
          <tag line="865" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="865" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="865" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="865" name="access" description="protected"/>
          <tag line="865" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="865" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="865" name="see" description="\kERROR_INVALID_STATE" refers="\kERROR_INVALID_STATE"/>
        </docblock>
        <argument line="865">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="865">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="865">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="920" package="MyWrapper\Persistence">
        <name>_FinishCreate</name>
        <full_name>_FinishCreate</full_name>
        <docblock line="920">
          <description><![CDATA[Normalise after a {@link _Create() create}.]]></description>
          <long-description><![CDATA[<p>This method will be called after the {@link _Create() create} operation, its duty is
to initialise an empty object. Both the container and the identifier parameters are
passed by reference.</p>

<p>This method will be called if the identifier was not provided to the
{@link __construct() constructor}, or if the {@link __construct() constructor} was
unable to {@link _Load() find} the requested object.</p>

<p>In this class we do nothing.</p>]]></long-description>
          <tag line="920" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="920" name="access" description="protected"/>
        </docblock>
        <argument line="920">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="942" package="MyWrapper\Persistence">
        <name>_FinishLoad</name>
        <full_name>_FinishLoad</full_name>
        <docblock line="942">
          <description><![CDATA[Normalise after a {@link _Load() load}.]]></description>
          <long-description><![CDATA[<p>This method will be called after the {@link _Load() load} operation, its duty is to
clean up or normalise after the operation. Both the container and the identifier
parameters are passed by reference.</p>

<p>In this class we do nothing.</p>]]></long-description>
          <tag line="942" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="942" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="942" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="942" name="access" description="protected"/>
        </docblock>
        <argument line="942">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="942">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="942">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="967" package="MyWrapper\Persistence">
        <name>_FinishCommit</name>
        <full_name>_FinishCommit</full_name>
        <docblock line="967">
          <description><![CDATA[Normalise after a {@link _Commit() commit}.]]></description>
          <long-description><![CDATA[<p>This method will be called after the {@link _Commit() store} operation, its
duty is to clean up or restore the object after the operation please refer to
{@link Commit() this} documentation for a reference of these parameters. Note that in
this method all three parameters are passed by reference.</p>

<p>In this class we set the {@link _IsCommitted() commit}
{@link kFLAG_STATE_COMMITTED flag} and reset the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY flag}.</p>]]></long-description>
          <tag line="967" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="967" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="967" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="967" name="access" description="protected"/>
        </docblock>
        <argument line="967">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="967">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="967">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1009" package="MyWrapper\Persistence">
        <name>_SetTags</name>
        <full_name>_SetTags</full_name>
        <docblock line="1009">
          <description><![CDATA[Set attribute tags.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to collect all attribute tags used in the object and store
them as an array at the provided offset.</p>

<p>The method will collect all attributes, overload this method to exclude default
attributes.</p>]]></long-description>
          <tag line="1009" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1009" name="access" description="protected"/>
        </docblock>
        <argument line="1009">
          <name>$theOffset</name>
          <default><![CDATA[kTAG_TAGS]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1037" package="MyWrapper\Persistence">
        <name>_GetTags</name>
        <full_name>_GetTags</full_name>
        <docblock line="1037">
          <description><![CDATA[Get attribute tags.]]></description>
          <long-description><![CDATA[<p>The duty of this method is to collect all attribute tags used in the object and
return them as an array.</p>]]></long-description>
          <tag line="1037" name="access" description="protected"/>
          <tag line="1037" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CPersistentUnitObject.php" hash="0a49cbf497cf993de85a82a9783b56a8" package="Default">
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="124" package="MyWrapper\Persistence">
      <extends>CPersistentObject</extends>
      <name>CPersistentUnitObject</name>
      <full_name>\CPersistentUnitObject</full_name>
      <docblock line="124">
        <description><![CDATA[Unit objects ancestor.]]></description>
        <long-description><![CDATA[<p>A unit object is one that has a unique identifier, that is, it can be uniquely identified
among a collection of other objects.</p>

<p>Instances derived from this class have a series of additional properties and methods that
govern how these can be stored and retrieved from containers.</p>

<p>The class features two read-only public methods that return:</p>

<ul>
<li><i>{@link _id() _id()}</i>: The object unique identifier as used by the native
    persistent container to uniquely identify the object.
<li><i>{@link _index() _index()}</i>: The full index that uniquely identifies the
    object, expressed as a string.
</ul>

<p>Although both methods seem to return the same information, they are different, in the
sense that the {@link _index() _index} method should return the property or properties
that constitute the object's unique identifier concatenated in a single string. This may
be too long to use as an index, so {@link _id() _id()} should return the actual value
used as the key, which may be the hashed {@link _index() _index} value. In other words,
{@link _index() _index} is the human readable version of {@link _id() _id}.</p>

<p>When the object is {@link Commit committed} for the first time, the value of the
{@link _id() _id} method will be set in the {@link kTAG_LID kTAG_LID} offset
which represents the object ID. This offset should never be changed and represents the
persistent identifier of the object.</p>

<p>The class implements the {@link __toString() __toString} method to return the value of
the object's {@link _index() index} by default.</p>

<p>This object also introduces the concept of object reference, that is, a structure that
can be used to refer to other objects. The class implements a series of protected methods
that derived classes can use to implement properties that point to other objects:</p>

<ul>
<li><i>{@link _ParseReferences() _ParseReferences}</i>: When adding object references to
    properties one is also allowed to add the actual instance, at
    {@link Commit() commit} time, these objects must also be committed before committing
    the object that references them: this method will handle this.
<li><i>{@link CAttribute::ManageObjectList() ManageObjectList}</i>: This method can be
    used as a base for handling properties that consist of object references lists. It
    handles a list of scalar object reference elements or a list of predicate/object
    pairs.
<li><i>{@link NormaliseRelatedObject() NormaliseRelatedObject}</i>: This method can be
    used to normalise parameters that expect object references, these can be overloaded
    by derived classes to implement a custom framework.
<li><i>{@link NormaliseRelatedPredicate() NormaliseRelatedPredicate}</i>: This method
    can be used to normalise parameters that expect predicate object references, these
    can be overloaded by derived classes to implement a custom framework.
</ul>

<p>The above protected interface is not used in this class, but it is made available to
derived classes in order to handle objects derived from this class.</p>

<p>Objects derived from this class also hold, by default, their class name in an
{@link kTAG_CLASS offset}, this is used to {@link NewObject() instantiate} objects of
thecorrect class when retrieving data from a container.</p>

<p>This class also features a {@link kTAG_VERSION version} which is an integer,
incremented each time the object is {@link Commit() committed}: this is  useful to
implement a concurrency control mechanism.</p>

<p>Starting from this class we only handle {@link CContainer CContainer} derived instances
as containers, other container types will not be supported. This is because
{@link CContainer CContainer} derived instances have an
{@link CDataType::SerialiseObject() serialise} and
{@link CMongoDataWrapper::UnserialiseObject() unserialise} interface for handling special
data types.</p>

<p>The specifics of this are managed by the {@link CContainer CContainer} derived classes,
so when planning your objects think in advance in what containers you plan to store them.</p>

<p>Finally, this class features a series of static methods;</p>

<ul>
<li><i>{@link NewObject() NewObject}</i>: This method can be used to instantiate a class
    from a mixed class data store, it accepts the same parameters as the
    {@link __construct() constructor}, but will return an instance of the correct
    {@link kTAG_CLASS class}.
<li><i>{@link Reference() Reference}</i>: This method will convert an instance derived
    from this class into a standard object reference structure in which it is possible
    to indicate both the {@link kTAG_REFERENCE_CONTAINER container} and the
    {@link kTAG_REFERENCE_DATABASE database}.
</ul>

<p>We declare the class abstract because the object must be {@link _IsInited() inited} to be
{@link Commit() committed} and the {@link _index() index} must be explicitly implemented.</p>]]></long-description>
        <tag line="124" name="package" description="MyWrapper"/>
        <tag line="124" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="MyWrapper\Persistence">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="150">
          <description><![CDATA[Return object identifier.]]></description>
          <long-description><![CDATA[<p>In this class we return the object string {@link _index() identifier}.</p>]]></long-description>
          <tag line="150" name="access" description="public"/>
          <tag line="150" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="uses" description="\_index()" refers="\_index()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="MyWrapper\Persistence">
        <name>Persistent</name>
        <full_name>Persistent</full_name>
        <docblock line="176">
          <description><![CDATA[Check whether object is persistent.]]></description>
          <long-description><![CDATA[<p>This method will return <i>TRUE</i> if the object has the {@link kTAG_LID local}
identifier, this would mean that the object has either been {@link Commit() saved}
or that the object was {@link _Load() loaded} from a {@link CContainer container}.</p>]]></long-description>
          <tag line="176" name="access" description="public"/>
          <tag line="176" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="215" package="MyWrapper\Persistence">
        <name>NewObject</name>
        <full_name>NewObject</full_name>
        <docblock line="215">
          <description><![CDATA[Instantiate object.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate an object from a mixed class data store, it
expects the container to be a {@link CContainer CContainer} derived instance and the
identifier to be the {@link _id() unique} {@link kTAG_LID identifier} of the
object.</p>

<p>This method takes advantage of the {@link Commit() stored}
{@link kTAG_CLASS class} name.</p>

<p>The method will return an object, if the identifier matches and the object has its
{@link kTAG_CLASS class} name; an array if the identifier matches, but the data
doesn't contain a @link kTAG_CLASS class} name reference; <i>NULL</i> if the
identifier didn't match.</p>]]></long-description>
          <tag line="215" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="215" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="215" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="215" name="static" description=""/>
          <tag line="215" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="216">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="217">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="334" package="MyWrapper\Persistence">
        <name>Reference</name>
        <full_name>Reference</full_name>
        <docblock line="334">
          <description><![CDATA[Convert an object to a reference.]]></description>
          <long-description><![CDATA[<p>This method accepts an object derived from this class and returns a structure that
can be used as a reference to that object.</p>

<p>The method will return an array composed by the following offsets:</p>

<ul>
<li><i>{@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID}</i>: The object identifier,
    if the provided object does not have an {@link kTAG_LID identifier}, this
    method will search for a {@link kTAG_REFERENCE_ID reference}.
<li><i>{@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER}</i>: The
    container name, if the provided object is a reference.
<li><i>{@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE}</i>: The
    database name, if the provided object is a reference.
<li><i>{@link kTAG_CLASS kTAG_CLASS}</i>: If the provided object is derived
    from this class, the object's class.
</ul>

<p>The method accepts two parameters:</p>

<ul>
<li><b>$theObject</b>: The object to be referenced, or a structure containing a
    reference.
<li><b>$theModifiers</b>: This bitfield determines what elements should be included
    in the reference:
 <ul>
    <li><i>{@link kFLAG_REFERENCE_IDENTIFIER kFLAG_REFERENCE_IDENTIFIER}</i>: The
        object {@link kTAG_LID identifier} will be stored under the
        {@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID} offset. If the object does
        not have this identifier, the method will raise an exception. This is the
        default option.
    <li><i>{@link kFLAG_REFERENCE_CONTAINER kFLAG_REFERENCE_CONTAINER}</i>: The
        container name if available.
    <li><i>{@link kFLAG_REFERENCE_DATABASE kFLAG_REFERENCE_DATABASE}</i>: The
        container's database name if available.
    <li><i>{@link kFLAG_REFERENCE_CLASS kFLAG_REFERENCE_CLASS}</i>: The provided
        object's class name if derived from this class.
 </ul>
</ul>

<p>If the provided object cannot be resolved, the method will return <i>NULL</i>.</p>]]></long-description>
          <tag line="334" name="param" description="Object to reference." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="334" name="param" description="Referencing options." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="334" name="static" description=""/>
          <tag line="334" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="334" name="see" description="\kFLAG_REFERENCE_IDENTIFIER" refers="\kFLAG_REFERENCE_IDENTIFIER"/>
          <tag line="334" name="see" description="\kFLAG_REFERENCE_DATABASE" refers="\kFLAG_REFERENCE_DATABASE"/>
          <tag line="334" name="see" description="\kTAG_REFERENCE_ID" refers="\kTAG_REFERENCE_ID"/>
          <tag line="334" name="see" description="\kTAG_CLASS" refers="\kTAG_CLASS"/>
        </docblock>
        <argument line="334">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_REFERENCE_IDENTIFIER]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="457" package="MyWrapper\Persistence">
        <name>HashIndex</name>
        <full_name>HashIndex</full_name>
        <docblock line="457">
          <description><![CDATA[Hash index.]]></description>
          <long-description><![CDATA[<p>This method can be used to format an identifier provided as a string, it will be
used by the {@link _id() _id} method to format the result of the
{@link _index() _index} method.</p>

<p>All derived classes will call this method to format the object {@link kTAG_LID ID},
so you should overload this method in classes where the current behaviour is not
desirable.</p>]]></long-description>
          <tag line="457" name="param" description="Value to hash." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="457" name="static" description=""/>
          <tag line="457" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="457">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="503" package="MyWrapper\Persistence">
        <name>NormaliseRelatedObject</name>
        <full_name>NormaliseRelatedObject</full_name>
        <docblock line="503">
          <description><![CDATA[Normalise object reference property.]]></description>
          <long-description><![CDATA[<p>This method can be used to normalise a property that is supposed to be a reference
to another object, the method will perform the following conversions:</p>

<ul>
<li><i>CPersistentUnitObject</i>: Objects derived from this class will be handled as
    follows:
 <ul>
    <li><i>{@link _IsCommitted() Committed}</i>: If the provided object has a
        {@link _IsCommitted() committed} {@link kFLAG_STATE_COMMITTED status}, the
        method will return the object's {@link kTAG_LID identifier}.
    <li><i>Not {@link _IsCommitted() committed}</i>: The parameter will not be
        converted.
 </ul>
<li><i>{@link CDataType CDataType}</i>: When providing a complex data type, we
    assume the value corresponds to the {@link kTAG_LID identifier}, in which case
    we leave it untouched.
<li><i>Array</i> or <i>ArrayObject</i>: In this case the method will assume the
    provided structure is an object reference and it will check if the
    {@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID} offset is there, if this is
    not the case the method will raise an exception.
<li><i>other</i>: Any other type will be converted to a string.
</ul>

<p>The method will return the converted value.</p>]]></long-description>
          <tag line="503" name="param" description="Object or reference." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="503" name="static" description=""/>
          <tag line="503" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="503" name="see" description="\kTAG_LID" refers="\kTAG_LID"/>
        </docblock>
        <argument line="503">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="584" package="MyWrapper\Persistence">
        <name>NormaliseRelatedPredicate</name>
        <full_name>NormaliseRelatedPredicate</full_name>
        <docblock line="584">
          <description><![CDATA[Normalise predicate reference property.]]></description>
          <long-description><![CDATA[<p>This method can be used to normalise a property that is supposed to be a relation
predicate, the method will perform the following conversions:</p>

<ul>
<li><i>NULL</i>: No conversion.
<li><i>FALSE</i>: No conversion.
<li><i>CGraphNodeObject</i>: The method will pass the parameter to the
    {@link NormaliseRelatedObject() NormaliseRelatedObject} method.
<li><i>{@link CDataType CDataType}</i>: The method will pass the parameter to the
    {@link NormaliseRelatedObject() NormaliseRelatedObject} method.
<li><i>Array</i> or <i>ArrayObject</i>: The method will pass the parameter to the
    {@link NormaliseRelatedObject() NormaliseRelatedObject} method.
<li><i>other</i>: Any other type will be converted to a string.
</ul>

<p>The method will return the converted value, derived classes should first handle
custom types and pass other types to the parent method.</p>]]></long-description>
          <tag line="584" name="param" description="Relation predicate." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="584" name="access" description="protected"/>
          <tag line="584" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="584" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
          <tag line="584" name="see" description="\kTAG_LID" refers="\kTAG_LID"/>
        </docblock>
        <argument line="584">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="644" package="MyWrapper\Persistence">
        <name>ObjectIdentifier</name>
        <full_name>ObjectIdentifier</full_name>
        <docblock line="644">
          <description><![CDATA[Return object identifier.]]></description>
          <long-description><![CDATA[<p>This method is a utility that can be used to extract an object identifier from a
value, it is used when adding objects or object references to a list that is not
organised by object {@link kTAG_LID ID}.</p>

<p>This method will attempt to infer the object identifier by performing the following
steps:</p>

<ul>
<li><i>Array</i> or <i>ArrayObject</i>: In this case we interpret the parameter to
    be either an instance of the object itself, or a reference to the object, we
    check in order if any of the following can be found:
 <ul>
    <li><i>{@link kTAG_LID kTAG_LID}</i>: We first check whether the
        object has that offset and use it is so.
    <li><i>{@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID}</i>: We then check
        whether the structure contains a reference identifier.
    <li><i>{@link _id() _id}</i>: If the parameter is an object derived from this
        class, we try to call this method and use its result.
 </ul>
<li><i>other</i>: If all of the above fails we simply return the provided value.
</ul>

<p>Note that the method assumes that the returned value must be convertable to a string,
if that is not the case you may get into trouble.</p>]]></long-description>
          <tag line="644" name="param" description="Object or identifier." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="644" name="static" description=""/>
          <tag line="644" name="return" description="" type="string|NULL">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="644">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="713" package="MyWrapper\Persistence">
        <name>_id</name>
        <full_name>_id</full_name>
        <docblock line="713">
          <description><![CDATA[Return the object's unique identifier.]]></description>
          <long-description><![CDATA[<p>This method can be used to return a value that represents the object's unique
native identifier. The method should use the value returned by the
{@link _index() _index} method and hash it if necessary.</p>

<p>This method will be called {@link _PrepareCommit() before} {@link Commit() committing}
the object to fill its unique identifier {@link kTAG_LID offset}.</p>

<p>If this method returns <i>NULL</i>, it is assumed that it will be the
{@link CContainer container} that will provide a default unique value.</p>

<p>In this class we return the {@link HashIndex() hashed} value of
{@link _index() _index}.</p>]]></long-description>
          <tag line="713" name="access" description="protected"/>
          <tag line="713" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="" line="735" package="MyWrapper\Persistence">
        <name>_index</name>
        <full_name>_index</full_name>
        <docblock line="735">
          <description><![CDATA[Return the object's unique index.]]></description>
          <long-description><![CDATA[<p>This method can be used to return a string value that represents the object's unique
identifier. This value should generally be extracted from the object's properties.</p>

<p>In general this value will be used by the {@link _id() _id} method to form the
object's unique {@link kTAG_LID identifier}, maybe hashed to make the index
smaller.</p>

<p>In this class we require derived classes to implement the method.</p>]]></long-description>
          <tag line="735" name="access" description="protected"/>
          <tag line="735" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="764" package="MyWrapper\Persistence">
        <name>_Commit</name>
        <full_name>_Commit</full_name>
        <docblock line="764">
          <description><![CDATA[Store object in container.]]></description>
          <long-description><![CDATA[<p>We overload this method to {@link _GetTags() collect} and {@link _SetTags() set} the
object tags.</p>]]></long-description>
          <tag line="764" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="764" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="764" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="764" name="access" description="protected"/>
          <tag line="764" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="764">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="764">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="764">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="809" package="MyWrapper\Persistence">
        <name>_PrepareLoad</name>
        <full_name>_PrepareLoad</full_name>
        <docblock line="809">
          <description><![CDATA[Normalise parameters of a find.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentObject::_PrepareLoad() overload} this method to handle
identifiers provided as structures containing either the {@link kTAG_LID native}
identifier or an object {@link kTAG_REFERENCE_ID reference}.</p>

<p>We also handle queries provided in the identifier, in this case we only check whether
the container is supported.</p>]]></long-description>
          <tag line="809" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="809" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="809" name="param" description="&amp;$theModifiers Create modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="809" name="access" description="protected"/>
          <tag line="809" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="809" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="809">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="809">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="809">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="913" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="913">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentObject::_PrepareCommit() overload} this method to perform the
following steps:</p>

<ul>
<li><i>Identifier as structure</i>: We handle identifiers provided as object
    structures or references by checking the {@link kTAG_LID native} identifier
    or the object {@link kTAG_REFERENCE_ID reference}.
<li><i>Set identifier</i>: If the current object has already an
    {@link kTAG_LID identifier} and an identifier was not provided we set it, if
    this is not the case we set it via the {@link _id() _id} method.
<li><i>Call parent method</i>: We then call the parent method, this is to ensure all
    required data is provided.
<li><i>{@link kTAG_CLASS kTAG_CLASS}</i>: We set this offset with the current
    object's class name. Note that we overwrite old values.
<li><i>{@link kTAG_VERSION kTAG_VERSION}</i>: If not set, we initialise this
    value to zero, if already set, we increment it.
</ul>

<p>identifiers
provided as structures containing either the {@link kTAG_LID native} identifier
or an object {@link kTAG_REFERENCE_ID reference}.</p>

<p>The duty of this method is to ensure that the parameters provided to the
{@link _Commit() store} operation are correct.</p>

<p>In this class we ensure that the container is a ArrayObject or a
{@link CContainer CContainer} derived instance and we ensure the identifier is filled
in the case it was not provided:</p>

<ul>
<li><i>Get {@link kTAG_LID kTAG_LID}</i>: If the object features the
    {@link kTAG_LID kTAG_LID} offset, it will be preferred. This is
    necessary, because we don't want the object identifier to change in time.
<li><i>Use the {@link _id() :id} method</i>: We use the value returned by the
    {@link _id() _id} protected method, this will be the case when
    {@link Commit() saving} new objects.
</ul>

<p>We also handle here the other two default offsets:</p>

<ul>
<li><i>{@link kTAG_CLASS kTAG_CLASS}</i>: We set this offset with the current
    object's name. Note that we overwrite old values.
<li><i>{@link kTAG_VERSION kTAG_VERSION}</i>: If not set, we initialise this
    value to zero, if already set, we increment it.
</ul>]]></long-description>
          <tag line="913" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="913" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="913" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="913" name="access" description="protected"/>
          <tag line="913" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="913" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="913">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="913">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="913">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1080" package="MyWrapper\Persistence">
        <name>_ParseReferences</name>
        <full_name>_ParseReferences</full_name>
        <docblock line="1080">
          <description><![CDATA[Handle references.]]></description>
          <long-description><![CDATA[<p>This method will parse the provided offset and convert all instances derived from
this class to object references according to a series of rules.</p>

<p>Object references may have two forms:</p>

<ul>
<li><i>Scalar</i>: A scalar value represents the object
    {@link kTAG_LID identifier}.
<li><i>Object reference structure</i>: This form is a structure holding the
    following elements:
 <ul>
    <li><i>{@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID}</i>: This offset holds
        the object's {@link kTAG_LID identifier}.
    <li><i>{@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER}</i>: This
        offset holds the container name in which the object resides.
    <li><i>{@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE}</i>: This
        offset holds the database name in which the object resides.
    <li><i>{@link kTAG_CLASS kTAG_CLASS}</i>: This offset holds the object's
        class name.
 </ul>
    Such structures should not have any other allowed offset.
</ul>

<p>Object references are stored in offsets with the following forms:</p>

<ul>
<li><i>Scalar</i>: The offset holds the object reference as a scalar element.
<li><i>Typed</i>: A typed object reference consists of a structure in which the
    {@link kTAG_DATA kTAG_DATA} offset holds the object reference and an optional
    {@link kTAG_KIND kTAG_KIND} offset holds the relation predicate, which may also
    be in the form of an object reference.
<li><i>List</i>: A list of references whose elements may be a combination of the
    previous two formats.
</ul>

<p>This method will pass the provided offset value to a
{@link _CommitReferences() method} that will take care of parsing the contents and
{@link _CommitReference() committing} all instances derived from this class into
object references according to the provided modifier flags.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theOffset</b>: The current object's offset that holds the reference or
    references.
<li><b>$theContainer</b>: The container that is about to receive the current object,
    it must also be the container in which to find the references and must be
    derived from {@link CContainer CContainer}.
<li><b>$theModifiers</b>: A bitfield indicating which elements should be included in
    the {@link CContainer::Reference() reference}:
 <ul>
    <li><i>{@link kFLAG_REFERENCE_IDENTIFIER kFLAG_REFERENCE_IDENTIFIER}</i>: The
        object {@link kTAG_LID identifier} will be stored under the
        {@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID} offset. This option is
        enforced.
    <li><i>{@link kFLAG_REFERENCE_CONTAINER kFLAG_REFERENCE_CONTAINER}</i>: The
        provided container name will be stored under the
        {@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER} offset. If
        the provided value is empty, the offset will not be set.
    <li><i>{@link kFLAG_REFERENCE_DATABASE kFLAG_REFERENCE_DATABASE}</i>: The
        provided container's database name will be stored under the
        {@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE} offset. If the
        current object's {@link Database() database} name is <i>NULL</i>, the
        offset will not be set.
    <li><i>{@link kFLAG_REFERENCE_CLASS kFLAG_REFERENCE_CLASS}</i>: The element
        object's class name will be stored under the
        {@link kTAG_CLASS kTAG_CLASS} offset.
 </ul>
    If none of the above flags are set, it means that object references are
    expressed directly as the value of the {@link kTAG_LID identifier}, and that
    {@link kTAG_REFERENCE_CONTAINER container} and
    {@link kTAG_REFERENCE_DATABASE database} are implicit.
</ul>]]></long-description>
          <tag line="1080" name="param" description="Reference list offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1080" name="param" description="Object container." type="\CContainer" variable="$theContainer">
            <type by_reference="false">\CContainer</type>
          </tag>
          <tag line="1080" name="param" description="Referencing options." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="1080" name="access" description="protected"/>
          <tag line="1080" name="uses" description="\_CommitReference()" refers="\_CommitReference()"/>
        </docblock>
        <argument line="1080">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1081">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1082">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1167" package="MyWrapper\Persistence">
        <name>_CommitReferences</name>
        <full_name>_CommitReferences</full_name>
        <docblock line="1167">
          <description><![CDATA[Commit references.]]></description>
          <long-description><![CDATA[<p>This method will parse the provided value looking for object references, if such
references are expressed as instances derived from this class, it will will
{@link Commit() commit} these instances and convert them to object references.</p>

<p>The method will first check if the provided reference is a scalar, then it will
check if it is a predicate/object par and finally it will check if it is a list of
references.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theReference</b>: The reference to be parsed, the conversion will replace
    the provided parameter.
<li><b>$theContainer</b>: The container in which the referenced object(s) resides,
    please refer to the documentation of
    {@link _ParseReferences() _ParseReferences} for more information.
<li><b>$theModifiers</b>: A bitfield indicating which elements of the
    {@link CContainer::Reference() reference} should be included, please refer to
    the documentation of {@link _ParseReferences() _ParseReferences} for more
    information.
<li><b>$doRecurse</b>: This is a private parameter that you should leave untouched, it
    it determines whether or not to recurse this method: it starts with a value of
    2, and at each recursion the value decreases, when it reaches zero, structures
    will no more be considered.
</ul>

<p>The method follows this set of rules:</p>

<ul>
<li><i>Handle scalars</i>: A scalar element may be an instance derived from this
    class, an instance derived from CDataType, or anything that is not an array or
    an ArrayObject. If the scalar is an instance of this class, we
    {@link Commit() commit} the instance and convert it to an object reference.
<li><i>Handle structures</i>: Once we have determined it is not a scalar, we check
    if it is either a predicate/object pair, or if it is a list of references; in
    the both cases the elements will be passed recursively to this method.
</ul>

<p>Note that when we {@link Commit() commit} referenced objects we use
{@link kFLAG_PERSIST_REPLACE kFLAG_PERSIST_REPLACE} as the commit type.</p>

<p>The method will return <i>TRUE</i> is a conversion occurred and <i>FALSE</i> if not.</p>]]></long-description>
          <tag line="1167" name="param" description="&amp;$theReference Reference." type="\reference" variable="$theReference">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="1167" name="param" description="Object container." type="\CContainer" variable="$theContainer">
            <type by_reference="false">\CContainer</type>
          </tag>
          <tag line="1167" name="param" description="Reference options." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="1167" name="param" description="Recurse level." type="integer" variable="$doRecurse">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1167" name="access" description="protected"/>
          <tag line="1167" name="uses" description="\_CommitReference()" refers="\_CommitReference()"/>
        </docblock>
        <argument line="1167">
          <name>$theReference</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1168">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1169">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1170">
          <name>$doRecurse</name>
          <default><![CDATA[2]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1326" package="MyWrapper\Persistence">
        <name>_GetTags</name>
        <full_name>_GetTags</full_name>
        <docblock line="1326">
          <description><![CDATA[Get attribute tags.]]></description>
          <long-description><![CDATA[<p>In this class we exclude the {@link kTAG_LID kTAG_LID}, {@link kTAG_CLASS kTAG_CLASS}
and {@link kTAG_VERSION kTAG_VERSION} tags, since they are set by default.</p>]]></long-description>
          <tag line="1326" name="access" description="protected"/>
          <tag line="1326" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CQuery.inc.php" hash="bd6848a11f8b1dc3de77bed352ac9312" package="Default">
    <constant namespace="" line="33" package="Default">
      <name>kAPI_QUERY_SUBJECT</name>
      <full_name>\kAPI_QUERY_SUBJECT</full_name>
      <value><![CDATA[':$query-subject']]></value>
      <docblock line="33">
        <description><![CDATA[Query subject.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the query subject.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="42" package="Default">
      <name>kAPI_QUERY_OPERATOR</name>
      <full_name>\kAPI_QUERY_OPERATOR</full_name>
      <value><![CDATA[':$query-operator']]></value>
      <docblock line="42">
        <description><![CDATA[Query operator.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the query operator.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="51" package="Default">
      <name>kAPI_QUERY_TYPE</name>
      <full_name>\kAPI_QUERY_TYPE</full_name>
      <value><![CDATA[':$query-data-type']]></value>
      <docblock line="51">
        <description><![CDATA[Query data type.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the query data type.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="60" package="Default">
      <name>kAPI_QUERY_DATA</name>
      <full_name>\kAPI_QUERY_DATA</full_name>
      <value><![CDATA[':$query-data']]></value>
      <docblock line="60">
        <description><![CDATA[Query data.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the query data.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9ktFO2zAUhq+TpzhCkxjVSNIg7QIYNCvZNERHaV1NXCGTnrZeUjvYLlJAPALvwMPAe2Gn6dbR9qJInWXJ1vH5f3865xwe56Pcdf3al80sF2rO0lWbf2leTFAWHuOJZ3BWJC3IN0Nc810w9Si/vm9kjKcwxauOB+jjgHGmmeDKM1k2kYyYggHLEBLBNWVcmct4LPh8MkwU9uG6AD1CWG6dZFT9MW3kNEnpEJ1W8UvSPEdZRtXkevbQRqmY0sgTnGnoRI+EdJwWy1IBkQcvT6kYsOdHOBx7yl6TRjJkVHpCDo9Kya11Edype0EA9T0/+OyHQb1e1T600TD0g9BGQxP1NzwvJ/G3qHdG4KIXdy6hSyISt+KfBEj0vfsfp6AaAph2yFT9Nya66g2UDTfbtlLToTmpBom5RIVcT+M3y4RNKvuM04zpYh8ERxAS7lAKryxsOS34EbbSqP3jqizAVbf39TRukq1PjrO9/6E03a1Mt2Hn4A2nMGNCtZDrg75Vrk963o47ETnv/IM6s13C2qeagi5yXB92Qbo+Lblsx5b0L6o13bWmK1jfh/l+wpOIRIuEU7jjI/cV/y2M6g==</source>
  </file>
  <file path="classes/CQuery.php" hash="365da56bb4f9dfa1cb6df9acb31bbcf7" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Types.]]></description>
        <long-description><![CDATA[<p>This include file contains all data type definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name/>
      <docblock line="41">
        <description><![CDATA[Operators.]]></description>
        <long-description><![CDATA[<p>This include file contains all operator definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="48" type="Require Once" package="Default">
      <name/>
      <docblock line="48">
        <description><![CDATA[Local definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions to this class.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="145" package="MyWrapper\Persistence">
      <extends>CStatusObject</extends>
      <name>CQuery</name>
      <full_name>\CQuery</full_name>
      <docblock line="145">
        <description><![CDATA[Query.]]></description>
        <long-description><![CDATA[<p>This class implements a query.</p>

<p>The main goal of this class is to provide a common framework and format to exchange data
store queries or filters.</p>

<p>The query is an array structured as follows:</p>

<ul>
<li><i>index</i>: The index of the root element expresses a boolean condition which
    qualifies its content:
 <ul>
    <li><i>{@link kOPERATOR_AND kOPERATOR_AND}</i>: AND.
    <li><i>{@link kOPERATOR_NAND kOPERATOR_NAND}</i>: Not AND.
    <li><i>{@link kOPERATOR_OR kOPERATOR_OR}</i>: OR.
    <li><i>{@link kOPERATOR_NOR kOPERATOR_NOR}</i>: Not OR.
 </ul>
    The value of this root element is an array that can be of two types:
 <ul>
    <li><i>Query statement</i>: A query statement defines a filter structured as
        follows:
     <ul>
        <li><i>{@link kAPI_QUERY_SUBJECT kAPI_QUERY_SUBJECT}</i>: The subject field. It
            refers to the object element that we are filtering.
        <li><i>{@link kAPI_QUERY_OPERATOR kAPI_QUERY_OPERATOR}</i>: The filter operator.
            This element is required and can take the following values:
         <ul>
            <li><i>{@link kOPERATOR_DISABLED kOPERATOR_DISABLED}</i>: Disabled, it means
                that the filter is disabled.
            <li><i>{@link kOPERATOR_EQUAL kOPERATOR_EQUAL}</i>: Equality (=).
            <li><i>{@link kOPERATOR_EQUAL_NOT kOPERATOR_EQUAL_NOT}</i>: Inequality
                (!=), negates the {@link kOPERATOR_EQUAL kOPERATOR_EQUAL}
                operator.
            <li><i>{@link kOPERATOR_LIKE kOPERATOR_LIKE}</i>: Like, it is an accent and
                case insensitive equality filter.
            <li><i>{@link kOPERATOR_LIKE_NOT kOPERATOR_LIKE_NOT}</i>: The negation of
                the {@link kOPERATOR_LIKE LIKE} operator.
            <li><i>{@link kOPERATOR_PREFIX kOPERATOR_PREFIX}</i>: Starts with, or prefix
                match.
            <li><i>{@link kOPERATOR_CONTAINS kOPERATOR_CONTAINS}</i>: Contains, selects
                all elements that contain the match string.
            <li><i>{@link kOPERATOR_SUFFIX kOPERATOR_SUFFIX}</i>: Ends with, or suffix
                match.
            <li><i>{@link kOPERATOR_REGEX kOPERATOR_REGEX}</i>: Regular expression.
            <li><i>{@link kOPERATOR_LESS kOPERATOR_LESS}</i>: Smaller than (\<).
            <li><i>{@link kOPERATOR_LESS_EQUAL kOPERATOR_LESS_EQUAL}</i>: Smaller than
                or equal (\<=).
            <li><i>{@link kOPERATOR_GREAT kOPERATOR_GREAT}</i>: Greater than (\>).
            <li><i>{@link kOPERATOR_GREAT_EQUAL kOPERATOR_GREAT_EQUAL}</i>: Greater than
                or equal (\>=).
            <li><i>{@link kOPERATOR_IRANGE kOPERATOR_IRANGE}</i>: Range inclusive,
                matches \>= value \<=.
            <li><i>{@link kOPERATOR_ERANGE kOPERATOR_ERANGE}</i>: Range exclusive,
                matches \> value \<.
            <li><i>{@link kOPERATOR_NULL kOPERATOR_NULL}</i>: Is <i>NULL</i> or element
                is missing.
            <li><i>{@link kOPERATOR_NOT_NULL kOPERATOR_NOT_NULL}</i>:Not <i>NULL</i> or
                element exists.
            <li><i>{@link kOPERATOR_IN kOPERATOR_IN}</i>: In, or belongs to set.
            <li><i>{@link kOPERATOR_NI kOPERATOR_NI}</i>: Not in, the negation of
                {@link kOPERATOR_IN kOPERATOR_IN}.
            <li><i>{@link kOPERATOR_ALL kOPERATOR_ALL}</i>: All, or match the full set.
            <li><i>{@link kOPERATOR_NALL kOPERATOR_NALL}</i>: Not all, the negation of
                the {@link kOPERATOR_ALL kOPERATOR_ALL} operator.
            <li><i>{@link kOPERATOR_EX kOPERATOR_EX}</i>: Expression, indicates a
                complex expression.
         </ul>
        <li><i>{@link kAPI_QUERY_TYPE kAPI_QUERY_TYPE}</i>: The data type of
            the {@link kAPI_QUERY_DATA kAPI_QUERY_DATA} element:
         <ul>
            <li><i>{@link kTYPE_STRING kTYPE_STRING}</i>: String, we assume
                in UTF8 character set.
            <li><i>{@link kTYPE_INT32 kTYPE_INT32}</i>: 32 bit signed integer.
            <li><i>{@link kTYPE_INT64 kTYPE_INT64}</i>: 64 bit signed integer.
            <li><i>{@link kTYPE_FLOAT kTYPE_FLOAT}</i>: Floating point number.
            <li><i>{@link kTYPE_DATE kTYPE_DATE}</i>: A date.
            <li><i>{@link kTYPE_TIME kTYPE_TIME}</i>: A date and time.
            <li><i>{@link kTYPE_STAMP kTYPE_STAMP}</i>: A native timestamp.
            <li><i>{@link kTYPE_BOOLEAN kTYPE_BOOLEAN}</i>: An on/off switch.
            <li><i>{@link kTYPE_BINARY kTYPE_BINARY}</i>: A binary string.
            <li><i>{@link kTYPE_ENUM kTYPE_ENUM}</i>: An enumerated value.
            <li><i>{@link kTYPE_ENUM_SET kTYPE_ENUM_SET}</i>: An enumerated set of
                values.
         </ul>
        <li><i>{@link kAPI_QUERY_DATA kAPI_QUERY_DATA}</i>: The statement test data.
     </ul>
    <li><i>Nested query condition</i>: A nested structure as the current one.
 </ul>
</ul>]]></long-description>
        <tag line="145" name="package" description="MyWrapper"/>
        <tag line="145" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="172" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="172">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>If you omit the parameter the method will instantiate an empty query, if you provide
an array or ArrayObject it will assume the structure to be a query and will
instantiate the object with it; any other data type will raise an exception.</p>]]></long-description>
          <tag line="172" name="param" description="Query data." type="mixed" variable="$theQuery">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="172" name="access" description="public"/>
        </docblock>
        <argument line="172">
          <name>$theQuery</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="252" package="MyWrapper\Persistence">
        <name>AppendStatement</name>
        <full_name>AppendStatement</full_name>
        <docblock line="252">
          <description><![CDATA[Append statement.]]></description>
          <long-description><![CDATA[<p>This method will append the provided statement to the query, the second parameter
represents the condition.</p>

<p>Appended statements are merged at the condition level: if the condition exists at any
level, the statement is appended to that condition; if the condition does not exist,
it is created. Obviously, {@link kOPERATOR_AND AND} and {@link kOPERATOR_NAND NAND}
are treated as equivalent, as well as {@link kOPERATOR_OR OR} and
{@link kOPERATOR_NOR NOR}.</p>

<p>If you provide an object derived from {@link CQuery CQuery} as the statement, the
method will ignore the condition parameter and append the provided query to the
current object.</p>]]></long-description>
          <tag line="252" name="param" description="Statement." type="array" variable="$theStatement">
            <type by_reference="false">array</type>
          </tag>
          <tag line="252" name="param" description="Statement condition." type="string" variable="$theCondition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="access" description="public"/>
          <tag line="252" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$theStatement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="252">
          <name>$theCondition</name>
          <default><![CDATA[kOPERATOR_AND]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="368" package="MyWrapper\Persistence">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="368">
          <description><![CDATA[Validate query.]]></description>
          <long-description><![CDATA[<p>This method will check whether the query structure is valid.</p>]]></long-description>
          <tag line="368" name="access" description="public"/>
          <tag line="368" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="418" package="MyWrapper\Persistence">
        <name>_AppendStatement</name>
        <full_name>_AppendStatement</full_name>
        <docblock line="418">
          <description><![CDATA[Append statement.]]></description>
          <long-description><![CDATA[<p>This method will append the provided statement to the current query.</p>

<p>Statements of the same type, {@link kOPERATOR_AND AND} and
{@link kOPERATOR_NAND NAND},  or {@link kOPERATOR_OR OR} and
{@link kOPERATOR_NOR NOR}, will be added at the same level. If the top level is an
{@link kOPERATOR_OR OR} or {@link kOPERATOR_NOR NOR} and the provided statement is an
{@link kOPERATOR_AND AND} or {@link kOPERATOR_NAND NAND}, the latter will be promoted
to the top level.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>&$theQuery</b>: Query receiving statement.
<li><b>$theCondition</b>: Statement condition.
<li><b>$theCondition</b>: Boolean statement condition code.
</ul>]]></long-description>
          <tag line="418" name="param" description="&amp;$theQuery Query." type="\reference" variable="$theQuery">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="418" name="param" description="Statement condition." type="array" variable="$theCondition">
            <type by_reference="false">array</type>
          </tag>
          <tag line="418" name="param" description="Statement." type="string" variable="$theStatement">
            <type by_reference="false">string</type>
          </tag>
          <tag line="418" name="access" description="protected"/>
        </docblock>
        <argument line="418">
          <name>$theQuery</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$theCondition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$theStatement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="583" package="MyWrapper\Persistence">
        <name>_ValidateCondition</name>
        <full_name>_ValidateCondition</full_name>
        <docblock line="583">
          <description><![CDATA[Validate condition.]]></description>
          <long-description><![CDATA[<p>This method expects a condition as its argument, it will check if it is a valid
condition, then it will {@link _ValidateStatement() validate} all condition
statements.</p>]]></long-description>
          <tag line="583" name="param" description="Boolean condition." type="string" variable="$theCondition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="583" name="param" description="Statements list." type="array" variable="$theStatements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="583" name="param" description="[PRIVATE] condition level." type="integer" variable="$theLevel">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="583" name="access" description="protected"/>
        </docblock>
        <argument line="583">
          <name>$theCondition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="583">
          <name>$theStatements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="583">
          <name>$theLevel</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="645" package="MyWrapper\Persistence">
        <name>_ValidateStatement</name>
        <full_name>_ValidateStatement</full_name>
        <docblock line="645">
          <description><![CDATA[Validate statement.]]></description>
          <long-description><![CDATA[<p>This method expects a statement as its argument, it will check if it is a valid
statement and check if all required elements are there.</p>]]></long-description>
          <tag line="645" name="param" description="Statement." type="array" variable="$theStatement">
            <type by_reference="false">array</type>
          </tag>
          <tag line="645" name="param" description="[PRIVATE] condition level." type="integer" variable="$theLevel">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="645" name="access" description="protected"/>
        </docblock>
        <argument line="645">
          <name>$theStatement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="645">
          <name>$theLevel</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CQueryStatement.php" hash="a97cde9c5dbebb3709d32b38ddf1368a" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Types.]]></description>
        <long-description><![CDATA[<p>This include file contains all data type definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name/>
      <docblock line="41">
        <description><![CDATA[Operators.]]></description>
        <long-description><![CDATA[<p>This include file contains all operator definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="48" type="Require Once" package="Default">
      <name/>
      <docblock line="48">
        <description><![CDATA[Query definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the query class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="151" package="MyWrapper\Persistence">
      <extends>CArrayObject</extends>
      <name>CQueryStatement</name>
      <full_name>\CQueryStatement</full_name>
      <docblock line="151">
        <description><![CDATA[Query statement.]]></description>
        <long-description><![CDATA[<p>This class implements a query statement, such as those that populate the
{@link CQuery query} class. This class concentrates on building and managing these
statements, which are structured as follows:</p>

<ul>
<li><i>{@link kAPI_QUERY_SUBJECT kAPI_QUERY_SUBJECT}</i>: The query subject. It refers
    to the object element that we are considering in the query.
<li><i>{@link kAPI_QUERY_OPERATOR kAPI_QUERY_OPERATOR}</i>: The query predicate. This
    element represents the predicate or comparaison operator, it can take the following
    values:
 <ul>
    <li><i>{@link kOPERATOR_DISABLED kOPERATOR_DISABLED}</i>: Disabled, it means that
        the current statement is disabled.
    <li><i>{@link kOPERATOR_EQUAL kOPERATOR_EQUAL}</i>: Equality (=), this operator
        implies that the statement has also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_EQUAL_NOT kOPERATOR_EQUAL_NOT}</i>: Inequality
        (!=), negates the {@link kOPERATOR_EQUAL kOPERATOR_EQUAL}
        operator; this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_LIKE kOPERATOR_LIKE}</i>: Like, it is an accent and
        case insensitive equality filter, this operator implies that the statement has
        also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_LIKE_NOT kOPERATOR_LIKE_NOT}</i>: The negation of
        the {@link kOPERATOR_LIKE LIKE} operator, this operator implies that the
        statement has also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_PREFIX kOPERATOR_PREFIX}</i>: Starts with, or prefix
        match, this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_CONTAINS kOPERATOR_CONTAINS}</i>: Contains, selects
        all elements that contain the match string, this operator implies that the
        statement has also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_SUFFIX kOPERATOR_SUFFIX}</i>: Ends with, or suffix
        match, this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_REGEX kOPERATOR_REGEX}</i>: Regular expression, this
        operator implies that the statement has also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_LESS kOPERATOR_LESS}</i>: Smaller than (\<), this operator
        implies that the statement has also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_LESS_EQUAL kOPERATOR_LESS_EQUAL}</i>: Smaller than
        or equal (\<=), this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_GREAT kOPERATOR_GREAT}</i>: Greater than (\>), this operator
        implies that the statement has also an {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_GREAT_EQUAL kOPERATOR_GREAT_EQUAL}</i>: Greater than
        or equal (\>=), this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object}.
    <li><i>{@link kOPERATOR_IRANGE kOPERATOR_IRANGE}</i>: Range inclusive,
        matches \>= value \<=; this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object} which should contain the two range values.
    <li><i>{@link kOPERATOR_ERANGE kOPERATOR_ERANGE}</i>: Range exclusive,
        matches \> value \<, this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object} which should contain the two range values.
    <li><i>{@link kOPERATOR_NULL kOPERATOR_NULL}</i>: Is <i>NULL</i> or element
        is missing.
    <li><i>{@link kOPERATOR_NOT_NULL kOPERATOR_NOT_NULL}</i>:Not <i>NULL</i> or
        element exists.
    <li><i>{@link kOPERATOR_IN kOPERATOR_IN}</i>: In, or belongs to set, this operator
        implies that the statement has also an {@link kAPI_QUERY_DATA object} that will
        contain the list of choices.
    <li><i>{@link kOPERATOR_NI kOPERATOR_NI}</i>: Not in, the negation of
        {@link kOPERATOR_IN kOPERATOR_IN}, this operator implies that the statement has
        also an {@link kAPI_QUERY_DATA object} which contains the list of choices.
    <li><i>{@link kOPERATOR_ALL kOPERATOR_ALL}</i>: All, or match the full set, this
        operator implies that the statement has also an {@link kAPI_QUERY_DATA object}
        which will contain the set.
    <li><i>{@link kOPERATOR_NALL kOPERATOR_NALL}</i>: Not all, the negation of
        the {@link kOPERATOR_ALL kOPERATOR_ALL} operator, this operator implies that the
        statement has also an {@link kAPI_QUERY_DATA object} which contains the set.
    <li><i>{@link kOPERATOR_EX kOPERATOR_EX}</i>: Expression, indicates a
        complex expression, this operator implies that the statement has also an
        {@link kAPI_QUERY_DATA object} which will contain the expression.
 </ul>
<li><i>{@link kAPI_QUERY_TYPE kAPI_QUERY_TYPE}</i>: The statement object type, or data
    type of the {@link kAPI_QUERY_DATA kAPI_QUERY_DATA} element, if the latter is
    required:
 <ul>
    <li><i>{@link kTYPE_STRING kTYPE_STRING}</i>: String, we assume
        in UTF8 character set.
    <li><i>{@link kTYPE_INT32 kTYPE_INT32}</i>: 32 bit signed integer.
    <li><i>{@link kTYPE_INT64 kTYPE_INT64}</i>: 64 bit signed integer.
    <li><i>{@link kTYPE_FLOAT kTYPE_FLOAT}</i>: Floating point number.
    <li><i>{@link kTYPE_DATE kTYPE_DATE}</i>: A date.
    <li><i>{@link kTYPE_TIME kTYPE_TIME}</i>: A date and time.
    <li><i>{@link kTYPE_STAMP kTYPE_STAMP}</i>: A native timestamp.
    <li><i>{@link kTYPE_BOOLEAN kTYPE_BOOLEAN}</i>: An on/off switch.
    <li><i>{@link kTYPE_BINARY kTYPE_BINARY}</i>: A binary string.
 </ul>
<li><i>{@link kAPI_QUERY_DATA kAPI_QUERY_DATA}</i>: The statement object or test data.
</ul>

<p>The main goal of this class is to provide an interface that may ease the construction of
complex {@link CQuery queries} by providing specialised methods for building statements
that can then safely be {@link CQuery::AppendStatement() appended} to query
{@link CQuery objects}.</p>]]></long-description>
        <tag line="151" name="package" description="MyWrapper"/>
        <tag line="151" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="291" package="MyWrapper\Persistence">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="291">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor can be used to instantiate a statement either by providing an
existing statement structure, or by providing the statement elements:</p>

<ul>
<li><b>$theSubject</b>: The statement subject:
 <ul>
    <li><i>array</i> or <i>ArrayObject</i>: Structures are interpreted as built
        statements, so the method will scan the structure and load the corresponding
        elements.
    <li><i>string</i>: Any other type will be converted to a string and interpreted
        as the statement subject, or data element key.
 </ul>
<li><b>$thePredicate</b>: The statement operator or predicate:
 <ul>
    <li><i>{@link kOPERATOR_DISABLED kOPERATOR_DISABLED}</i>: Disabled, it means
        that the current statement is disabled; the remaining parameters are
        ignored.
    <li><i>{@link kOPERATOR_EQUAL kOPERATOR_EQUAL}</i>: Equality (=), this operator
        implies that the method expects the next two parameters.
    <li><i>{@link kOPERATOR_EQUAL_NOT kOPERATOR_EQUAL_NOT}</i>: Inequality
        (!=), negates the {@link kOPERATOR_EQUAL kOPERATOR_EQUAL}
        operator; this operator implies that the method expects the next two
        parameters.
    <li><i>{@link kOPERATOR_LIKE kOPERATOR_LIKE}</i>: Like, it is an accent and
        case insensitive equality filter, this operator implies that the method
        expects the next two parameters.
    <li><i>{@link kOPERATOR_LIKE_NOT kOPERATOR_LIKE_NOT}</i>: The negation of
        the {@link kOPERATOR_LIKE LIKE} operator, this operator implies that the
        method expects the next two parameters.
    <li><i>{@link kOPERATOR_PREFIX kOPERATOR_PREFIX}</i>: Starts with, or prefix
        match, this operator implies that the method expects the next two
        parameters.
    <li><i>{@link kOPERATOR_CONTAINS kOPERATOR_CONTAINS}</i>: Contains, selects
        all elements that contain the match string, this operator implies that the
        method expects the next two parameters.
    <li><i>{@link kOPERATOR_SUFFIX kOPERATOR_SUFFIX}</i>: Ends with, or suffix
        match, this operator implies that the method expects the next two
        parameters.
    <li><i>{@link kOPERATOR_REGEX kOPERATOR_REGEX}</i>: Regular expression, this
        operator implies that the method expects the next two parameters.
    <li><i>{@link kOPERATOR_LESS kOPERATOR_LESS}</i>: Smaller than (\<), this operator
        implies that the method expects the next two parameters.
    <li><i>{@link kOPERATOR_LESS_EQUAL kOPERATOR_LESS_EQUAL}</i>: Smaller than
        or equal (\<=), this operator implies that the method expects the next two
        parameters.
    <li><i>{@link kOPERATOR_GREAT kOPERATOR_GREAT}</i>: Greater than (\>), this operator
        implies that the method expects the next two parameters.
    <li><i>{@link kOPERATOR_GREAT_EQUAL kOPERATOR_GREAT_EQUAL}</i>: Greater than
        or equal (\>=), this operator implies that the method expects the next two
        parameters.
    <li><i>{@link kOPERATOR_IRANGE kOPERATOR_IRANGE}</i>: Range inclusive,
        matches \>= value \<=; this operator implies that the method expects the
        next three parameters.
    <li><i>{@link kOPERATOR_ERANGE kOPERATOR_ERANGE}</i>: Range exclusive,
        matches \> value \<, this operator implies that the method expects the next
        three parameters.
    <li><i>{@link kOPERATOR_NULL kOPERATOR_NULL}</i>: Is <i>NULL</i> or element
        is missing.
    <li><i>{@link kOPERATOR_NOT_NULL kOPERATOR_NOT_NULL}</i>:Not <i>NULL</i> or
        element exists.
    <li><i>{@link kOPERATOR_IN kOPERATOR_IN}</i>: In, or belongs to set, this operator
        implies that the method expects the next two parameters.
    <li><i>{@link kOPERATOR_NI kOPERATOR_NI}</i>: Not in, the negation of
        {@link kOPERATOR_IN kOPERATOR_IN}, this operator implies that the method
        expects the next two parameters.
    <li><i>{@link kOPERATOR_ALL kOPERATOR_ALL}</i>: All, or match the full set, this
        operator implies that the method expects the next two parameters.
    <li><i>{@link kOPERATOR_NALL kOPERATOR_NALL}</i>: Not all, the negation of
        the {@link kOPERATOR_ALL kOPERATOR_ALL} operator, this operator implies that
        the method expects the next two parameters.
    <li><i>{@link kOPERATOR_EX kOPERATOR_EX}</i>: Expression, indicates a
        complex expression, this operator implies that the method expects the next
        two parameters.
 </ul>
<li><b>$theType</b>: The statement object data type, this qualifies all remaining
    parameters. The allowed values are:
 <ul>
    <li><i>{@link kTYPE_STRING kTYPE_STRING}</i>: String, we assume in
        UTF8 character set, the string is expected in the next parameter.
    <li><i>{@link kTYPE_INT32 kTYPE_INT32}</i>: 32 bit signed integer, the
        number is expected in the next parameter, either as an integer, float or
        string; once received, it will be converted to a
        {@link CDataTypeInt32 CDataTypeInt32} object.
    <li><i>{@link kTYPE_INT64 kTYPE_INT64}</i>: 64 bit signed integer, the
        number is expected in the next parameter, either as an integer, float or
        string; once received, it will be converted to a
        {@link CDataTypeInt64 CDataTypeInt64} object.
    <li><i>{@link kTYPE_FLOAT kTYPE_FLOAT}</i>: Floating point number, the
        number is expected in the next parameter, either as an integer, float or
        string.
    <li><i>{@link kTYPE_DATE kTYPE_DATE}</i>: A string date, it is treated
        as a string date with a YYYYMMDD format in which month and day may be
        omitted.
    <li><i>{@link kTYPE_TIME kTYPE_TIME}</i>: A string time, it is treated
        as a string time with a YYYY-MM-DD HH:MM:SS format in which all elements are
        required; this element will be converted to a
        {@link kTYPE_STAMP kTYPE_STAMP} data type.
    <li><i>{@link kTYPE_STAMP kTYPE_STAMP}</i>: A timestamp, optionally
        including microseconds, elements of this type will be converted to
        {@link CDataTypeStamp CDataTypeStamp} objects.
    <li><i>{@link kTYPE_BOOLEAN kTYPE_BOOLEAN}</i>: An on/off switch, it
        will be converted to a 1/0 pair.
    <li><i>{@link kTYPE_BINARY kTYPE_BINARY}</i>: A binary string, the
        string will be converted to a {@link CDataTypeBinary CDataTypeBinary}
        object.
 </ul>
<li><b>$theObject</b>: The statement object data, it should reflect the data type
    provided in the previous parameter.
<li><b>$theRange</b>: The statement range end or second element. This value must
    also reflect the data type provided in the previous parameter and will be
    automatically set if you provided a range and forgot to set it.
</ul>]]></long-description>
          <tag line="291" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="291" name="param" description="Statement predicate." type="string" variable="$thePredicate">
            <type by_reference="false">string</type>
          </tag>
          <tag line="291" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="291" name="param" description="Statement object or first range." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="291" name="param" description="Statement second range." type="mixed" variable="$theRange">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="291" name="access" description="public"/>
        </docblock>
        <argument line="291">
          <name>$theSubject</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="292">
          <name>$thePredicate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="294">
          <name>$theObject</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$theRange</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="MyWrapper\Persistence">
        <name>Subject</name>
        <full_name>Subject</full_name>
        <docblock line="395">
          <description><![CDATA[Manage subject.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the query {@link kAPI_QUERY_SUBJECT subject}, it
accepts a parameter which represents either the statement subject or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="395" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="395" name="access" description="public"/>
          <tag line="395" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="395" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="395" name="see" description="\kAPI_QUERY_SUBJECT" refers="\kAPI_QUERY_SUBJECT"/>
        </docblock>
        <argument line="395">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="395">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="433" package="MyWrapper\Persistence">
        <name>Object</name>
        <full_name>Object</full_name>
        <docblock line="433">
          <description><![CDATA[Manage object.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the query {@link kAPI_QUERY_DATA object} or match
data, it accepts a parameter which represents either the statement object or the
requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="433" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="433" name="access" description="public"/>
          <tag line="433" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="433" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="433" name="see" description="\kAPI_QUERY_DATA" refers="\kAPI_QUERY_DATA"/>
        </docblock>
        <argument line="433">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="433">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="521" package="MyWrapper\Persistence">
        <name>Predicate</name>
        <full_name>Predicate</full_name>
        <docblock line="521">
          <description><![CDATA[Manage predicate.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the query {@link kAPI_QUERY_OPERATOR operator} or
predicate, it accepts a parameter which represents either the statement predicate or
the requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter:
 <ul>
    <li><i>{@link kOPERATOR_DISABLED kOPERATOR_DISABLED}</i>: Disabled, it means
        that the current statement is disabled.
    <li><i>{@link kOPERATOR_EQUAL kOPERATOR_EQUAL}</i>: Equality (=).
    <li><i>{@link kOPERATOR_EQUAL_NOT kOPERATOR_EQUAL_NOT}</i>: Inequality
        (!=), negates the {@link kOPERATOR_EQUAL kOPERATOR_EQUAL}
        operator.
    <li><i>{@link kOPERATOR_LIKE kOPERATOR_LIKE}</i>: Like, it is an accent and
        case insensitive equality filter.
    <li><i>{@link kOPERATOR_LIKE_NOT kOPERATOR_LIKE_NOT}</i>: The negation of
        the {@link kOPERATOR_LIKE LIKE} operator.
    <li><i>{@link kOPERATOR_PREFIX kOPERATOR_PREFIX}</i>: Starts with, or prefix
        match.
    <li><i>{@link kOPERATOR_CONTAINS kOPERATOR_CONTAINS}</i>: Contains, selects
        all elements that contain the match string.
    <li><i>{@link kOPERATOR_SUFFIX kOPERATOR_SUFFIX}</i>: Ends with, or suffix
        match.
    <li><i>{@link kOPERATOR_REGEX kOPERATOR_REGEX}</i>: Regular expression.
    <li><i>{@link kOPERATOR_LESS kOPERATOR_LESS}</i>: Smaller than (\<).
    <li><i>{@link kOPERATOR_LESS_EQUAL kOPERATOR_LESS_EQUAL}</i>: Smaller than
        or equal (\<=).
    <li><i>{@link kOPERATOR_GREAT kOPERATOR_GREAT}</i>: Greater than (\>).
    <li><i>{@link kOPERATOR_GREAT_EQUAL kOPERATOR_GREAT_EQUAL}</i>: Greater than
        or equal (\>=).
    <li><i>{@link kOPERATOR_IRANGE kOPERATOR_IRANGE}</i>: Range inclusive,
        matches \>= value \<=.
    <li><i>{@link kOPERATOR_ERANGE kOPERATOR_ERANGE}</i>: Range exclusive,
        matches \> value \<.
    <li><i>{@link kOPERATOR_NULL kOPERATOR_NULL}</i>: Is <i>NULL</i> or element
        is missing.
    <li><i>{@link kOPERATOR_NOT_NULL kOPERATOR_NOT_NULL}</i>:Not <i>NULL</i> or
        element exists.
    <li><i>{@link kOPERATOR_IN kOPERATOR_IN}</i>: In, or belongs to set.
    <li><i>{@link kOPERATOR_NI kOPERATOR_NI}</i>: Not in, the negation of
        {@link kOPERATOR_IN kOPERATOR_IN}.
    <li><i>{@link kOPERATOR_ALL kOPERATOR_ALL}</i>: All, or match the full set.
    <li><i>{@link kOPERATOR_NALL kOPERATOR_NALL}</i>: Not all, the negation of
        the {@link kOPERATOR_ALL kOPERATOR_ALL} operator.
    <li><i>{@link kOPERATOR_EX kOPERATOR_EX}</i>: Expression, indicates a
        complex expression.
 </ul>
    If the provided value does not match any of the above, the method will raise an
    exception.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="521" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="521" name="access" description="public"/>
          <tag line="521" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="521" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="521" name="see" description="\kAPI_QUERY_OPERATOR" refers="\kAPI_QUERY_OPERATOR"/>
        </docblock>
        <argument line="521">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="521">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="622" package="MyWrapper\Persistence">
        <name>Type</name>
        <full_name>Type</full_name>
        <docblock line="622">
          <description><![CDATA[Manage data type.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the query data {@link kAPI_QUERY_TYPE type} or
{@link Object() object} data type, it accepts a parameter which represents either the
data type in which the {@link Object() object} is expressed, or the requested
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter:
 <ul>
    <li><i>{@link kTYPE_STRING kTYPE_STRING}</i>: String, we assume in
        UTF8 character set.
    <li><i>{@link kTYPE_INT32 kTYPE_INT32}</i>: 32 bit signed integer.
    <li><i>{@link kTYPE_INT64 kTYPE_INT64}</i>: 64 bit signed integer.
    <li><i>{@link kTYPE_FLOAT kTYPE_FLOAT}</i>: Floating point number.
    <li><i>{@link kTYPE_DATE kTYPE_DATE}</i>: A string date, it means a
        string date with a YYYYMMDD format in which month and day may be omitted.
    <li><i>{@link kTYPE_TIME kTYPE_TIME}</i>: A string time, it is treated
        as a string time with a YYYY-MM-DD HH:MM:SS format in which all elements are
        required.
    <li><i>{@link kTYPE_STAMP kTYPE_STAMP}</i>: A timestamp, optionally
        including microseconds.
    <li><i>{@link kTYPE_BOOLEAN kTYPE_BOOLEAN}</i>: An on/off switch.
    <li><i>{@link kTYPE_BINARY kTYPE_BINARY}</i>: A binary string.
 </ul>
    If the provided value does not match any of the above, the method will raise an
    exception.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="622" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="622" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="622" name="access" description="public"/>
          <tag line="622" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="622" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="622" name="see" description="\kAPI_QUERY_TYPE" refers="\kAPI_QUERY_TYPE"/>
        </docblock>
        <argument line="622">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="622">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="689" package="MyWrapper\Persistence">
        <name>Range</name>
        <full_name>Range</full_name>
        <docblock line="689">
          <description><![CDATA[Manage range.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the query {@link kAPI_QUERY_DATA object} if it is
in the form of a range. This method will only allow you to set the range, to retrieve
or delete the range you must use the {@link Object() Object} method.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theBound1</b>: First range bound.
<li><b>$theBound2</b>: Second range bound.
<li><b>$getOld</b>: If <i>TRUE</i> will return the <i>old</i> value when replacing
    values; if <i>FALSE</i>, it will return the currently set value.
</ul>]]></long-description>
          <tag line="689" name="param" description="First bound." type="mixed" variable="$theBound1">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="689" name="param" description="Second bound." type="mixed" variable="$theBound2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="689" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="689" name="access" description="public"/>
          <tag line="689" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="689" name="uses" description="\Object()" refers="\Object()"/>
          <tag line="689" name="see" description="\kAPI_QUERY_DATA" refers="\kAPI_QUERY_DATA"/>
        </docblock>
        <argument line="689">
          <name>$theBound1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="689">
          <name>$theBound2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="689">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="752" package="MyWrapper\Persistence">
        <name>Disabled</name>
        <full_name>Disabled</full_name>
        <docblock line="752">
          <description><![CDATA[Create a disabled statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a disabled query statement. A disabled
statement is one that should not execute, it can be used as a placeholder, or
external methods may disable statements.</p>

<p>The statement uses the {@link kOPERATOR_DISABLED kOPERATOR_DISABLED} operator and
this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} or first
    {@link Range() range} bound.
<li><b>$theType</b>: Statement object data {@link Type() type}.
<li><b>$theRange</b>: Statement second {@link Range() range} bound.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="752" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="752" name="param" description="Statement object or range bound." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="752" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="param" description="Statement range bound." type="mixed" variable="$theRange">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="752" name="static" description=""/>
          <tag line="752" name="see" description="\kOPERATOR_DISABLED" refers="\kOPERATOR_DISABLED"/>
        </docblock>
        <argument line="752">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="752">
          <name>$theObject</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="753">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="754">
          <name>$theRange</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="791" package="MyWrapper\Persistence">
        <name>Equals</name>
        <full_name>Equals</full_name>
        <docblock line="791">
          <description><![CDATA[Create an {@link kOPERATOR_EQUAL equals} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate an {@link kOPERATOR_EQUAL equality} query
statement.</p>

<p>The statement uses the {@link kOPERATOR_EQUAL kOPERATOR_EQUAL} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="791" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="791" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="791" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="791" name="static" description=""/>
          <tag line="791" name="see" description="\kOPERATOR_EQUAL" refers="\kOPERATOR_EQUAL"/>
        </docblock>
        <argument line="791">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="791">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="791">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="828" package="MyWrapper\Persistence">
        <name>NotEquals</name>
        <full_name>NotEquals</full_name>
        <docblock line="828">
          <description><![CDATA[Create a not {@link kOPERATOR_EQUAL_NOT equals} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a not {@link kOPERATOR_EQUAL_NOT equals} query
statement, which is the negation of the {@link Equals() equals} statement.</p>

<p>The statement uses the {@link kOPERATOR_EQUAL_NOT kOPERATOR_EQUAL_NOT} operator and
this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="828" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="828" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="828" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="828" name="static" description=""/>
          <tag line="828" name="see" description="\kOPERATOR_EQUAL_NOT" refers="\kOPERATOR_EQUAL_NOT"/>
        </docblock>
        <argument line="828">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="828">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="828">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="866" package="MyWrapper\Persistence">
        <name>Like</name>
        <full_name>Like</full_name>
        <docblock line="866">
          <description><![CDATA[Create a case and accent {@link kOPERATOR_LIKE insensitive} equality statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_LIKE LIKE} query statement,
which is equivalent to the SQL <i>LIKE</i> clause, an accent and case insensitive
comparaison.</p>

<p>The statement uses the {@link kOPERATOR_LIKE kOPERATOR_LIKE} operator and this method
accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} match string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="866" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="866" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="866" name="static" description=""/>
          <tag line="866" name="see" description="\kOPERATOR_LIKE" refers="\kOPERATOR_LIKE"/>
        </docblock>
        <argument line="866">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="866">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="903" package="MyWrapper\Persistence">
        <name>NotLike</name>
        <full_name>NotLike</full_name>
        <docblock line="903">
          <description><![CDATA[Create a not {@link kOPERATOR_LIKE_NOT like} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a not {@link kOPERATOR_LIKE_NOT like} query
statement, which is the negation of the {@link Like() equals} statement.</p>

<p>The statement uses the {@link kOPERATOR_LIKE_NOT kOPERATOR_LIKE_NOT} operator and
this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} match string.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="903" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="903" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="903" name="static" description=""/>
          <tag line="903" name="see" description="\kOPERATOR_LIKE_NOT" refers="\kOPERATOR_LIKE_NOT"/>
        </docblock>
        <argument line="903">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="903">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="942" package="MyWrapper\Persistence">
        <name>Prefix</name>
        <full_name>Prefix</full_name>
        <docblock line="942">
          <description><![CDATA[Create a {@link kOPERATOR_PREFIX prefix} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements whose contents beginning matches the test data.</p>

<p>The statement uses the {@link kOPERATOR_PREFIX kOPERATOR_PREFIX} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} prefix string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="942" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="942" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="942" name="static" description=""/>
          <tag line="942" name="see" description="\kOPERATOR_PREFIX" refers="\kOPERATOR_PREFIX"/>
        </docblock>
        <argument line="942">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="942">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="982" package="MyWrapper\Persistence">
        <name>PrefixNoCase</name>
        <full_name>PrefixNoCase</full_name>
        <docblock line="982">
          <description><![CDATA[Create a {@link kOPERATOR_PREFIX_NOCASE case-insensitive} prefix statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements whose contents beginning matches the test data in a case and accent
insensitive way.</p>

<p>The statement uses the {@link kOPERATOR_PREFIX_NOCASE kOPERATOR_PREFIX_NOCASE}
operator and this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} prefix string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="982" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="982" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="982" name="static" description=""/>
          <tag line="982" name="see" description="\kOPERATOR_PREFIX_NOCASE" refers="\kOPERATOR_PREFIX_NOCASE"/>
        </docblock>
        <argument line="982">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="982">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1021" package="MyWrapper\Persistence">
        <name>Contains</name>
        <full_name>Contains</full_name>
        <docblock line="1021">
          <description><![CDATA[Create a {@link kOPERATOR_CONTAINS contains} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements whose contents matches the test data in any position.</p>

<p>The statement uses the {@link kOPERATOR_CONTAINS kOPERATOR_CONTAINS} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} match sub-string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1021" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1021" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1021" name="static" description=""/>
          <tag line="1021" name="see" description="\kOPERATOR_CONTAINS" refers="\kOPERATOR_CONTAINS"/>
        </docblock>
        <argument line="1021">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1021">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1061" package="MyWrapper\Persistence">
        <name>ContainsNoCase</name>
        <full_name>ContainsNoCase</full_name>
        <docblock line="1061">
          <description><![CDATA[Create a {@link kOPERATOR_CONTAINS_NOCASE case-insensitive} contains statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements whose contents matches the test data in any position in a case and accent
insensitive way.</p>

<p>The statement uses the {@link kOPERATOR_CONTAINS_NOCASE kOPERATOR_CONTAINS_NOCASE}
operator and this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} match sub-string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1061" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1061" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1061" name="static" description=""/>
          <tag line="1061" name="see" description="\kOPERATOR_CONTAINS_NOCASE" refers="\kOPERATOR_CONTAINS_NOCASE"/>
        </docblock>
        <argument line="1061">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1061">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1100" package="MyWrapper\Persistence">
        <name>Suffix</name>
        <full_name>Suffix</full_name>
        <docblock line="1100">
          <description><![CDATA[Create a {@link kOPERATOR_SUFFIX prefix} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements whose contents end matches the test data.</p>

<p>The statement uses the {@link kOPERATOR_SUFFIX kOPERATOR_SUFFIX} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} suffix string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1100" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1100" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1100" name="static" description=""/>
          <tag line="1100" name="see" description="\kOPERATOR_SUFFIX" refers="\kOPERATOR_SUFFIX"/>
        </docblock>
        <argument line="1100">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1100">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1140" package="MyWrapper\Persistence">
        <name>SuffixNoCase</name>
        <full_name>SuffixNoCase</full_name>
        <docblock line="1140">
          <description><![CDATA[Create a {@link kOPERATOR_SUFFIX_NOCASE case-insensitive} suffix statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements whose contents end matches the test data in a case and accent insensitive
way.</p>

<p>The statement uses the {@link kOPERATOR_SUFFIX_NOCASE kOPERATOR_SUFFIX_NOCASE}
operator and this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} suffix string.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1140" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1140" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1140" name="static" description=""/>
          <tag line="1140" name="see" description="\kOPERATOR_SUFFIX_NOCASE" refers="\kOPERATOR_SUFFIX_NOCASE"/>
        </docblock>
        <argument line="1140">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1140">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1179" package="MyWrapper\Persistence">
        <name>Regex</name>
        <full_name>Regex</full_name>
        <docblock line="1179">
          <description><![CDATA[Create a {@link kOPERATOR_REGEX regular} expression statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a query statement that will select all
elements that match the provided regular expression pattern.</p>

<p>The statement uses the {@link kOPERATOR_REGEX kOPERATOR_REGEX} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object} regular expression pattern.
</ul>

<p>Note that the data type is implicitly a {@link kTYPE_STRING string}</p>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1179" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1179" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1179" name="static" description=""/>
          <tag line="1179" name="see" description="\kOPERATOR_REGEX" refers="\kOPERATOR_REGEX"/>
        </docblock>
        <argument line="1179">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1179">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1218" package="MyWrapper\Persistence">
        <name>Less</name>
        <full_name>Less</full_name>
        <docblock line="1218">
          <description><![CDATA[Create a {@link kOPERATOR_LESS less} than statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_LESS less} than query
statement.</p>

<p>The statement uses the {@link kOPERATOR_LESS kOPERATOR_LESS} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or comparaison value.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1218" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1218" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1218" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1218" name="static" description=""/>
          <tag line="1218" name="see" description="\kOPERATOR_LESS" refers="\kOPERATOR_LESS"/>
        </docblock>
        <argument line="1218">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1218">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1218">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1255" package="MyWrapper\Persistence">
        <name>LessEqual</name>
        <full_name>LessEqual</full_name>
        <docblock line="1255">
          <description><![CDATA[Create a {@link kOPERATOR_LESS_EQUAL less} than or equal statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_LESS_EQUAL less} than or
equal query statement.</p>

<p>The statement uses the {@link kOPERATOR_LESS_EQUAL kOPERATOR_LESS_EQUAL} operator and
this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or comparaison value.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1255" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1255" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1255" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1255" name="static" description=""/>
          <tag line="1255" name="see" description="\kOPERATOR_LESS_EQUAL" refers="\kOPERATOR_LESS_EQUAL"/>
        </docblock>
        <argument line="1255">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1255">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1255">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1292" package="MyWrapper\Persistence">
        <name>Great</name>
        <full_name>Great</full_name>
        <docblock line="1292">
          <description><![CDATA[Create a {@link kOPERATOR_GREAT greater} than statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_GREAT greater} than query
statement.</p>

<p>The statement uses the {@link kOPERATOR_GREAT kOPERATOR_GREAT} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or comparaison value.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1292" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1292" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1292" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1292" name="static" description=""/>
          <tag line="1292" name="see" description="\kOPERATOR_GREAT" refers="\kOPERATOR_GREAT"/>
        </docblock>
        <argument line="1292">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1292">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1292">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1329" package="MyWrapper\Persistence">
        <name>GreatEqual</name>
        <full_name>GreatEqual</full_name>
        <docblock line="1329">
          <description><![CDATA[Create a {@link kOPERATOR_GREAT_EQUAL greater} than or equal statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_GREAT_EQUAL greater} than
or equal query statement.</p>

<p>The statement uses the {@link kOPERATOR_GREAT_EQUAL kOPERATOR_GREAT_EQUAL} operator
and this method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or comparaison value.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1329" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1329" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1329" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1329" name="static" description=""/>
          <tag line="1329" name="see" description="\kOPERATOR_GREAT_EQUAL" refers="\kOPERATOR_GREAT_EQUAL"/>
        </docblock>
        <argument line="1329">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1329">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1329">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1369" package="MyWrapper\Persistence">
        <name>RangeInclusive</name>
        <full_name>RangeInclusive</full_name>
        <docblock line="1369">
          <description><![CDATA[Create a {@link kOPERATOR_IRANGE range} inclusive statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_IRANGE range} inclusive
query statement, the statement will check if the {@link Subject() subject} value lies
between the two range bounds including the bound values.</p>

<p>The statement uses the {@link kOPERATOR_IRANGE kOPERATOR_IRANGE} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theBound1</b>: Statement range lower {@link Object() bound}.
<li><b>$theBound2</b>: Statement range upper {@link Object() bound}.
<li><b>$theType</b>: Statement range data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1369" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1369" name="param" description="Range lower bound." type="mixed" variable="$theBound1">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1369" name="param" description="Range upper bound." type="mixed" variable="$theBound2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1369" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1369" name="static" description=""/>
          <tag line="1369" name="see" description="\kOPERATOR_IRANGE" refers="\kOPERATOR_IRANGE"/>
        </docblock>
        <argument line="1369">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1369">
          <name>$theBound1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1369">
          <name>$theBound2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1369">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1416" package="MyWrapper\Persistence">
        <name>RangeExclusive</name>
        <full_name>RangeExclusive</full_name>
        <docblock line="1416">
          <description><![CDATA[Create a {@link kOPERATOR_ERANGE range} inclusive statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_ERANGE range} exclusive
query statement, the statement will check if the {@link Subject() subject} value lies
between the two range bounds excluding the bound values.</p>

<p>The statement uses the {@link kOPERATOR_ERANGE kOPERATOR_ERANGE} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theBound1</b>: Statement range lower {@link Object() bound}.
<li><b>$theBound2</b>: Statement range upper {@link Object() bound}.
<li><b>$theType</b>: Statement range data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1416" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1416" name="param" description="Range lower bound." type="mixed" variable="$theBound1">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1416" name="param" description="Range upper bound." type="mixed" variable="$theBound2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1416" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1416" name="static" description=""/>
          <tag line="1416" name="see" description="\kOPERATOR_ERANGE" refers="\kOPERATOR_ERANGE"/>
        </docblock>
        <argument line="1416">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1416">
          <name>$theBound1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1416">
          <name>$theBound2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1416">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1459" package="MyWrapper\Persistence">
        <name>Missing</name>
        <full_name>Missing</full_name>
        <docblock line="1459">
          <description><![CDATA[Create an {@link kOPERATOR_NULL missing} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_NULL missing} query
statement, the statement will check if the {@link Subject() subject} is missing or is <i>NULL</i>.</p>

<p>The statement uses the {@link kOPERATOR_NULL kOPERATOR_NULL} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1459" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1459" name="static" description=""/>
          <tag line="1459" name="see" description="\kOPERATOR_NULL" refers="\kOPERATOR_NULL"/>
        </docblock>
        <argument line="1459">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1492" package="MyWrapper\Persistence">
        <name>Exists</name>
        <full_name>Exists</full_name>
        <docblock line="1492">
          <description><![CDATA[Create an {@link kOPERATOR_NOT_NULL exists} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_NOT_NULL missing} or null
query statement, the statement will check if the {@link Subject() subject} exists or
is not <i>NULL</i>.</p>

<p>The statement uses the {@link kOPERATOR_NOT_NULL kOPERATOR_NOT_NULL} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1492" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1492" name="static" description=""/>
          <tag line="1492" name="see" description="\kOPERATOR_NOT_NULL" refers="\kOPERATOR_NOT_NULL"/>
        </docblock>
        <argument line="1492">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1532" package="MyWrapper\Persistence">
        <name>Member</name>
        <full_name>Member</full_name>
        <docblock line="1532">
          <description><![CDATA[Create a {@link kOPERATOR_IN membership} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a {@link kOPERATOR_IN membership} query
statement which will test whether the {@link Subject() subject} value can be found in
the provided {@link Object() object}, which will be interpreted as a list of values.</p>

<p>If the provided {@link Object() object} is not an array or an ArrayObject, the method
will add it to a newly created array.</p>

<p>The statement uses the {@link kOPERATOR_IN kOPERATOR_IN} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or members list.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1532" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1532" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1532" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1532" name="static" description=""/>
          <tag line="1532" name="see" description="\kOPERATOR_IN" refers="\kOPERATOR_IN"/>
        </docblock>
        <argument line="1532">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1532">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1532">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1591" package="MyWrapper\Persistence">
        <name>NotMember</name>
        <full_name>NotMember</full_name>
        <docblock line="1591">
          <description><![CDATA[Create a non {@link kOPERATOR_NI membership} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a non {@link kOPERATOR_NI membership} query
statement which will test whether the {@link Subject() subject} value cannot be found
in the provided {@link Object() object}, which will be interpreted as a list of
values.</p>

<p>If the provided {@link Object() object} is not an array or an ArrayObject, the method
will add it to a newly created array.</p>

<p>The statement uses the {@link kOPERATOR_NI kOPERATOR_NI} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or members list.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1591" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1591" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1591" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1591" name="static" description=""/>
          <tag line="1591" name="see" description="\kOPERATOR_NI" refers="\kOPERATOR_NI"/>
        </docblock>
        <argument line="1591">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1591">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1591">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1649" package="MyWrapper\Persistence">
        <name>All</name>
        <full_name>All</full_name>
        <docblock line="1649">
          <description><![CDATA[Create an {@link kOPERATOR_ALL all} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate an {@link kOPERATOR_ALL all} query statement
which will test whether all the {@link Subject() subject} values can be found in
the provided {@link Object() object}, which will be interpreted as a list of values.</p>

<p>If the provided {@link Object() object} is not an array or an ArrayObject, the method
will add it to a newly created array.</p>

<p>The statement uses the {@link kOPERATOR_ALL kOPERATOR_ALL} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or members list.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1649" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1649" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1649" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1649" name="static" description=""/>
          <tag line="1649" name="see" description="\kOPERATOR_ALL" refers="\kOPERATOR_ALL"/>
        </docblock>
        <argument line="1649">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1649">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1649">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1708" package="MyWrapper\Persistence">
        <name>NotAll</name>
        <full_name>NotAll</full_name>
        <docblock line="1708">
          <description><![CDATA[Create a not {@link kOPERATOR_NALL all} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a not {@link kOPERATOR_NALL all} query
statement which will test whether any of the {@link Subject() subject} values cannot
be found in the provided {@link Object() object}, which will be interpreted as a list
of values. This statement is the negation of the {@link All() All} statement.</p>

<p>If the provided {@link Object() object} is not an array or an ArrayObject, the method
will add it to a newly created array.</p>

<p>The statement uses the {@link kOPERATOR_NALL kOPERATOR_NALL} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or members list.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1708" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1708" name="param" description="Statement object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1708" name="param" description="Statement object data type." type="string" variable="$theType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1708" name="static" description=""/>
          <tag line="1708" name="see" description="\kOPERATOR_NALL" refers="\kOPERATOR_NALL"/>
        </docblock>
        <argument line="1708">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1708">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1708">
          <name>$theType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1764" package="MyWrapper\Persistence">
        <name>Expression</name>
        <full_name>Expression</full_name>
        <docblock line="1764">
          <description><![CDATA[Create an {@link kOPERATOR_EX expression} statement.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate an {@link kOPERATOR_EX expression} query
statement in which the object of the statement represents an expression.</p>

<p>Note that in this case the {@link Type() type} is not relevant and it is set by
default as a {@link kTYPE_STRING string}.</p>

<p>The statement uses the {@link kOPERATOR_EX kOPERATOR_EX} operator and this
method accepts the following parameters:</p>

<ul>
<li><b>$theSubject</b>: Statement {@link Subject() subject}.
<li><b>$theObject</b>: Statement {@link Object() object}, or comparaison value.
<li><b>$theType</b>: Statement object data {@link Type() type}.
</ul>

<p>The method will return an instance of this class or raise an exception on errors.</p>]]></long-description>
          <tag line="1764" name="param" description="Statement subject." type="mixed" variable="$theSubject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1764" name="param" description="Statement object or expression." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1764" name="static" description=""/>
          <tag line="1764" name="see" description="\kOPERATOR_EX" refers="\kOPERATOR_EX"/>
        </docblock>
        <argument line="1764">
          <name>$theSubject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CRelatedUnitObject.php" hash="6fab7687daf9ad2327c46179c24fdafb" package="Default">
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="58" package="MyWrapper\Persistence">
      <extends>CPersistentUnitObject</extends>
      <name>CRelatedUnitObject</name>
      <full_name>\CRelatedUnitObject</full_name>
      <docblock line="58">
        <description><![CDATA[Related unit objects ancestor.]]></description>
        <long-description><![CDATA[<p>This class extends its {@link CPersistentUnitObject parent} to add two properties: a
list of related objects and a pointer to a valid object.</p>

<p>This object introduces the concept of object reference, that is, a structure that can be
used to refer to other objects. The {@link Relate() Relate} method can be used to manage
a list of object references in the {@link kTAG_REFS kTAG_REFS} offset, this list
can take two forms: it can be an array of object references, or an array of
predicate/object pairs that can constitute a graph.</p>

<p>This class also features a {@link kTAG_VALID property} that can be
{@link Valid() used} to refer to a valid object: in other words, objects do not get
deleted, they simply point to the {@link Valid() valid} object, that way one can
implement a system that maintains referential integrity.</p>

<p>To supplement the last property, this class implements a static
{@link ValidObject() method} that can be used to return the valid object, objects that
are obsolete or deleted may {@link Valid() point} to the valid object, this method will
follow the links until it reaches an object that is valid.</p>

<p>We declare the class abstract because none of the {@link CPersistentUnitObject parent}
abstract methods are here explicitly implemented.</p>]]></long-description>
        <tag line="58" name="package" description="MyWrapper"/>
        <tag line="58" name="subpackage" description="Persistence"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="MyWrapper\Persistence">
        <name>Relate</name>
        <full_name>Relate</full_name>
        <docblock line="144">
          <description><![CDATA[Manage object references.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage relationships between the current object and other
objects, it is represented as a list of subject/predicate/object relationships in
which the subject is the current object, and the list of predicate/object pairs will
be stored in the {@link kTAG_REFS kTAG_REFS} offset.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theObject</b>: Relation object, it should either be the relation object
    itself, or an object reference to the relation's object. Before the current
    object is {@link Commit() committed}, all elements provided as instances derived
    from the {@link CRelatedUnitObject CRelatedUnitObject} class will also be
    {@link _ParseReferences() committed} and converted to object references.
    This parameter is passed through a protected
    {@link CPersistentUnitObject::NormaliseRelatedObject() method} that derived
    classes can use to validate and normalise relation objects.
<li><b>$thePredicate</b>: Relation predicate, this parameter represents the kind or
    predicate of the relation, depending on whether it is provided or not, each
    element of the relations list will take the following form:
 <ul>
    <li><i>NULL</i>: If the predicate is omitted, the element of the relation will
        only have the object parameter.
    <li><i>FALSE</i> The element will be an array composed of one element,
        {@link kTAG_DATA kTAG_DATA}, which will hold the firat parameter.
    <li><i>other</i> The element will be an array composed of two elements:
     <ul>
        <li><i>{@link kTAG_KIND kTAG_KIND}</i>: This offset represents the reference
            predicate, it will hold the value of this parameter.
        <li><i>{@link kTAG_DATA kTAG_DATA}</i>: This offset represents the reference
            object, it will hold the value of the first parameter.
     </ul>
        This parameter is passed through a protected
    {@link CPersistentUnitObject::NormaliseRelatedPredicate() method} that derived
    classes can use to validate and normalise relation predicates.
 </ul>
<li><b>$theOperation</b>: The operation to perform:
 <ul>
    <li><i>NULL</i>: Return the element matched by the previous parameters.
    <li><i>FALSE</i>: Delete the element matched by the previous parameters and
        return it.
    <li><i>other</i>: Any other value means that we want to add to the list the
        element provided in the previous parameters, either appending it if there
        was no matching element, or by replacing a matching element. The method will
        return either the replaced element or the new one.
 </ul>
<li><b>$getOld</b>: Determines what the method will return when deleting or
    replacing:
 <ul>
    <li><i>TRUE</i>: Return the deleted or replaced element.
    <li><i>FALSE</i>: Return the replacing element or <i>NULL</i> when deleting.
 </ul>
</ul>]]></long-description>
          <tag line="144" name="param" description="Reference object." type="mixed" variable="$theObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="144" name="param" description="Reference predicate." type="mixed" variable="$thePredicate">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="144" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="144" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="144" name="access" description="public"/>
          <tag line="144" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="144" name="uses" description="\CPersistentUnitObject::NormaliseRelatedObject()" refers="\CPersistentUnitObject::NormaliseRelatedObject()"/>
          <tag line="144" name="uses" description="\CPersistentUnitObject::NormaliseRelatedPredicate()" refers="\CPersistentUnitObject::NormaliseRelatedPredicate()"/>
          <tag line="144" name="uses" description="\CAttribute::ManageObjectList()" refers="\CAttribute::ManageObjectList()"/>
          <tag line="144" name="see" description="\kTAG_REFS" refers="\kTAG_REFS"/>
        </docblock>
        <argument line="144">
          <name>$theObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$thePredicate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="228" package="MyWrapper\Persistence">
        <name>Used</name>
        <full_name>Used</full_name>
        <docblock line="228">
          <description><![CDATA[Manage used reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's default reference, it uses the
standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_DEFAULT offset}.</p>

<p>In enumerations, for instance, there may be several entries that refer to a single
entity: this tag should be used to point to the instance that represents the used or
default choice.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kTAG_DEFAULT kTAG_DEFAULT}.</p>

<p>In this class we feed the value to the
{@link CPersistentUnitObject::NormaliseRelatedObject() NormaliseRelatedObject} method
that will take care of handling object references.</p>]]></long-description>
          <tag line="228" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="228" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="228" name="access" description="public"/>
          <tag line="228" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="228" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="228" name="see" description="\kTAG_DEFAULT" refers="\kTAG_DEFAULT"/>
        </docblock>
        <argument line="228">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="275" package="MyWrapper\Persistence">
        <name>Preferred</name>
        <full_name>Preferred</full_name>
        <docblock line="275">
          <description><![CDATA[Manage used reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the object's preferred reference, it uses the
standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_PREFERRED offset}.</p>

<p>Objects may become obsolete, but still represent valid entries: in this case we use
this attribute to point to the preferred object.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kTAG_PREFERRED kTAG_PREFERRED}.</p>

<p>In this class we feed the value to the
{@link CPersistentUnitObject::NormaliseRelatedObject() NormaliseRelatedObject} method
that will take care of handling object references.</p>]]></long-description>
          <tag line="275" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="275" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="275" name="access" description="public"/>
          <tag line="275" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="275" name="see" description="\kTAG_PREFERRED" refers="\kTAG_PREFERRED"/>
        </docblock>
        <argument line="275">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="275">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="323" package="MyWrapper\Persistence">
        <name>Valid</name>
        <full_name>Valid</full_name>
        <docblock line="323">
          <description><![CDATA[Manage valid reference.]]></description>
          <long-description><![CDATA[<p>This method can be used to handle the valid object's
{@link kTAG_LID identifier}, it uses the standard accessor
{@link CAttribute::ManageOffset() method} to manage the {@link kTAG_VALID offset}.</p>

<p>Objects derived from this class should be persistent, in other words, it is not an
option to delete such objects: by creating a new object and referencing it from the
old one, we maintain the original reference and point to the valid object.</p>

<p>For a more in-depth reference of this method, please consult the
{@link CAttribute::ManageOffset() CAttribute::ManageOffset} method, in which the
second parameter will be the constant {@link kTAG_VALID kTAG_VALID}.</p>

<p>In this class we feed the value to the
{@link CPersistentUnitObject::NormaliseRelatedObject() NormaliseRelatedObject} method
that will take care of handling object references.</p>]]></long-description>
          <tag line="323" name="param" description="Value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="323" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="323" name="access" description="public"/>
          <tag line="323" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="323" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="323" name="see" description="\kTAG_VALID" refers="\kTAG_VALID"/>
        </docblock>
        <argument line="323">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="323">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="372" package="MyWrapper\Persistence">
        <name>ValidObject</name>
        <full_name>ValidObject</full_name>
        <docblock line="372">
          <description><![CDATA[Return a valid object.]]></description>
          <long-description><![CDATA[<p>This method can be used to instantiate a valid object, this means that if we provide
the identifier of an expired or obsolete object that has a reference to a
{@link Valid() valid} object, this method will return the valid one.</p>

<p>The method expects the same parameters as the {@link NewObject() NewObject} static
method. If the {@link Valid() valid} chain is recursive, the method will raise an
exception.</p>

<p>The method will return the first object that does not have a {@link Valid() valid}
{@link kTAG_VALID reference}, or <i>NULL</i> if the object was not found.</p>]]></long-description>
          <tag line="372" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="372" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="372" name="param" description="Load modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="372" name="static" description=""/>
          <tag line="372" name="return" description="" type="\CGraphNodeObject">
            <type by_reference="false">\CGraphNodeObject</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="373">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="374">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="471" package="MyWrapper\Persistence">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="471">
          <description><![CDATA[Normalise before a store.]]></description>
          <long-description><![CDATA[<p>We {@link CPersistentUnitObject::_PrepareCommit() overload} this method to
{@link Commit() commit} eventual object references stored as instances. We scan the
{@link Relate() relations} and the {@link Valid() valid} references and process all
elements that derive from this class.</p>]]></long-description>
          <tag line="471" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="471" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="471" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="471" name="access" description="protected"/>
          <tag line="471" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="471" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="471">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="471">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="471">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CStatusObject.php" hash="89fafb4ad0e6e3cbbe899fc52e06ca5c" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This includes the ancestor class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="60" package="MyWrapper\Framework">
      <extends>CArrayObject</extends>
      <name>CStatusObject</name>
      <full_name>\CStatusObject</full_name>
      <docblock line="60">
        <description><![CDATA[Status object.]]></description>
        <long-description><![CDATA[<p>This class represents the ancestor of classes that must keep track of states or status.</p>

<p>The status is recorded in a {@link $mStatus property} that does not belong to the
object's array data store. The data member consists of a 4 byte bit field in which the
first 31 elements are used to record on/off states.</p>

<p><i>Note: we only use the first 31 bits because at this time PHP does not support 64 bit
integers and changing the last bit usually results in inversing the other bits.</i></p>

<p>The class manages these states through a protected interface:</p>

<ul>
<li><b>{@link _IsInited() _IsInited}</b>: This state indicates that an object has been
    initialised to a {@link kFLAG_STATE_INITED state} that allows it to be operated at
    least to a minimum extent.
    Objects that are not in this state may raise {@link kERROR_NOT_INITED exceptions}
    when required resources cannot be found.
    By default objects are instantiated with this status <i>off</i>.
<li><b>{@link _IsDirty() _IsDirty}</b>: This {@link kFLAG_STATE_DIRTY status} is
    generally set each time a change is made to the object's persistent data.
    By default objects are instantiated with this status <i>off</i>.
    This class will set this state by default when {@link offsetSet() setting} or
    {@link offsetUnset() deleting} array store elements.
</ul>]]></long-description>
        <tag line="60" name="package" description="MyWrapper"/>
        <tag line="60" name="subpackage" description="Framework"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="69" namespace="" package="Default">
        <name>$mStatus</name>
        <default><![CDATA[kFLAG_DEFAULT]]></default>
        <docblock line="69">
          <description><![CDATA[Object status.]]></description>
          <long-description><![CDATA[<p>This data member is a bitfield that holds the object status.</p>]]></long-description>
          <tag line="69" name="var" description="" type="\bitfield">
            <type by_reference="false">\bitfield</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="MyWrapper\Framework">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="100">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We override this method to handle the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY flag}: on offset value changes we set the state on.</p>]]></long-description>
          <tag line="100" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="100" name="see" description="\kFLAG_STATE_DIRTY" refers="\kFLAG_STATE_DIRTY"/>
        </docblock>
        <argument line="100">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="MyWrapper\Framework">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="134">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We override this method to handle the {@link _IsDirty() dirty}
{@link kFLAG_STATE_DIRTY flag}: on offset value changes we set the state on.</p>]]></long-description>
          <tag line="134" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="access" description="public"/>
          <tag line="134" name="uses" description="\_IsDirty()" refers="\_IsDirty()"/>
          <tag line="134" name="see" description="\kFLAG_STATE_DIRTY" refers="\kFLAG_STATE_DIRTY"/>
        </docblock>
        <argument line="134">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="191" package="MyWrapper\Framework">
        <name>Status</name>
        <full_name>Status</full_name>
        <docblock line="191">
          <description><![CDATA[Set or retrieve the object status.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the status bitfield as a whole, allowing to set and
retrieve the whole set of states.</p>

<p>The parameter can take the following values:</p>

<ul>
<li><i>NULL</i>: The method will return the current object's states bitfield.
<li><i>FALSE</i>: If this value is passed, the method will reset the object's status
    by settig it to the {@link kFLAG_DEFAULT default} value.
<li><i>other</i>: In this case the parameter will be interpreted as a 31 bits
    bit-field value and the data member will be replaced with it.
</ul>

<p>In all cases the method will return the status <i>after</i> it was eventually
modified.</p>]]></long-description>
          <tag line="191" name="param" description="NULL, FALSE or new status." type="NULL|FALSE|\bitfield" variable="$theState">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="191" name="access" description="public"/>
          <tag line="191" name="return" description="" type="\bitfield">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="191" name="uses" description="\_ManageBitField()" refers="\_ManageBitField()"/>
          <tag line="191" name="see" description="\kFLAG_DEFAULT_MASK" refers="\kFLAG_DEFAULT_MASK"/>
        </docblock>
        <argument line="191">
          <name>$theState</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="249" package="MyWrapper\Framework">
        <name>_IsInited</name>
        <full_name>_IsInited</full_name>
        <docblock line="249">
          <description><![CDATA[Manage inited status.]]></description>
          <long-description><![CDATA[<p>This method can be used to get or set the object's inited state.</p>

<p>An object becomes inited when it has all the required elements necessary for it to be
correctly used or persistently stored. Such a state indicates that at least the
minimum required information was initialised in the object.</p>

<p>The counterpart state indicates that the object still lacks the necessary elements to
successfully operate the object.</p>

<p>This method operates by setting or clearing the {@link kFLAG_STATE_INITED inited}
{@link Status() status} flag.</p>

<p>The method features a single parameter:</p>

<ul>
<li><i>NULL</i>: The method will return <i>TRUE</i> if the object is this state, or
    <i>FALSE</i> if the object is not in this state.
<li><i>TRUE</i>: The method will set the object to this state.
<li><i>FALSE</i>: The method will reset this state.
</ul>

<p>In all cases the method will return the state <i>after</i> it was eventually
modified.</p>]]></long-description>
          <tag line="249" name="param" description="TRUE, FALSE or NULL." type="mixed" variable="$theState">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="249" name="access" description="protected"/>
          <tag line="249" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="249" name="uses" description="\_ManageBitField()" refers="\_ManageBitField()"/>
          <tag line="249" name="see" description="\kFLAG_STATE_INITED" refers="\kFLAG_STATE_INITED"/>
        </docblock>
        <argument line="249">
          <name>$theState</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="295" package="MyWrapper\Framework">
        <name>_IsDirty</name>
        <full_name>_IsDirty</full_name>
        <docblock line="295">
          <description><![CDATA[Manage dirty status.]]></description>
          <long-description><![CDATA[<p>This method can be used to get or set the object's dirty state.</p>

<p>A dirty object is one that was modified since the last time this state was probed. In
general, this state should be set whenever the persistent properties of the object
are modified.</p>

<p>In this class we automatically set this state when {@link offsetSet() setting} or
{@link offsetUnset() deleting} array store elements.</p>

<p>The method features a single parameter:</p>

<ul>
<li><i>NULL</i>: The method will return <i>TRUE</i> if the object is dirty, or
    <i>FALSE</i> if the object is {@link _IsClean() clean}.
<li><i>TRUE</i>: The method will set the object to dirty.
<li><i>FALSE</i>: The method will set the object to {@link _IsClean() clean}.
</ul>

<p>In all cases the method will return the state <i>after</i> it was eventually
modified.</p>]]></long-description>
          <tag line="295" name="param" description="TRUE, FALSE or NULL." type="mixed" variable="$theState">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="295" name="access" description="protected"/>
          <tag line="295" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="295" name="uses" description="\_ManageBitField()" refers="\_ManageBitField()"/>
          <tag line="295" name="see" description="\kFLAG_STATE_DIRTY" refers="\kFLAG_STATE_DIRTY"/>
        </docblock>
        <argument line="295">
          <name>$theState</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="346" package="MyWrapper\Framework">
        <name>_ManageBitField</name>
        <full_name>_ManageBitField</full_name>
        <docblock line="346">
          <description><![CDATA[Manage bit-field property.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage a bitfield property, it accepts the following
parameters:</p>

<ul>
<li><b>&$theField</b>: Reference to the bit-field property.
<li><b>$theMask</b>: Bit-field mask.
<li><b>$theState</b>: State or operator:
 <ul>
    <li><i>NULL</i>: Return the current value masked by the next parameter.
    <li><i>FALSE</i>: Reset the current value using the next parameter as the mask.
    <li><i>other</i>: Set the current value to this one, masking the first 31 bits.
 </ul>
</ul>

<p>In all cases the method will return the status <i>after</i> it was eventually
modified.</p>]]></long-description>
          <tag line="346" name="param" description="&amp;$theField Bit-field reference." type="\reference" variable="$theField">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="346" name="param" description="Bit-field mask." type="\bitfield" variable="$theMask">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="346" name="param" description="Value or operator." type="mixed" variable="$theState">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="346" name="access" description="protected"/>
          <tag line="346" name="return" description="" type="\bitfield">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="346" name="see" description="\kFLAG_DEFAULT_MASK" refers="\kFLAG_DEFAULT_MASK"/>
        </docblock>
        <argument line="346">
          <name>$theField</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$theMask</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$theState</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CUser.inc.php" hash="8f79b976f48037ab8e704aa0c90e15e6" package="Default">
    <constant namespace="" line="30" package="Default">
      <name>kENTITY_USER</name>
      <full_name>\kENTITY_USER</full_name>
      <value><![CDATA[':ENTITY:USER']]></value>
      <docblock line="30">
        <description><![CDATA[Entity type.]]></description>
        <long-description><![CDATA[<p>This value defines the user entity type.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="41" package="Default">
      <name>kROLE_FILE_IMPORT</name>
      <full_name>\kROLE_FILE_IMPORT</full_name>
      <value><![CDATA[':ROLE:FILE-IMPORT']]></value>
      <docblock line="41">
        <description><![CDATA[File import.]]></description>
        <long-description><![CDATA[<p>This value defines the file import role, this allows importing files in datasets.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="48" package="Default">
      <name>kROLE_USER_MANAGE</name>
      <full_name>\kROLE_USER_MANAGE</full_name>
      <value><![CDATA[':ROLE:USER-MANAGE']]></value>
      <docblock line="48">
        <description><![CDATA[Manage users.]]></description>
        <long-description><![CDATA[<p>This value defines the manage users role, this allows creating and modifying users.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9U91OwjAYvd6e4os3KMFt6h3+MXUYjBMDI8YrUkcHzbZ2aTcMMT6C7+DD6HvZdkxBMF5BL5r1O6ffTs9pT86zSWaadv10M8OEurF21BeRy4HA3CI0tKSaPzgruzcjuG6bIO1QP4CXVkJoDFpdOb/CCEeEkpwwKizJUbRgQgREJMEQMpojQoX8SFNGF8lQCDyCpxnkE7y2cZggUbU0WhkKYzTGhj974CjLMNdVUTxVgEdz2RiLagMq8gnjhuGTJGbgWvD5HrOIfLzBSWoJ9Rm2wjFB3GJ8fKa3TDEXUppxYDkOHDm2c2QfOgeHErM3fCOuvLY7uA2ge3HjXQYQuNf97UZcJaxdlJnMMryU5hQlBS7jw0JHVqio8DLdNkvGLuzE3l3QCR6Hg77X22nMj1BrltWmqtZg73hLtva6t96qodtxtK3eAUkzxvN/HI1+mMBZghuyKokoSdizmAOEjjVPruVrQjkSOBe/rVfHHbY7cur4991eMPe/1lRAUwH7JVBFoFX5iMp3pHMV/yhNF6hrpIYcI60U0RGkbESimVp9d17Rqq7D0Hfv3GtvWasC9kug1Hp+Zn4BWsxvlg==</source>
  </file>
  <file path="classes/CUser.php" hash="2584c506cc517b5384b5d26a19234bc2" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description><![CDATA[Tokens.]]></description>
        <long-description><![CDATA[<p>This include file contains all default token definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name/>
      <docblock line="41">
        <description><![CDATA[Local defines.]]></description>
        <long-description><![CDATA[<p>This include file contains the local class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="88" package="MyWrapper\Entities">
      <extends>CEntity</extends>
      <name>CUser</name>
      <full_name>\CUser</full_name>
      <docblock line="88">
        <description><![CDATA[User.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CEntity ancestor} to implement a user entity.</p>

<p>Users are entities that are used for authentication purposes, they share the same
attributes as their parent {@link CEntity class} and add one required element:</p>

<ul>
<li><i>{@link kOFFSET_PASSWORD kOFFSET_PASSWORD}</i>: This offset represents the user
    access password, it will be used in the authentication process.
    The class features a member accessor {@link Password() method} to manage this
    property.
</ul>

<p>The object is considered {@link _IsInited() initialised} only if it has its
{@link Code() code}, as its {@link CEntity ancestor}, its {@link Name() name},
{@link Password() password} and {@link Email() e-mail} address.</p>

<p>If the {@link Code() code} has not been explicitly set, {@link _PrepareCommit() before}
{@link Commit() committing} the object it will be set to the value of the
{@link Email e-mail}. Also in that phase, the {@link kENTITY_USER kENTITY_USER} constant
will be set in the user {@link Type() type}.</p>

<p>The {@link Email() e-mail} in this class is a scalar property, in other classes it will
probably be a list of different e-mail types. In this class we want to link a single
user with a single e-mail, possibly not shared by any other user, that is why we link by
default the user {@link Code() code} and {@link Email() e-mail}.</p>

<p><i><b>Note: this class enforces the {@link _IsEncoded() encoded} {@link Status() status}
{@link kFLAG_STATE_ENCODED flag}, because the object identifier is a binary string, so
always use complex data type instances derived from the {@link CDataType standard}
types</b></i>.</p>

<p>The unique identifier of this class is composed by the default {@link _index() index} of
the object, prefixed by the {@link kENTITY_USER kENTITY_USER} token and the
{@link kTOKEN_CLASS_SEPARATOR kTOKEN_CLASS_SEPARATOR} token, this allows users and other
types of {@link CEntity entities} to share the same {@link Code() code}; this is enforced
both in the {@link HashIndex() HashIndex} method, to which you only need to pass the user
{@link Code() code}, and in the protected {@link _PrepareCommit() _PrepareCommit} method
which will place the resulting string in the global {@link kTAG_GID identifier}.</p>]]></long-description>
        <tag line="88" name="package" description="MyWrapper"/>
        <tag line="88" name="subpackage" description="Entities"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="MyWrapper\Entities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="120">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>We {@link CEntity::__construct() overload} the constructor to initialise the
{@link _IsInited() inited} {@link kFLAG_STATE_INITED flag} if the
{@link Password() password} element is set.</p>

<p>We also pass the {@link _IsEncoded() encoded} {@link kFLAG_STATE_ENCODED flag} to the
parent constructor.</p>]]></long-description>
          <tag line="120" name="param" description="Persistent container." type="mixed" variable="$theContainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="Object identifier." type="mixed" variable="$theIdentifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="Create modifiers." type="\bitfield" variable="$theModifiers">
            <type by_reference="false">\bitfield</type>
          </tag>
          <tag line="120" name="access" description="public"/>
        </docblock>
        <argument line="120">
          <name>$theContainer</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$theIdentifier</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$theModifiers</name>
          <default><![CDATA[kFLAG_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="MyWrapper\Entities">
        <name>Password</name>
        <full_name>Password</full_name>
        <docblock line="185">
          <description><![CDATA[Manage user password.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the user {@link kOFFSET_PASSWORD password}, it uses
the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kOFFSET_PASSWORD offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>]]></long-description>
          <tag line="185" name="param" description="User password or operation." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="185" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="185" name="access" description="public"/>
          <tag line="185" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="219" package="MyWrapper\Entities">
        <name>Role</name>
        <full_name>Role</full_name>
        <docblock line="219">
          <description><![CDATA[Manage user roles.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the user {@link kTAG_ROLE roles}, it uses
the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage the
{@link kTAG_ROLE roles}:</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant {@link kTAG_ROLE kTAG_ROLE}.</p>]]></long-description>
          <tag line="219" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="219" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="219" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="219" name="access" description="public"/>
          <tag line="219" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="219" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="219" name="see" description="\kTAG_ROLE" refers="\kTAG_ROLE"/>
        </docblock>
        <argument line="219">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="261" package="MyWrapper\Entities">
        <name>Manager</name>
        <full_name>Manager</full_name>
        <docblock line="261">
          <description><![CDATA[Manage user manager.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the user {@link kTAG_MANAGER manager}, it uses
the standard accessor {@link CAttribute::ManageOffset() method} to manage the
{@link kTAG_MANAGER offset}:</p>

<ul>
<li><b>$theValue</b>: The value or operation:
 <ul>
    <li><i>NULL</i>: Return the current value.
    <li><i>FALSE</i>: Delete the value.
    <li><i>other</i>: Set value.
 </ul>
<li><b>$getOld</b>: Determines what the method will return:
 <ul>
    <li><i>TRUE</i>: Return the value <i>before</i> it was eventually modified.
    <li><i>FALSE</i>: Return the value <i>after</i> it was eventually modified.
 </ul>
</ul>

<p>The manager is either the user that created the current user or the user that is in
charge of the current user.</p>]]></long-description>
          <tag line="261" name="param" description="User password or operation." type="NULL|FALSE|string" variable="$theValue">
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="261" name="access" description="public"/>
          <tag line="261" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="261">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="261">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="306" package="MyWrapper\Entities">
        <name>HashIndex</name>
        <full_name>HashIndex</full_name>
        <docblock line="306">
          <description><![CDATA[Hash index.]]></description>
          <long-description><![CDATA[<p>This method can be used to format an identifier provided as a string, it will be
used by the {@link _id() _id} method to format the result of the
{@link _index() _index} method. One can consider this as the index hashing method for
all derived classes.</p>

<p>In this class we take the provided {@link Code() code} and prefix it with the
{@link kENTITY_USER kENTITY_USER} token, the result will be
{@link CDataTypeBinary hashed}.</p>]]></long-description>
          <tag line="306" name="param" description="Value to hash." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="static" description=""/>
          <tag line="306" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="306">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="344" package="MyWrapper\Entities">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="344">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if the
{@link kTAG_NAME name}, {@link kOFFSET_EMAIL e-mail},
{@link kOFFSET_PASSWORD password} and the parent {@link kTAG_CODE code} are set.</p>]]></long-description>
          <tag line="344" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="344" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="344" name="access" description="public"/>
          <tag line="344" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="344" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
        </docblock>
        <argument line="344">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="344">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="382" package="MyWrapper\Entities">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="382">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if the
{@link kTAG_NAME name}, {@link kOFFSET_EMAIL e-mail},
{@link kOFFSET_PASSWORD password} and the parent {@link kTAG_CODE code} are set.</p>]]></long-description>
          <tag line="382" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="382" name="access" description="public"/>
          <tag line="382" name="uses" description="\_IsInited()" refers="\_IsInited()"/>
          <tag line="382" name="uses" description="\_IsCommitted()" refers="\_IsCommitted()"/>
        </docblock>
        <argument line="382">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="430" package="MyWrapper\Entities">
        <name>_PrepareCommit</name>
        <full_name>_PrepareCommit</full_name>
        <docblock line="430">
          <description><![CDATA[Normalise parameters of a store.]]></description>
          <long-description><![CDATA[<p>We overload this method to add the {@link kENTITY_USER kENTITY_USER}
{@link Type() type} to the object prior {@link Commit() saving} it and we initialise
the user {@link Code() code}, if empty, with the {@link Email() e-mail}.</p>]]></long-description>
          <tag line="430" name="param" description="&amp;$theContainer Object container." type="\reference" variable="$theContainer">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="430" name="param" description="&amp;$theIdentifier Object identifier." type="\reference" variable="$theIdentifier">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="430" name="param" description="&amp;$theModifiers Commit modifiers." type="\reference" variable="$theModifiers">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="430" name="access" description="protected"/>
          <tag line="430" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="430" name="see" description="\kERROR_OPTION_MISSING" refers="\kERROR_OPTION_MISSING"/>
        </docblock>
        <argument line="430">
          <name>$theContainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="430">
          <name>$theIdentifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="430">
          <name>$theModifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CWarehouseWrapper.inc.php" hash="6b55e8f13e51c0d50298b54054988518" package="Default">
    <constant namespace="" line="33" package="Default">
      <name>kAPI_OP_LOGIN</name>
      <full_name>\kAPI_OP_LOGIN</full_name>
      <value><![CDATA['@LOGIN']]></value>
      <docblock line="33">
        <description><![CDATA[LOGIN web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the LOGIN operation, it will check for the
{@link kAPI_OPT_USER_CODE user} and {@link kAPI_OPT_USER_PASS password} and match both
with a user record.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="75" package="Default">
      <name>kAPI_OP_GET_USERS</name>
      <full_name>\kAPI_OP_GET_USERS</full_name>
      <value><![CDATA['@GET_USERS']]></value>
      <docblock line="75">
        <description><![CDATA[Get users web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search for {@link CUser users} according to the parameters
provided to the service:</p>

<ul>
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: This parameter represents
    a list of user identifiers that can be expressed as:
 <ul>
    <li><i>string</i>: In this case the value is interpreted as the user code.
    <li><i>array</i>: In this case the value is interpreted as the user
        {@link kTAG_LID identifier}.
 </ul>
<li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: This parameter represents a
    {@link CMongoQuery query}.
</ul>

<p>The two options are not exclusive and will be applied together with an
{@link kOPERATOR_AND AND} operator.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter the service
will enforce the use of {@link kAPI_DATA_PAGING paging} options.</p>

<p>The service will check the {@link kAPI_DATA_SORT kAPI_DATA_SORT} parameter to order the
returned records by the list of fields provided in that parameter.</p>

<p>The service will also check the {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} parameter to
restrict the returned fields to the provided list.</p>

<p>In this service the {@link kAPI_CONTAINER container} is not required, if omitted it will
be initialised to the {@link kENTITY_CONTAINER kENTITY_CONTAINER} constant.</p>

<p>If the service matches users, it will return an array structured as follows:</p>

<ul>
<li><i>Key</i>: The {@link CUser user} {@link kTAG_CODE code}.
<li><i>Value</i>: The contents of the {@link CUser user} record.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="93" package="Default">
      <name>kAPI_OP_GET_MANAGED_USERS</name>
      <full_name>\kAPI_OP_GET_MANAGED_USERS</full_name>
      <value><![CDATA['@GET_MANAGED_USERS']]></value>
      <docblock line="93">
        <description><![CDATA[Get managed users web-service.]]></description>
        <long-description><![CDATA[<p>This command is equivalent to the {@link kAPI_OP_GET_USERS kAPI_OP_GET_USERS} service,
except that the identifiers provided in the
{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter refer to the
{@link CUser user} {@link CUser::Manager() managers}; in other words, you can use this
service to retrieve the users managed by a set of other users.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter, it is
assumed that the eventual {@link kAPI_DATA_QUERY kAPI_DATA_QUERY} operates on all users
that have a {@link kTAG_MANAGER kTAG_MANAGER} tag.</p>

<p>All other parameters are handled as in the {@link kAPI_OP_GET_USERS kAPI_OP_GET_USERS}
service.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="136" package="Default">
      <name>kAPI_OP_GET_TERMS</name>
      <full_name>\kAPI_OP_GET_TERMS</full_name>
      <value><![CDATA['@GET_TERMS']]></value>
      <docblock line="136">
        <description><![CDATA[Get terms web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search for {@link COntologyTerm terms} according to the
parameters provided to the service:</p>

<ul>
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: This parameter represents
    a list of {@link COntologyTerm term} identifiers that can be expressed as:
 <ul>
    <li><i>string</i>: In this case the value is interpreted as the term global
        {@link kTAG_GID identifier}.
    <li><i>array</i>: In this case the value is interpreted as the term local
        {@link kTAG_LID identifier}.
 </ul>
<li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: This parameter represents a
    {@link CMongoQuery query}.
</ul>

<p>The two options are not exclusive and will be applied together with an
{@link kOPERATOR_AND AND} operator.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter the service
will enforce the use of {@link kAPI_DATA_PAGING paging} options.</p>

<p>The service will check the {@link kAPI_DATA_SORT kAPI_DATA_SORT} parameter to order the
returned records by the list of fields provided in that parameter.</p>

<p>The service will also check the {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} parameter to
restrict the returned fields to the provided list.</p>

<p>In this service the {@link kAPI_CONTAINER container} is not required, if omitted it will
be initialised to the {@link kDEFAULT_CNT_TERMS kDEFAULT_CNT_TERMS} constant.</p>

<p>If the service matches terms, it will return an array structured as follows:</p>

<ul>
<li><i>Key</i>: The {@link COntologyTerm term} global {@link kTAG_GID identifier}.
<li><i>Value</i>: The contents of the {@link COntologyTerm term} record.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="161" package="Default">
      <name>kAPI_OP_MATCH_TERMS</name>
      <full_name>\kAPI_OP_MATCH_TERMS</full_name>
      <value><![CDATA['@MATCH_TERMS']]></value>
      <docblock line="161">
        <description><![CDATA[Match terms web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the match terms web-service operation, it is equivalent
to the inherited {@link kAPI_OP_MATCH kAPI_OP_MATCH} operation, except that it applies
to {@link COntologyTerm terms} and will return the matching combination of terms and
nodes.</p>

<ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms matched
    by the {@link kAPI_OP_MATCH match} service as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of found nodes
    related to the matched terms as follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="199" package="Default">
      <name>kAPI_OP_SET_TAGS</name>
      <full_name>\kAPI_OP_SET_TAGS</full_name>
      <value><![CDATA['@SET_TAGS']]></value>
      <docblock line="199">
        <description><![CDATA[Set tags web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the set tags web service, it expects the
{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter to hold a list of elements
that can take the following forms:</p>

<ul>
<li><i>Scalar</i>: A scalar is expected if the annotation element is a single node
    being both a {@link kTYPE_TRAIT trait} and a {@link kTYPE_MEASURE measure}, in this
    case the scalar should be the term {@link COntologyTerm::GID() identifier}.
<li><i>Array</i>: An array is expected if the tag is comprised of a chain of terms.
 <ul>
    <li><i>{@link COntologyTerm Terms}</i>: The list of terms must be represented by an
        array of term {@link COntologyTerm::GID() identifiers} in which the number of
        elements must be odd, the odd elements represent {@link COntologyNode node}
        {@link COntologyTerm term} references and the even elements represent
        {@link COntologyEdge edge} predicate {@link COntologyTerm terms}.
    <li><i>{@link COntologyEdge Edges}</i>: The list of edges must be represented as an
        array of integers representing {@link COntologyEdge edge} identifiers. This edge
        sequence will ultimately be transformed in a chain of terms that will be matched
        in the database.
 </ul>
</ul>

<p>The service will check if the provided chain of {@link COntologyTerm terms} exists, in
that case it will return the found {@link COntologyTag record}; if not, it will create a
new {@link COntologyTag record}.</p>

<p>Note that this service will instantiate term {@link COntologyTag paths}, so call
this service only if you are sure you need to do it; if any error occurs, the operation
will be aborted (but the eventual created annotations will not).</p>

<p>The service will return the result in the same format as the
{@link kAPI_OP_GET_TAGS kAPI_OP_GET_TAGS} service.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="242" package="Default">
      <name>kAPI_OP_GET_TAGS</name>
      <full_name>\kAPI_OP_GET_TAGS</full_name>
      <value><![CDATA['@GET_TAGS']]></value>
      <docblock line="242">
        <description><![CDATA[Get tags web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search for {@link COntologyTag tags} according to the
parameters provided to the service:</p>

<ul>
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: This parameter represents
    a list of {@link COntologyTag tag} identifiers that can be expressed as:
 <ul>
    <li><i>string</i>: In this case the value is interpreted as the tag global
        {@link kTAG_GID identifier}.
    <li><i>integer</i>: In this case the value is interpreted as the tag local
        {@link kTAG_LID identifier}.
 </ul>
<li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: This parameter represents a
    {@link CMongoQuery query}.
</ul>

<p>The two options are not exclusive and will be applied together with an
{@link kOPERATOR_AND AND} operator.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter the service
will enforce the use of {@link kAPI_DATA_PAGING paging} options.</p>

<p>The service will check the {@link kAPI_DATA_SORT kAPI_DATA_SORT} parameter to order the
returned records by the list of fields provided in that parameter.</p>

<p>The service will also check the {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} parameter to
restrict the returned fields to the provided list.</p>

<p>In this service the {@link kAPI_CONTAINER container} is not required, if omitted it will
be initialised to the {@link kDEFAULT_CNT_TAGS kDEFAULT_CNT_TAGS} constant.</p>

<p>If the service matches tags, it will return an array structured as follows:</p>

<ul>
<li><i>Key</i>: The {@link COntologyTag tag} global {@link kTAG_GID identifier}.
<li><i>Value</i>: The contents of the {@link COntologyTag tag} record.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="293" package="Default">
      <name>kAPI_OP_GET_NODES</name>
      <full_name>\kAPI_OP_GET_NODES</full_name>
      <value><![CDATA['@GET_NODES']]></value>
      <docblock line="293">
        <description><![CDATA[Get nodes web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search for {@link COntologyNode nodes} according to the
parameters provided to the service:</p>

<ul>
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: This parameter represents
    a list of {@link COntologyNode node} identifiers that are be expressed as an
    integer.
<li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: This parameter represents a
    {@link CMongoQuery query}.
</ul>

<p>The two options are not exclusive and will be applied together with an
{@link kOPERATOR_AND AND} operator.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter the service
will enforce the use of {@link kAPI_DATA_PAGING paging} options.</p>

<p>The service will check the {@link kAPI_DATA_SORT kAPI_DATA_SORT} parameter to order the
returned records by the list of fields provided in that parameter, this option applies
only to the list of returned {@link COntologyNode nodes}.</p>

<p>The service will also check the {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} parameter to
restrict the returned fields to the provided list, note that this option will only apply
to the fields of the related {@link COntologyTerm terms}, the {@link COntologyNode node}
records will be returned complete.</p>

<p>In this service the {@link kAPI_CONTAINER container} is not required, if omitted it will
be initialised to the {@link kDEFAULT_CNT_NODES kDEFAULT_CNT_NODES} constant.</p>

<p>If the service matches nodes, it will return an array structured as follows:</p>

<ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of found nodes as
    follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms related to
    the list of found nodes as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="305" package="Default">
      <name>kAPI_OP_GET_ROOTS</name>
      <full_name>\kAPI_OP_GET_ROOTS</full_name>
      <value><![CDATA['@GET_ROOTS']]></value>
      <docblock line="305">
        <description><![CDATA[Get roots web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search {@link kTYPE_ROOT root} {@link COntologyNode nodes}
matching the same parameters as the {@link kAPI_OP_GET_NODES kAPI_OP_GET_NODES} service.</p>

<p>This service is functionally equivalent to {@link kAPI_OP_GET_NODES kAPI_OP_GET_NODES}
except that a condition is added by default in which the selected nodes must have the
{@link kTYPE_ROOT root} {@link kTAG_KIND kid}.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="383" package="Default">
      <name>kAPI_OP_GET_EDGES</name>
      <full_name>\kAPI_OP_GET_EDGES</full_name>
      <value><![CDATA['@GET_EDGES']]></value>
      <docblock line="383">
        <description><![CDATA[Get edges web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search for {@link COntologyEdge edges} according to the
parameters provided to the service:</p>

<ul>
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: This parameter represents
    a list of {@link COntologyEdge edge} identifiers that are be expressed as an
    integer.
<li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: This parameter represents a
    {@link CMongoQuery query}.
</ul>

<p>The two options are not exclusive and will be applied together with an
{@link kOPERATOR_AND AND} operator.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter the service
will enforce the use of {@link kAPI_DATA_PAGING paging} options.</p>

<p>The service accepts a parameter, {@link kAPI_OPT_PREDICATES kAPI_OPT_PREDICATES}, which
represents a list of predicates, provided as a list of {@link COntologyTerm term}
identifiers, to take into consideration: if the provided
{@link kAPI_OPT_PREDICATES_INC kAPI_OPT_PREDICATES_INC} parameter resolves to <i>TRUE</i>
boolean the list of predicates will be considered as an inclusion, that is, only edges
containing one of the predicates in the list will be selected; if the
{@link kAPI_OPT_PREDICATES_INC kAPI_OPT_PREDICATES_INC} parameter resolves to
<i>FALSE</i>, only edges whose type is not among the list will be selected. If the
{@link kAPI_OPT_PREDICATES_INC kAPI_OPT_PREDICATES_INC} parameter is omitted, it will
default to <i>TRUE</i>.</p>

<p>The service will check the {@link kAPI_DATA_SORT kAPI_DATA_SORT} parameter to order the
returned records by the list of fields provided in that parameter, this option applies
only to the list of returned {@link COntologyEdge edges}.</p>

<p>The service will also check the {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} parameter to
restrict the returned fields to the provided list, note that this option will only apply
to the fields of the related {@link COntologyTerm terms}, the {@link COntologyEdge edge}
and {@link COntologyNode node} records will be returned complete.</p>

<p>In this service the {@link kAPI_CONTAINER container} is not required, if omitted it will
be initialised to the {@link kDEFAULT_CNT_EDGES kDEFAULT_CNT_EDGES} constant.</p>

<p>If the service matches edges, it will return an array structured as follows:</p>

<ul>
<li><i>{@link kAPI_RESPONSE_EDGES kAPI_RESPONSE_EDGES}</i>: The list of edges as an
    array structured as follows:
 <ul>
    <li><i>key</i>: The edge identifier.
    <li><i>Value</i>: An array structured as follows:
     <ul>
        <li><i>{@link kAPI_RESPONSE_SUBJECT kAPI_RESPONSE_SUBJECT}</i>: The subject
            {@link COntologyNode node} ID.
        <li><i>{@link kAPI_RESPONSE_PREDICATE kAPI_RESPONSE_PREDICATE}</i>: The
            predicate {@link COntologyTerm term} {@link kTAG_GID identifier}.
        <li><i>{@link kAPI_RESPONSE_OBJECT kAPI_RESPONSE_OBJECT}</i>: The object
            {@link COntologyNode node} ID.
     </ul>
 </ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of
    {@link kAPI_RESPONSE_SUBJECT subject} and {@link kAPI_RESPONSE_OBJECT object}
    found nodes as follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms
    related to the list of found nodes and to the edge predicate as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global
        {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="464" package="Default">
      <name>kAPI_OP_GET_RELS</name>
      <full_name>\kAPI_OP_GET_RELS</full_name>
      <value><![CDATA['@GET_RELS']]></value>
      <docblock line="464">
        <description><![CDATA[Get relationships web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the get relationships web service, it will locate all
{@link COntologyEdge edge} nodes related to the {@link COntologyNode node} identifiers
provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter, following
the direction provided in the {@link kAPI_OPT_DIRECTION kAPI_OPT_DIRECTION} parameter.</p>

<p>Depending on the value of the {@link kAPI_OPT_DIRECTION kAPI_OPT_DIRECTION} parameter:</p>

<ul>
<li><i>{@link kAPI_DIRECTION_IN kAPI_DIRECTION_IN}</i>: The service will return all
    {@link COntologyEdge edges} that point to the {@link COntologyNode nodes}
    provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_DIRECTION_OUT kAPI_DIRECTION_OUT}</i>: The service will return
    all {@link COntologyEdge edges} pointing from the {@link COntologyNode nodes}
    provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_DIRECTION_ALL kAPI_DIRECTION_ALL}</i>: The service will return
    all {@link COntologyEdge edges} connected in any way to the
    {@link COntologyNode nodes} provided in the
    {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_OPT_DIRECTION kAPI_OPT_DIRECTION} parameter not provided</i>: In this
    case the service will assume that the identifiers provided in the
    {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter are edge node IDs, and
    it will simply return the matching edges.
</ul>

<p>The service also expects a {@link kAPI_OPT_LEVELS kAPI_OPT_LEVELS} parameter, a signed
integer, that indicates how many levels to recurse the graph traversal, if this parameter
is not provided, it will default to 1 level; to traverse all levels this parameter should
be set to a negative number; a level of 0 will only return the list of involved nodes and
terms.</p>

<p>The service will return the same structure as the
{@link kAPI_OP_GET_EDGES kAPI_OP_GET_EDGES} service:</p>

<ul>
<li><i>{@link kAPI_RESPONSE_EDGES kAPI_RESPONSE_EDGES}</i>: The list of edges as an
    array structured as follows:
 <ul>
    <li><i>key</i>: The edge identifier.
    <li><i>Value</i>: An array structured as follows:
     <ul>
        <li><i>{@link kAPI_RESPONSE_SUBJECT kAPI_RESPONSE_SUBJECT}</i>: The subject
            {@link COntologyNode node} ID.
        <li><i>{@link kAPI_RESPONSE_PREDICATE kAPI_RESPONSE_PREDICATE}</i>: The
            predicate {@link COntologyTerm term} {@link kTAG_GID identifier}.
        <li><i>{@link kAPI_RESPONSE_OBJECT kAPI_RESPONSE_OBJECT}</i>: The object
            {@link COntologyNode node} ID.
     </ul>
 </ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of
    {@link kAPI_RESPONSE_SUBJECT subject} and {@link kAPI_RESPONSE_OBJECT object}
    found nodes as follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms
    related to the list of found nodes and to the edge predicate as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global
        {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
</ul>

<p>If you provide the {@link kAPI_OPT_PREDICATES kAPI_OPT_PREDICATES} parameter, only those
{@link COntologyEdge edges} whose type matches any of the predicate
{@link COntologyTerm term} identifiers provided in that parameter will be selected.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter, no elements
will be returned. The service does not use {@link kAPI_DATA_PAGING paging} options.</p>

<p>The record {@link kAPI_AFFECTED_COUNT count} refers to the edges count.</p>

<p>Note that the {@link kAPI_CONTAINER container} is not required, if omitted it will be
initialised to the {@link kDEFAULT_CNT_TERMS kDEFAULT_CNT_TERMS} constant.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="507" package="Default">
      <name>kAPI_OP_GET_DATASETS</name>
      <full_name>\kAPI_OP_GET_DATASETS</full_name>
      <value><![CDATA['@GET_DATASETS']]></value>
      <docblock line="507">
        <description><![CDATA[List datasets web-service.]]></description>
        <long-description><![CDATA[<p>This command can be used to search for {@link CDataset datasets} according to the
parameters provided to the service:</p>

<ul>
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: This parameter represents
    a list of {@link CDataset dataset} identifiers that can be expressed as:
 <ul>
    <li><i>string</i>: In this case the value is interpreted as the dataset global
        {@link kTAG_GID identifier}.
    <li><i>array</i>: In this case the value is interpreted as the dataset local
        {@link kTAG_LID identifier}.
 </ul>
<li><i>{@link kAPI_DATA_QUERY kAPI_DATA_QUERY}</i>: This parameter represents a
    {@link CMongoQuery query}.
</ul>

<p>The two options are not exclusive and will be applied together with an
{@link kOPERATOR_AND AND} operator.</p>

<p>If you omit the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter the service
will enforce the use of {@link kAPI_DATA_PAGING paging} options.</p>

<p>The service will check the {@link kAPI_DATA_SORT kAPI_DATA_SORT} parameter to order the
returned records by the list of fields provided in that parameter.</p>

<p>The service will also check the {@link kAPI_DATA_FIELD kAPI_DATA_FIELD} parameter to
restrict the returned fields to the provided list.</p>

<p>In this service the {@link kAPI_CONTAINER container} is not required, if omitted it will
be initialised to the {@link kDEFAULT_CNT_DATASET kDEFAULT_CNT_DATASET} constant.</p>

<p>If the service matches datasets, it will return an array structured as follows:</p>

<ul>
<li><i>Key</i>: The {@link CDataset dataset} global {@link kTAG_GID identifier}.
<li><i>Value</i>: The contents of the {@link CDataset dataset}.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="519" package="Default">
      <name>kAPI_OPT_USER_CODE</name>
      <full_name>\kAPI_OPT_USER_CODE</full_name>
      <value><![CDATA[':@user-code']]></value>
      <docblock line="519">
        <description><![CDATA[User code option.]]></description>
        <long-description><![CDATA[<p>This option refers to the user {@link CEntity::Code() code} for the
{@link kAPI_OP_LOGIN login} operation.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="527" package="Default">
      <name>kAPI_OPT_USER_PASS</name>
      <full_name>\kAPI_OPT_USER_PASS</full_name>
      <value><![CDATA[':@user-pass']]></value>
      <docblock line="527">
        <description><![CDATA[User password option.]]></description>
        <long-description><![CDATA[<p>This option refers to the user {@link CUser::Password() password} for the
{@link kAPI_OP_LOGIN login} operation.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="536" package="Default">
      <name>kAPI_OPT_IDENTIFIERS</name>
      <full_name>\kAPI_OPT_IDENTIFIERS</full_name>
      <value><![CDATA[':@identifiers']]></value>
      <docblock line="536">
        <description><![CDATA[Identifiers option.]]></description>
        <long-description><![CDATA[<p>This option refers to a list of object identifiers, this option is used by assorted
operations to receive the list of objects to be retrieved; the type of the list's
elements is determined by the operation.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="551" package="Default">
      <name>kAPI_OPT_PREDICATES</name>
      <full_name>\kAPI_OPT_PREDICATES</full_name>
      <value><![CDATA[':@predicates']]></value>
      <docblock line="551">
        <description><![CDATA[Predicates option.]]></description>
        <long-description><![CDATA[<p>This option refers to a list of predicate {@link COntologyTerm term} identifiers, this
option is used by operations involving the selection of {@link COntologyEdge edge} nodes:
only those {@link COntologyEdge edge} nodes referring to any of the provided predicate
{@link COntologyTerm term} identifiers will be selected.</p>

<p>Note that this parameter depends on the
{@link kAPI_OPT_PREDICATES_INC kAPI_OPT_PREDICATES_INC} parameter: if the latter is 1, it
means that only edges whose predicate is among this list will be selected; if the value
is 0, only edges whose predicate is not among this list will be selected.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="560" package="Default">
      <name>kAPI_OPT_PREDICATES_INC</name>
      <full_name>\kAPI_OPT_PREDICATES_INC</full_name>
      <value><![CDATA[':@predicates-inc']]></value>
      <docblock line="560">
        <description><![CDATA[Predicates inclusion option.]]></description>
        <long-description><![CDATA[<p>This option refers to the list of {@link kAPI_OPT_PREDICATES predicates}: it is a boolean
(1/0) flag that determines whether the {@link kAPI_OPT_PREDICATES predicates} list is to
be considered as inclusive or exclusive. If omitted it defaults to 1 (inclusion).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="581" package="Default">
      <name>kAPI_OPT_DIRECTION</name>
      <full_name>\kAPI_OPT_DIRECTION</full_name>
      <value><![CDATA[':@direction']]></value>
      <docblock line="581">
        <description><![CDATA[Relationship direction.]]></description>
        <long-description><![CDATA[<p>This option is used when retrieving {@link kAPI_OP_GET_RELS edges}: it indicates
the direction of the relationships in regard to the node identifiers provided in the
{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter:</p>

<ul>
<li><i>{@link kAPI_DIRECTION_IN kAPI_DIRECTION_IN}</i>: Incoming relationships, this
    will select all elements that point to the objects provided in the
    {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_DIRECTION_OUT kAPI_DIRECTION_OUT}</i>: Outgoing relationships, this
    will select all elements pointed to by the objects provided in the
    {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_DIRECTION_ALL kAPI_DIRECTION_ALL}</i>: All relationships, this will
    select all elements both pointing to and pointed to by the objects provided in the
    {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="593" package="Default">
      <name>kAPI_OPT_LEVELS</name>
      <full_name>\kAPI_OPT_LEVELS</full_name>
      <value><![CDATA[':@levels']]></value>
      <docblock line="593">
        <description><![CDATA[Relationship levels.]]></description>
        <long-description><![CDATA[<p>This option is used when retrieving for {@link kAPI_OP_GET_RELS relationships}: it
indicates the amount of levels to follow.</p>

<p>If the integer parameter is omitted, the service will force a one level step, if the
parameter is negative, it means that the service will continue until all levels have been
reached.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="604" package="Default">
      <name>kAPI_RESPONSE_TERMS</name>
      <full_name>\kAPI_RESPONSE_TERMS</full_name>
      <value><![CDATA['terms']]></value>
      <docblock line="604">
        <description><![CDATA[Terms.]]></description>
        <long-description><![CDATA[<p>This tag will hold the list of terms.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="611" package="Default">
      <name>kAPI_RESPONSE_NODES</name>
      <full_name>\kAPI_RESPONSE_NODES</full_name>
      <value><![CDATA['nodes']]></value>
      <docblock line="611">
        <description><![CDATA[Nodes.]]></description>
        <long-description><![CDATA[<p>This tag will hold the list of nodes.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="618" package="Default">
      <name>kAPI_RESPONSE_EDGES</name>
      <full_name>\kAPI_RESPONSE_EDGES</full_name>
      <value><![CDATA['edges']]></value>
      <docblock line="618">
        <description><![CDATA[Edges.]]></description>
        <long-description><![CDATA[<p>This tag will hold the list of edges.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="630" package="Default">
      <name>kAPI_RESPONSE_SUBJECT</name>
      <full_name>\kAPI_RESPONSE_SUBJECT</full_name>
      <value><![CDATA['s']]></value>
      <docblock line="630">
        <description><![CDATA[Subject.]]></description>
        <long-description><![CDATA[<p>This tag {@link kAPI_RESPONSE_NODES refers} to the subject {@link COntologyNode node} of
a relationship.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="638" package="Default">
      <name>kAPI_RESPONSE_PREDICATE</name>
      <full_name>\kAPI_RESPONSE_PREDICATE</full_name>
      <value><![CDATA['p']]></value>
      <docblock line="638">
        <description><![CDATA[Predicate.]]></description>
        <long-description><![CDATA[<p>This tag {@link kAPI_RESPONSE_TERMS refers} to the predicate {@link COntologyTerm term}
of a relationship.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="646" package="Default">
      <name>kAPI_RESPONSE_OBJECT</name>
      <full_name>\kAPI_RESPONSE_OBJECT</full_name>
      <value><![CDATA['o']]></value>
      <docblock line="646">
        <description><![CDATA[Object.]]></description>
        <long-description><![CDATA[<p>This tag {@link kAPI_RESPONSE_NODES refers} to the object {@link COntologyNode node} of
a relationship.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="658" package="Default">
      <name>kAPI_DIRECTION_IN</name>
      <full_name>\kAPI_DIRECTION_IN</full_name>
      <value><![CDATA['i']]></value>
      <docblock line="658">
        <description><![CDATA[Incoming.]]></description>
        <long-description><![CDATA[<p>This tag indicates an incoming relationship, in other words, all elements that point to
the current object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="666" package="Default">
      <name>kAPI_DIRECTION_OUT</name>
      <full_name>\kAPI_DIRECTION_OUT</full_name>
      <value><![CDATA['o']]></value>
      <docblock line="666">
        <description><![CDATA[Outgoing.]]></description>
        <long-description><![CDATA[<p>This tag indicates an outgoing relationship, in other words, all elements to which the
current object points to.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="674" package="Default">
      <name>kAPI_DIRECTION_ALL</name>
      <full_name>\kAPI_DIRECTION_ALL</full_name>
      <value><![CDATA['a']]></value>
      <docblock line="674">
        <description><![CDATA[Incoming and outgoing.]]></description>
        <long-description><![CDATA[<p>This tag indicates incoming and outgoing relationships, in other words, all elements that
are related to the current object, both pointing to it and pointed by it.</p>]]></long-description>
      </docblock>
    </constant>
    <source>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</source>
  </file>
  <file path="classes/CWarehouseWrapper.php" hash="e9456ad573126916da6d27127ee1a8ea" package="Default">
    <namespace-alias name="Transport">Everyman\Neo4j\Transport</namespace-alias>
    <namespace-alias name="Client">Everyman\Neo4j\Client</namespace-alias>
    <namespace-alias name="NodeIndex">Everyman\Neo4j\Index\NodeIndex</namespace-alias>
    <namespace-alias name="RelationshipIndex">Everyman\Neo4j\Index\RelationshipIndex</namespace-alias>
    <namespace-alias name="NodeFulltextIndex">Everyman\Neo4j\Index\NodeFulltextIndex</namespace-alias>
    <namespace-alias name="Node">Everyman\Neo4j\Node</namespace-alias>
    <namespace-alias name="Relationship">Everyman\Neo4j\Relationship</namespace-alias>
    <namespace-alias name="Batch">Everyman\Neo4j\Batch</namespace-alias>
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name/>
      <docblock line="35">
        <description><![CDATA[User definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the user class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="42" type="Require Once" package="Default">
      <name/>
      <docblock line="42">
        <description><![CDATA[Ontology term definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the ontology term class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="49" type="Require Once" package="Default">
      <name/>
      <docblock line="49">
        <description><![CDATA[Ontology data tag definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the ontology data tag class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="56" type="Require Once" package="Default">
      <name/>
      <docblock line="56">
        <description><![CDATA[Ontology node definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the ontology node class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="63" type="Require Once" package="Default">
      <name/>
      <docblock line="63">
        <description><![CDATA[Ontology edge definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains the ontology edge class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="70" type="Require Once" package="Default">
      <name/>
      <docblock line="70">
        <description><![CDATA[Local definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions to this class.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="118" package="MyWrapper\Wrappers">
      <extends>CMongoDataWrapper</extends>
      <name>CWarehouseWrapper</name>
      <full_name>\CWarehouseWrapper</full_name>
      <docblock line="118">
        <description><![CDATA[Warehouse Mongo data wrapper.]]></description>
        <long-description><![CDATA[<p>This class overloads its {@link CMongoDataWrapper ancestor} to implement a web-service
customised to the germplasm data warehouse.</p>

<p>This class adds the following operations:</p>

<ul>
<li><i>{@link kAPI_OP_LOGIN kAPI_OP_LOGIN}</i>: Login, this operation expects the user
    {@link kAPI_OPT_USER_CODE code} and {@link kAPI_OPT_USER_PASS password} and will
    return the matching user.
<li><i>{@link kAPI_OP_GET_TERMS kAPI_OP_GET_TERMS}</i>: Get terms, this operation will
    return the list of ontology {@link COntologyTerm terms} matching the identifiers
    provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} option. This
    list is expected to hold {@link COntologyTerm term} {@link kTAG_GID identifiers}.
<li><i>{@link kAPI_OP_GET_NODES kAPI_OP_GET_NODES}</i>: Get terms, this operation will
    return the list of ontology {@link COntologyTerm terms} matching the identifiers
    provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} option. This
    list is expected to hold {@link COntologyTerm term} {@link kTAG_GID identifiers}.
</ul>

<p>The class adds the following options:</p>

<ul>
<li><i>{@link kAPI_OPT_USER_CODE kAPI_OPT_USER_CODE}</i>: User code, this option expects
    a string corresponding to the user {@link CEntity::Code() code}.
<li><i>{@link kAPI_OPT_USER_PASS kAPI_OPT_USER_PASS}</i>: User code, this option expects
    a string corresponding to the user {@link CUser::Password() password}.
<li><i>{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}</i>: Identifiers list, this
    option expects an array of object identifiers. The actual type of these elements is
    determined by the operation.
</ul>]]></long-description>
        <tag line="118" name="package" description="MyWrapper"/>
        <tag line="118" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="148" package="MyWrapper\Wrappers">
        <name>_InitOptions</name>
        <full_name>_InitOptions</full_name>
        <docblock line="148">
          <description><![CDATA[Initialise options.]]></description>
          <long-description><![CDATA[<p>This method is responsible for parsing and setting all default and provided options,
derived classes should overload this method to handle custom options.</p>

<p>In this class we enforce {@link kAPI_DATA_PAGING paging} options if the</p>]]></long-description>
          <tag line="148" name="link" description="identifiers} list was not provided and the operation is&#10;get {@link kAPI_OP_GET_TERMS terms}." link="kAPI_OPT_IDENTIFIERS"/>
          <tag line="148" name="access" description="private"/>
          <tag line="148" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="259" package="MyWrapper\Wrappers">
        <name>_InitResources</name>
        <full_name>_InitResources</full_name>
        <docblock line="259">
          <description><![CDATA[Initialise resources.]]></description>
          <long-description><![CDATA[<p>In this class we instantiate the Neo4j client.</p>]]></long-description>
          <tag line="259" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="300" package="MyWrapper\Wrappers">
        <name>_ParseRequest</name>
        <full_name>_ParseRequest</full_name>
        <docblock line="300">
          <description><![CDATA[Parse request.]]></description>
          <long-description><![CDATA[<p>We overload this method to parse the user {@link kAPI_OPT_USER_CODE code} and
{@link kAPI_OPT_USER_PASS password} tags.</p>]]></long-description>
          <tag line="300" name="access" description="protected"/>
          <tag line="300" name="uses" description="\_ParseUserCode()" refers="\_ParseUserCode()"/>
          <tag line="300" name="uses" description="\_ParseUserPass()" refers="\_ParseUserPass()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="336" package="MyWrapper\Wrappers">
        <name>_FormatRequest</name>
        <full_name>_FormatRequest</full_name>
        <docblock line="336">
          <description><![CDATA[Format request.]]></description>
          <long-description><![CDATA[<p>This method should perform any needed formatting before the request will be handled.</p>

<p>In this class we handle the parameters to be decoded</p>]]></long-description>
          <tag line="336" name="access" description="protected"/>
          <tag line="336" name="uses" description="\_FormatIdentifiers()" refers="\_FormatIdentifiers()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="367" package="MyWrapper\Wrappers">
        <name>_ValidateRequest</name>
        <full_name>_ValidateRequest</full_name>
        <docblock line="367">
          <description><![CDATA[Validate request.]]></description>
          <long-description><![CDATA[<p>This method should check that the request is valid and that all required parameters
have been sent.</p>

<p>In this class we add the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter
validation.</p>]]></long-description>
          <tag line="367" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="404" package="MyWrapper\Wrappers">
        <name>_ParseIdentifiers</name>
        <full_name>_ParseIdentifiers</full_name>
        <docblock line="404">
          <description><![CDATA[Parse identifiers.]]></description>
          <long-description><![CDATA[<p>This method will parse the user {@link kAPI_OPT_IDENTIFIERS identifiers} parameter.</p>]]></long-description>
          <tag line="404" name="access" description="protected"/>
          <tag line="404" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="437" package="MyWrapper\Wrappers">
        <name>_ParsePredicates</name>
        <full_name>_ParsePredicates</full_name>
        <docblock line="437">
          <description><![CDATA[Parse predicates.]]></description>
          <long-description><![CDATA[<p>This method will parse the {@link kAPI_OPT_PREDICATES predicates} parameter.</p>]]></long-description>
          <tag line="437" name="access" description="protected"/>
          <tag line="437" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="471" package="MyWrapper\Wrappers">
        <name>_ParsePredicatesInclusion</name>
        <full_name>_ParsePredicatesInclusion</full_name>
        <docblock line="471">
          <description><![CDATA[Parse predicates inclusion flag.]]></description>
          <long-description><![CDATA[<p>This method will parse the predicates {@link kAPI_OPT_PREDICATES_INC inclusion}
parameter.</p>]]></long-description>
          <tag line="471" name="access" description="protected"/>
          <tag line="471" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="504" package="MyWrapper\Wrappers">
        <name>_ParseDirection</name>
        <full_name>_ParseDirection</full_name>
        <docblock line="504">
          <description><![CDATA[Parse direction.]]></description>
          <long-description><![CDATA[<p>This method will parse the relations {@link kAPI_OPT_DIRECTION direction} parameter.</p>]]></long-description>
          <tag line="504" name="access" description="protected"/>
          <tag line="504" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="537" package="MyWrapper\Wrappers">
        <name>_ParseUserCode</name>
        <full_name>_ParseUserCode</full_name>
        <docblock line="537">
          <description><![CDATA[Parse user code.]]></description>
          <long-description><![CDATA[<p>This method will parse the user {@link kAPI_OPT_USER_CODE code} parameter.</p>]]></long-description>
          <tag line="537" name="access" description="protected"/>
          <tag line="537" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="566" package="MyWrapper\Wrappers">
        <name>_ParseUserPass</name>
        <full_name>_ParseUserPass</full_name>
        <docblock line="566">
          <description><![CDATA[Parse user password.]]></description>
          <long-description><![CDATA[<p>This method will parse the user {@link kAPI_OPT_USER_PASS password} parameter.</p>]]></long-description>
          <tag line="566" name="access" description="protected"/>
          <tag line="566" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="595" package="MyWrapper\Wrappers">
        <name>_ParseLevels</name>
        <full_name>_ParseLevels</full_name>
        <docblock line="595">
          <description><![CDATA[Parse level.]]></description>
          <long-description><![CDATA[<p>This method will parse the relations {@link kAPI_OPT_LEVELS levels} parameter.</p>]]></long-description>
          <tag line="595" name="access" description="protected"/>
          <tag line="595" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="638" package="MyWrapper\Wrappers">
        <name>_FormatQuery</name>
        <full_name>_FormatQuery</full_name>
        <docblock line="638">
          <description><![CDATA[Format query.]]></description>
          <long-description><![CDATA[<p>This method will format the request query.</p>

<p>In this class we enforce the root selector for the
{@link kAPI_OP_GET_ROOTS kAPI_OP_GET_ROOTS} service.</p>]]></long-description>
          <tag line="638" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="768" package="MyWrapper\Wrappers">
        <name>_FormatIdentifiers</name>
        <full_name>_FormatIdentifiers</full_name>
        <docblock line="768">
          <description><![CDATA[This method will format the request identifiers list.]]></description>
          <long-description><![CDATA[<p>In this class we perform different actions depending on which operation was
requested:</p>

<ul>
<li><i>{@link kAPI_OP_GET_TERMS kAPI_OP_GET_TERMS}</i>: Each provided identifier
    that is not an array will be hashed and the resulting array will be used to
    generate a {@link CQueryStatement::Member() member}
    {@link kAPI_DATA_QUERY query}.
<li><i>{@link kAPI_OP_GET_NODES kAPI_OP_GET_NODES} and
    {@link kAPI_OP_GET_EDGES kAPI_OP_GET_EDGES}</i>: The same actions as the
    previous case, except that the resulting query will be treated as a list of
    numbers.
</ul>

<p>In this class we handle the terms list {@link kAPI_OP_GET_TERMS operation} by
creating a query and using the {@link kAPI_OP_GET GET} handler, in this method we
create the {@link CMongoQuery query}.</p>]]></long-description>
          <tag line="768" name="access" description="protected"/>
          <tag line="768" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="768" name="see" description="\kAPI_OPT_IDENTIFIERS" refers="\kAPI_OPT_IDENTIFIERS"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1096" package="MyWrapper\Wrappers">
        <name>_FormatPredicates</name>
        <full_name>_FormatPredicates</full_name>
        <docblock line="1096">
          <description><![CDATA[This method will format the request predicates list.]]></description>
          <long-description><![CDATA[<p>In this class we {@link _DecodeParameter() decode} the parameter.</p>]]></long-description>
          <tag line="1096" name="access" description="protected"/>
          <tag line="1096" name="uses" description="\_DecodeParameter()" refers="\_DecodeParameter()"/>
          <tag line="1096" name="see" description="\kAPI_OPT_PREDICATES" refers="\kAPI_OPT_PREDICATES"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1145" package="MyWrapper\Wrappers">
        <name>_ValidateOperation</name>
        <full_name>_ValidateOperation</full_name>
        <docblock line="1145">
          <description><![CDATA[Validate request operation.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_OPERATION operation} parameter is valid.</p>

<p>In this class we check that both the user {@link kAPI_OPT_USER_CODE code} and
{@link kAPI_OPT_USER_PASS password} have been sent when requesting a
{@link kAPI_OP_LOGIN login} operation, in addition to the
{@link kAPI_DATABASE database} and {@link kAPI_CONTAINER container} references.</p>]]></long-description>
          <tag line="1145" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1297" package="MyWrapper\Wrappers">
        <name>_ValidateQuery</name>
        <full_name>_ValidateQuery</full_name>
        <docblock line="1297">
          <description><![CDATA[Validate query reference.]]></description>
          <long-description><![CDATA[<p>We overload this method for handling the
{@link kAPI_OP_MATCH_TERMS kAPI_OP_MATCH_TERMS} service.</p>]]></long-description>
          <tag line="1297" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1382" package="MyWrapper\Wrappers">
        <name>_ValidateIdentifiers</name>
        <full_name>_ValidateIdentifiers</full_name>
        <docblock line="1382">
          <description><![CDATA[Validate identifier references.]]></description>
          <long-description><![CDATA[<p>We implement this method to check if all the provided identifiers correspond to
existing records, if this is not the case, the method will throw an exception.</p>

<p>This operation will only be performed for the
{@link kAPI_OP_SET_TAGS kAPI_OP_SET_TAGS} operation.</p>]]></long-description>
          <tag line="1382" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1548" package="MyWrapper\Wrappers">
        <name>_HandleRequest</name>
        <full_name>_HandleRequest</full_name>
        <docblock line="1548">
          <description><![CDATA[Handle request.]]></description>
          <long-description><![CDATA[<p>This method will handle the request.</p>]]></long-description>
          <tag line="1548" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1609" package="MyWrapper\Wrappers">
        <name>_Handle_Login</name>
        <full_name>_Handle_Login</full_name>
        <docblock line="1609">
          <description><![CDATA[Handle {@link kAPI_OP_LOGIN login} request.]]></description>
          <long-description><![CDATA[<p>This method will first {@link CUser::__construct() load} the user by using its
{@link CEntity::Code() code}, then match the {@link CUser::Password() password}; if
they match it will return the user record.</p>]]></long-description>
          <tag line="1609" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1695" package="MyWrapper\Wrappers">
        <name>_Handle_GetScalar</name>
        <full_name>_Handle_GetScalar</full_name>
        <docblock line="1695">
          <description><![CDATA[Handle list scalars request.]]></description>
          <long-description><![CDATA[<p>This method will handle all requests that result in a query returning a <i>single</i>
list of selected records, it is equivalent to the {@link _Handle_Get() _Handle_Get}
method, with the only difference being that each found element is here indexed by the
object global {@link kTAG_GID identifier}.</p>]]></long-description>
          <tag line="1695" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1868" package="MyWrapper\Wrappers">
        <name>_Handle_MatchTerms</name>
        <full_name>_Handle_MatchTerms</full_name>
        <docblock line="1868">
          <description><![CDATA[Handle {@link kAPI_OP_GET Get} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_GET kAPI_OP_GET} request, which
corresponds to the find Mongo query.</p>]]></long-description>
          <tag line="1868" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="2119" package="MyWrapper\Wrappers">
        <name>_Handle_SetTags</name>
        <full_name>_Handle_SetTags</full_name>
        <docblock line="2119">
          <description><![CDATA[Handle {@link kAPI_OP_SET_TAGS set-tags} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_SET_TAGS kAPI_OP_SET_TAGS} request, which
expects a list of {@link COntologyTerm term} and {@link COntologyEdge edge}
identifiers in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter, each
of those elements will either be a {@link CDataTypeBinary binary} object or an array
of {@link COntologyEdge edge} identifiers.</p>

<p>This method will match/create data {@link COntologyTag tags} and return the list.</p>]]></long-description>
          <tag line="2119" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="2207" package="MyWrapper\Wrappers">
        <name>_Handle_GetNodes</name>
        <full_name>_Handle_GetNodes</full_name>
        <docblock line="2207">
          <description><![CDATA[Handle get nodes request.]]></description>
          <long-description><![CDATA[<p>This method will process the query provided in the
{@link kAPI_DATA_QUERY kAPI_DATA_QUERY} parameter and return a result structured as
follows:</p>

<ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of found nodes
    as follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms
    related to the list of found nodes as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global
        {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
</ul>]]></long-description>
          <tag line="2207" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="2468" package="MyWrapper\Wrappers">
        <name>_Handle_GetEdges</name>
        <full_name>_Handle_GetEdges</full_name>
        <docblock line="2468">
          <description><![CDATA[Handle get edges request.]]></description>
          <long-description><![CDATA[<p>This method will process the query provided in the
{@link kAPI_DATA_QUERY kAPI_DATA_QUERY} parameter and return a result structured as
follows:</p>

<ul>
<li><i>{@link kAPI_RESPONSE_EDGES kAPI_RESPONSE_EDGES}</i>: The list of edges as an
    array structured as follows:
 <ul>
    <li><i>key</i>: The edge identifier.
    <li><i>Value</i>: An array structured as follows:
     <ul>
        <li><i>{@link kAPI_RESPONSE_SUBJECT kAPI_RESPONSE_SUBJECT}</i>: The subject
            {@link COntologyNode node} ID.
        <li><i>{@link kAPI_RESPONSE_PREDICATE kAPI_RESPONSE_PREDICATE}</i>: The
            predicate {@link COntologyTerm term} {@link kTAG_GID identifier}.
        <li><i>{@link kAPI_RESPONSE_OBJECT kAPI_RESPONSE_OBJECT}</i>: The object
            {@link COntologyNode node} ID.
     </ul>
 </ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of
    {@link kAPI_RESPONSE_SUBJECT subject} and {@link kAPI_RESPONSE_OBJECT object}
    found nodes as follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms
    related to the list of found nodes and to the edge predicate as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global
        {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
</ul>]]></long-description>
          <tag line="2468" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="2947" package="MyWrapper\Wrappers">
        <name>_Handle_GetRelations</name>
        <full_name>_Handle_GetRelations</full_name>
        <docblock line="2947">
          <description><![CDATA[Handle {@link kAPI_OP_GET_RELS get-relations} request.]]></description>
          <long-description><![CDATA[<p>This method will return the same structure as the
{@link kAPI_OP_GET_EDGES kAPI_OP_GET_EDGES} service:</p>

<ul>
<li><i>{@link kAPI_RESPONSE_EDGES kAPI_RESPONSE_EDGES}</i>: The list of edges as an
    array structured as follows:
 <ul>
    <li><i>key</i>: The edge identifier.
    <li><i>Value</i>: An array structured as follows:
     <ul>
        <li><i>{@link kAPI_RESPONSE_SUBJECT kAPI_RESPONSE_SUBJECT}</i>: The subject
            {@link COntologyNode node} ID.
        <li><i>{@link kAPI_RESPONSE_PREDICATE kAPI_RESPONSE_PREDICATE}</i>: The
            predicate {@link COntologyTerm term} {@link kTAG_GID identifier}.
        <li><i>{@link kAPI_RESPONSE_OBJECT kAPI_RESPONSE_OBJECT}</i>: The object
            {@link COntologyNode node} ID.
     </ul>
 </ul>
<li><i>{@link kAPI_RESPONSE_NODES kAPI_RESPONSE_NODES}</i>: The list of
    {@link kAPI_RESPONSE_SUBJECT subject} and {@link kAPI_RESPONSE_OBJECT object}
    found nodes as follows:
 <ul>
    <li><i>Key</i>: The node ID.
    <li><i>Value</i>: The node properties.
 </ul>
<li><i>{@link kAPI_RESPONSE_TERMS kAPI_RESPONSE_TERMS}</i>: The list of terms
    related to the list of found nodes and to the edge predicate as follows:
 <ul>
    <li><i>Key</i>: The {@link COntologyTerm term} global
        {@link kTAG_GID identifier}.
    <li><i>Value</i>: The contents of the {@link COntologyTerm term}.
 </ul>
</ul>

<p>Depending on the value of the {@link kAPI_OPT_DIRECTION kAPI_OPT_DIRECTION}
parameter:</p>

<ul>
<li><i>{@link kAPI_DIRECTION_IN kAPI_DIRECTION_IN}</i>: The service will return all
    {@link COntologyEdge edges} that point to the {@link COntologyNode nodes}
    provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_DIRECTION_OUT kAPI_DIRECTION_OUT}</i>: The service will return
    all {@link COntologyEdge edges} pointing from the {@link COntologyNode nodes}
    provided in the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
<li><i>{@link kAPI_DIRECTION_ALL kAPI_DIRECTION_ALL}</i>: The service will return
    all {@link COntologyEdge edges} connected in any way to the
    {@link COntologyNode nodes} provided in the
    {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter.
</ul>

<p>The service also expects a {@link kAPI_OPT_LEVELS kAPI_OPT_LEVELS}parameter, a signed
integer, that indicates how many levels to recurse the graph traversal, if this parameter
is not provided, it will default to 1 level; to traverse all levels this parameter should
be set to a negative number; a level of 0 will only return the list of involved nodes and
terms.</p>

<p>If the {@link kAPI_OPT_PREDICATES kAPI_OPT_PREDICATES} parameter was provided, only
those {@link COntologyEdge edges} whose type matches any of the predicate
{@link COntologyTerm term} identifiers provided in that parameter will be selected.</p>

<p>If the {@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS} parameter was not provided,
the method will return the above structure with no content.</p>

<p><b><i>Note: this method handles the case in which the
{@link kAPI_OPT_DIRECTION direction} is not provided: in that case it will treat the
list of {@link kAPI_OPT_IDENTIFIERS identifiers} as a list of edge node IDs and will
work as the {@link kAPI_OP_GET_EDGES kAPI_OP_GET_EDGES} service</i></b>.</p>]]></long-description>
          <tag line="2947" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="3161" package="MyWrapper\Wrappers">
        <name>_Handle_ListOp</name>
        <full_name>_Handle_ListOp</full_name>
        <docblock line="3161">
          <description><![CDATA[Handle {@link kAPI_OP_HELP list} operations request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_HELP kAPI_OP_HELP} request, which
should return the list of supported operations.</p>]]></long-description>
          <tag line="3161" name="param" description="Receives operations list." type="\reference" variable="$theList">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3161" name="access" description="protected"/>
        </docblock>
        <argument line="3161">
          <name>$theList</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="3304" package="MyWrapper\Wrappers">
        <name>_EscapeLucene</name>
        <full_name>_EscapeLucene</full_name>
        <docblock line="3304">
          <description><![CDATA[Escape Lucene element.]]></description>
          <long-description><![CDATA[<p>This method will escape the provided element to make it compatible with the Lucene
query language, the method expects the provided parameter to be an element excluding
specific lucene operators.</p>]]></long-description>
          <tag line="3304" name="param" description="Element to escape." type="string" variable="$theElement">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3304" name="access" description="protected"/>
          <tag line="3304" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="3304">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="3366" package="MyWrapper\Wrappers">
        <name>_Traverse</name>
        <full_name>_Traverse</full_name>
        <docblock line="3366">
          <description><![CDATA[Traverse graph.]]></description>
          <long-description><![CDATA[<p>This method will traverse the graph in the direction set in the
{@link kAPI_OPT_DIRECTION kAPI_OPT_DIRECTION} parameter and
{@link _EdgeParser() collect} all found edge elements in the provided parameters.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>&$theList</b>: List of current level node identifiers.
<li><b>&$theTerms</b>: Reference to the list of term identifiers.
<li><b>&$theNodes</b>: Reference to the list of nodes.
<li><b>&$theEdges</b>: Reference to the list of edge elements.
<li><b>&$thePredicates</b>: Reference to the list of predicates to be considered.
<li><b>$theLevel</b>: Current traversal depth level, 0 means the lowest.
</ul>

<p>The method will return the number of processed elements count.</p>]]></long-description>
          <tag line="3366" name="param" description="&amp;$theList Current level node identifiers." type="\reference" variable="$theList">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3366" name="param" description="&amp;$theTerms List of term identifiers." type="\reference" variable="$theTerms">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3366" name="param" description="&amp;$theNodes List of nodes." type="\reference" variable="$theNodes">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3366" name="param" description="&amp;$theEdges List of edge references." type="\reference" variable="$theEdges">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3366" name="param" description="&amp;$thePredicates List of predicate filter references." type="\reference" variable="$thePredicates">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3366" name="param" description="Depth level." type="integer" variable="$theLevel">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="3366" name="access" description="protected"/>
        </docblock>
        <argument line="3366">
          <name>$theList</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3367">
          <name>$theTerms</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3367">
          <name>$theNodes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3367">
          <name>$theEdges</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3368">
          <name>$thePredicates</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3369">
          <name>$theLevel</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="3525" package="MyWrapper\Wrappers">
        <name>_EdgeParser</name>
        <full_name>_EdgeParser</full_name>
        <docblock line="3525">
          <description><![CDATA[Collect edge elements.]]></description>
          <long-description><![CDATA[<p>This method will collect the provided edge elements and set them into the provided
parameters.</p>

<p>The parameters to this method are:</p>

<ul>
<li><b>$theEdge</b>: Edge node to handle.
<li><b>&$theTerms</b>: Reference to the list of term identifiers.
<li><b>&$theNodes</b>: Reference to the list of nodes.
<li><b>&$theEdges</b>: Reference to the list of edge elements.
</ul>

<p>The method will return 1 if the edge was handled, 0 if not.</p>]]></long-description>
          <tag line="3525" name="param" description="Edge node to handle." type="\Relationship" variable="$theEdge">
            <type by_reference="false">\Relationship</type>
          </tag>
          <tag line="3525" name="param" description="&amp;$theTerms List of term identifiers." type="\reference" variable="$theTerms">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3525" name="param" description="&amp;$theNodes List of nodes." type="\reference" variable="$theNodes">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3525" name="param" description="&amp;$theEdges List of edge references." type="\reference" variable="$theEdges">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="3525" name="access" description="protected"/>
        </docblock>
        <argument line="3525">
          <name>$theEdge</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3526">
          <name>$theTerms</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3526">
          <name>$theNodes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3526">
          <name>$theEdges</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CWarehouseWrapperClient.php" hash="375e9b0a3eae8d43de6b0af08ff93424" package="Default">
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name/>
      <docblock line="35">
        <description><![CDATA[Server definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all definitions of the server object.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="65" package="MyWrapper\Wrappers">
      <extends>CDataWrapperClient</extends>
      <name>CWarehouseWrapperClient</name>
      <full_name>\CWarehouseWrapperClient</full_name>
      <docblock line="65">
        <description><![CDATA[Warehouse data wrapper client.]]></description>
        <long-description><![CDATA[<p>This class represents a germplasm warehouse web-services data wrapper client, it
facilitates the job of requesting information from servers derived from the
{@link CWarehouseWrapper CWarehouseWrapper} class.</p>

<p>This class adds the following properties to its {@link CWrapperClient ancestor}:</p>

<ul>
<li><i>User {@link UserCode() code}</i>: This {@link kAPI_OPT_USER_CODE property}
    represents the user code provided to the {@link kAPI_OP_LOGIN login} operation.
<li><i>User {@link UserPass() password}</i>: This {@link kAPI_OPT_USER_PASS property}
    represents the user password provided to the {@link kAPI_OP_LOGIN login} operation.
</ul>

<p>The class also adds the following new operations:</p>

<ul>
<li><i>{@link kAPI_OP_LOGIN kAPI_OP_LOGIN}</i>: This is the tag that represents the
    login operation, it will return the matching user {@link CUser object} if the
    provided user {@link kAPI_OPT_USER_CODE code} and
    {@link kAPI_OPT_USER_PASS password} match.
</ul>]]></long-description>
        <tag line="65" name="package" description="MyWrapper"/>
        <tag line="65" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="MyWrapper\Wrappers">
        <name>Operation</name>
        <full_name>Operation</full_name>
        <docblock line="106">
          <description><![CDATA[Manage operation.]]></description>
          <long-description><![CDATA[<p>We {@link CDataWrapperClient::Operation() overload} this method to add the following
allowed operations:</p>

<ul>
<li><i>{@link kAPI_OP_LOGIN kAPI_OP_LOGIN}</i>: This is the tag that represents
    the user login operation, it will return the {@link CUser user} matching the
    provided user {@link UserCode() code} and {@link UserPass() password}.
</ul>]]></long-description>
          <tag line="106" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="106" name="access" description="public"/>
          <tag line="106" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="106" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="106" name="see" description="\kAPI_OPERATION" refers="\kAPI_OPERATION"/>
          <tag line="106" name="see" description="\kAPI_OP_GET_ONE" refers="\kAPI_OP_GET_ONE"/>
        </docblock>
        <argument line="106">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="173" package="MyWrapper\Wrappers">
        <name>ObjectID</name>
        <full_name>ObjectID</full_name>
        <docblock line="173">
          <description><![CDATA[Manage object ID.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object {@link kAPI_OPT_ID ID}, it accepts a
value which represents either the object identifier, or the requested operation:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="173" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="173" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="173" name="access" description="public"/>
          <tag line="173" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="173" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="173" name="see" description="\kAPI_OPT_ID" refers="\kAPI_OPT_ID"/>
        </docblock>
        <argument line="173">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="MyWrapper\Wrappers">
        <name>ObjectTitle</name>
        <full_name>ObjectTitle</full_name>
        <docblock line="210">
          <description><![CDATA[Manage object title.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the object {@link kAPI_OPT_TITLE title}, it accepts
a value which represents either the object title, or the requested operation:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="210" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="210" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="210" name="access" description="public"/>
          <tag line="210" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="210" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="210" name="see" description="\kAPI_OPT_TITLE" refers="\kAPI_OPT_TITLE"/>
        </docblock>
        <argument line="210">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="247" package="MyWrapper\Wrappers">
        <name>UserCode</name>
        <full_name>UserCode</full_name>
        <docblock line="247">
          <description><![CDATA[Manage user code.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the user {@link kAPI_OPT_USER_CODE code}, it
accepts a string which represents either the user code, or the requested operation:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="247" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="247" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="247" name="access" description="public"/>
          <tag line="247" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="247" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="247" name="see" description="\kAPI_OPT_USER_CODE" refers="\kAPI_OPT_USER_CODE"/>
        </docblock>
        <argument line="247">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="285" package="MyWrapper\Wrappers">
        <name>UserPass</name>
        <full_name>UserPass</full_name>
        <docblock line="285">
          <description><![CDATA[Manage user password.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the user {@link kAPI_OPT_USER_PASS password}, it
accepts a string which represents either the user password, or the requested
operation:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="285" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="285" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="285" name="access" description="public"/>
          <tag line="285" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="285" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="285" name="see" description="\kAPI_OPT_USER_PASS" refers="\kAPI_OPT_USER_PASS"/>
        </docblock>
        <argument line="285">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="320" package="MyWrapper\Wrappers">
        <name>Identifiers</name>
        <full_name>Identifiers</full_name>
        <docblock line="320">
          <description><![CDATA[Manage identifiers list.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_OPT_IDENTIFIERS identifiers}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of identifiers.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant
{@link kAPI_OPT_IDENTIFIERS kAPI_OPT_IDENTIFIERS}.</p>]]></long-description>
          <tag line="320" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="320" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="320" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="320" name="access" description="public"/>
          <tag line="320" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="320" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="320" name="see" description="\kAPI_OPT_IDENTIFIERS" refers="\kAPI_OPT_IDENTIFIERS"/>
        </docblock>
        <argument line="320">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="320">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="320">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="356" package="MyWrapper\Wrappers">
        <name>Predicates</name>
        <full_name>Predicates</full_name>
        <docblock line="356">
          <description><![CDATA[Manage predicates list.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_OPT_PREDICATES predicates}, it
uses the standard accessor {@link CAttribute::ManageArrayOffset() method} to manage
the list of predicates.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant
{@link kAPI_OPT_PREDICATES kAPI_OPT_PREDICATES}.</p>]]></long-description>
          <tag line="356" name="param" description="Value or index." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="356" name="param" description="Operation." type="mixed" variable="$theOperation">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="356" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="356" name="access" description="public"/>
          <tag line="356" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="356" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="356" name="see" description="\kAPI_OPT_PREDICATES" refers="\kAPI_OPT_PREDICATES"/>
        </docblock>
        <argument line="356">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$theOperation</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="394" package="MyWrapper\Wrappers">
        <name>PredicatesSelector</name>
        <full_name>PredicatesSelector</full_name>
        <docblock line="394">
          <description><![CDATA[Manage predicates list.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the predicates
{@link kAPI_OPT_PREDICATES_INC selector}, it uses the standard accessor
{@link CAttribute::ManageArrayOffset() method} to manage the predicates selector.</p>

<p>Note that the only values that can be set are 1 or 0, boolean values are not
supported, this method will also handle Y/N y/n and string 1/0 values.</p>

<p>For a more thorough reference of how this method works, please consult the
{@link CAttribute::ManageArrayOffset() CAttribute::ManageArrayOffset} method, in
which the second parameter will be the constant
{@link kAPI_OPT_PREDICATES kAPI_OPT_PREDICATES}.</p>]]></long-description>
          <tag line="394" name="param" description="Value or operation." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="394" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="394" name="access" description="public"/>
          <tag line="394" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="394" name="uses" description="\CAttribute::ManageArrayOffset()" refers="\CAttribute::ManageArrayOffset()"/>
          <tag line="394" name="see" description="\kAPI_OPT_PREDICATES" refers="\kAPI_OPT_PREDICATES"/>
        </docblock>
        <argument line="394">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="451" package="MyWrapper\Wrappers">
        <name>Direction</name>
        <full_name>Direction</full_name>
        <docblock line="451">
          <description><![CDATA[Manage edges direction.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_OP_GET_RELS edges} direction, it
accepts a string which represents either the relationship
{@link kAPI_OPT_DIRECTION direction}, or the requested operation:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter:
 <ul>
    <li><i>{@link kAPI_DIRECTION_IN kAPI_DIRECTION_IN}</i>: Incoming relationships.
    <li><i>{@link kAPI_DIRECTION_OUT kAPI_DIRECTION_OUT}</i>: Outgoing
        relationships.
    <li><i>{@link kAPI_DIRECTION_ALL kAPI_DIRECTION_ALL}</i>: Both incoming and
        outgoing relationships.
 </ul>
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="451" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="451" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="451" name="access" description="public"/>
          <tag line="451" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="451" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="451" name="see" description="\kAPI_OPT_DIRECTION" refers="\kAPI_OPT_DIRECTION"/>
        </docblock>
        <argument line="451">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="451">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="512" package="MyWrapper\Wrappers">
        <name>Levels</name>
        <full_name>Levels</full_name>
        <docblock line="512">
          <description><![CDATA[Manage traversal depts level.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_OPT_LEVELS levels} of depth in
graph {@link kAPI_OP_GET_RELS traversals}, it accepts an integer which represents
the number of levels to traverse; if the value is negative, all levels will be
traversed.</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="512" name="param" description="Value or operation." type="integer" variable="$theValue">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="512" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="512" name="access" description="public"/>
          <tag line="512" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="512" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="512" name="see" description="\kAPI_OPT_LEVELS" refers="\kAPI_OPT_LEVELS"/>
        </docblock>
        <argument line="512">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="512">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="classes/CWrapper.inc.php" hash="ae2f2ca8b7bea123c6fa6e536a8f9091" package="Default">
    <constant namespace="" line="33" package="Default">
      <name>kAPI_OP_HELP</name>
      <full_name>\kAPI_OP_HELP</full_name>
      <value><![CDATA['@HELP']]></value>
      <docblock line="33">
        <description><![CDATA[HELP web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the HELP web-service operation, which returns the list
of supported operations and options.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="41" package="Default">
      <name>kAPI_OP_PING</name>
      <full_name>\kAPI_OP_PING</full_name>
      <value><![CDATA['@PING']]></value>
      <docblock line="41">
        <description><![CDATA[PING web-service.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the PING web-service operation, which returns a status
response.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="57" package="Default">
      <name>kAPI_FORMAT</name>
      <full_name>\kAPI_FORMAT</full_name>
      <value><![CDATA[':@format']]></value>
      <docblock line="57">
        <description><![CDATA[Web-service format.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the web-service request and response format.</p>

<p>This applies both to the request and the response; if the parameter is not provided we
assume the {@link kTYPE_JSON JSON} format.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="66" package="Default">
      <name>kAPI_OPERATION</name>
      <full_name>\kAPI_OPERATION</full_name>
      <value><![CDATA[':@operation']]></value>
      <docblock line="66">
        <description><![CDATA[Web-service operation.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the web-service operation.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="80" package="Default">
      <name>kAPI_OPT_LOG_REQUEST</name>
      <full_name>\kAPI_OPT_LOG_REQUEST</full_name>
      <value><![CDATA[':@log-request']]></value>
      <docblock line="80">
        <description><![CDATA[Log reauest.]]></description>
        <long-description><![CDATA[<p>If the value of this tag resolves to <i>TRUE</i>, the request will be logged in the
response.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="89" package="Default">
      <name>kAPI_OPT_LOG_TRACE</name>
      <full_name>\kAPI_OPT_LOG_TRACE</full_name>
      <value><![CDATA[':@log-trace']]></value>
      <docblock line="89">
        <description><![CDATA[Trace errors.]]></description>
        <long-description><![CDATA[<p>If the value of this tag resolves to <i>TRUE</i>, eventual errors will bare the trace.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="113" package="Default">
      <name>kAPI_REQ_STAMP</name>
      <full_name>\kAPI_REQ_STAMP</full_name>
      <value><![CDATA[':@time-request']]></value>
      <docblock line="113">
        <description><![CDATA[Web-service request time stamp.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the request time stamp, it should contain the timestamp
in which the client sent the request; if present, the service will return the following
time stamps:</p>

<ul>
<li><i>{@link kAPI_REC_STAMP kAPI_REC_STAMP}</i>: Received time stamp.
<li><i>{@link kAPI_PARSE_STAMP kAPI_PARSE_STAMP}</i>: Parsed time stamp.
<li><i>{@link kAPI_RES_STAMP kAPI_RES_STAMP}</i>: Response time stamp.
</ul>

<p>These values are provided as floating point numbers such as the result of the
<i>gettimeofday( true )</i> function.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="125" package="Default">
      <name>kAPI_REC_STAMP</name>
      <full_name>\kAPI_REC_STAMP</full_name>
      <value><![CDATA[':@time-received']]></value>
      <docblock line="125">
        <description><![CDATA[Web-service received time stamp.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the time stamp in which the request was received.</p>

<p>These values are provided as floating point numbers such as the result of the
<i>gettimeofday( true )</i> function.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="137" package="Default">
      <name>kAPI_PARSE_STAMP</name>
      <full_name>\kAPI_PARSE_STAMP</full_name>
      <value><![CDATA[':@time-parsed']]></value>
      <docblock line="137">
        <description><![CDATA[Web-service parsed time stamp.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the time stamp in which the request was parsed.</p>

<p>These values are provided as floating point numbers such as the result of the
<i>gettimeofday( true )</i> function.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="149" package="Default">
      <name>kAPI_RES_STAMP</name>
      <full_name>\kAPI_RES_STAMP</full_name>
      <value><![CDATA[':@time-sent']]></value>
      <docblock line="149">
        <description><![CDATA[Web-service response time stamp.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the time stamp in which the response was sent.</p>

<p>These values are provided as floating point numbers such as the result of the
<i>gettimeofday( true )</i> function.</p>

<p>Cardinality: one or zero.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="160" package="Default">
      <name>kAPI_DATA_REQUEST</name>
      <full_name>\kAPI_DATA_REQUEST</full_name>
      <value><![CDATA['_request']]></value>
      <docblock line="160">
        <description><![CDATA[Request.]]></description>
        <long-description><![CDATA[<p>This tag holds the request block.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="167" package="Default">
      <name>kAPI_DATA_STATUS</name>
      <full_name>\kAPI_DATA_STATUS</full_name>
      <value><![CDATA['_status']]></value>
      <docblock line="167">
        <description><![CDATA[Status.]]></description>
        <long-description><![CDATA[<p>This tag holds the operation status block.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="176" package="Default">
      <name>kAPI_DATA_TIMING</name>
      <full_name>\kAPI_DATA_TIMING</full_name>
      <value><![CDATA['_timing']]></value>
      <docblock line="176">
        <description><![CDATA[Timing.]]></description>
        <long-description><![CDATA[<p>This offset represents the collector tag for request timing parameters.</p>

<p><i>Note: this is a <b>reserved offset tag</b>.</i></p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="183" package="Default">
      <name>kAPI_DATA_RESPONSE</name>
      <full_name>\kAPI_DATA_RESPONSE</full_name>
      <value><![CDATA['_response']]></value>
      <docblock line="183">
        <description><![CDATA[Response.]]></description>
        <long-description><![CDATA[<p>This tag holds the response block.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJzVV11u20YQfrZOMchLEsORZBXog6MqJhwmdWBZLEXDyJOwolbSQhSX3V3KcAsfoXfoYdp7dYZLMqRMO45TK7BgyNRy55u/b2Z2+++SZdJqdfZ/eZpPC/b3Gj/71Tcnl4olCVdtEYdtNKh51y35pzF5v9MCDEim+s/jSMQrKOwrH25gxuciFkbIWLdxJ20OlkLDXEQcQhkbJmKND+u1jKubIdV8BtNrMEsOd8ITXBgxXWIfJyxcsQXfG17ne7JVnU6LF/myLgRYapZS7e0NRbSS4LTh379Xci7++Qv667amx/A4XAim2lItBpnIBsXRxr3DdrcL3Z863Z87ve7hYZ6DHq32ep1uj1Z7uNp5YuK8dz84F2cBjDzXd4LT0Tm45xfD/Hm8Qz7kdIBf3TMPrvj0jeZqI0KeZweyzOMf5dSwBf5nBhRPFNc8NnZ9WxYkZosRJw7gainCJQqYVMV2dyS0IWQ5B50miVQGWVNKaGAx/Szp12llFOOv4MXK8U4nI29C+l4cUGheHtPzS3j9tnTEOz3/+FhHtmXvdoSBNsykRElc0wkay++wlkALa+m5sPZpUlpjl+cTv4LPEDgfxzttM0U2LivBnEu1ZuZb8lFNheK/p1ybjB5FxJsgsVVEgmuYSrMEIzOcqqz9beXfgphnCwlTbM0N9ilEiKWBRMmNmCExrzghY7tK17za2FbBZ8+dfBpj5dLXzZYpJ0zNRMwiYa6PQMaN3Pgw8odOkFPj6NgC1Lh82UTFxwbwFsBDbCz7U2YmWlmi7JDGIy/rkE0k3g2Lz+QCI8uIQ0XwTi1xNixKObUyQ9mgNGD4ZbRBAiL3+mIQ+BduvyMGBzUiXokogin2QrlYIMlETG+3e0lTjkAq+IMr2ZyrYHI2+jjx3d8u3HFGLEwYqniTq61xK1AMScGVkko/3im+Qa6lLMqBcseYsrViSMf3uBL4zolbcSQD3CHzgtMhjYQfx7zLhg5oBLYiHD/r5FtawW3pAxAG9FKm0aw41lkE3JFtIGhcs5OP3oTYWWOUoa8KZtZGc2WW54XJGR3szMzW5zKK5JWIFwT9xRJ9lDvST6PsvNaPxAB5VvRaooTvnkzGgTP0tn7eEBGPwOchFxuspXp0mpA8xx+7VazKQo7mMaUfhOW747pV4y2r8kFVR4J+xzpqk4eBszWH0wsrp5w9DM/ckcRuGy8gkQKDHqfrKZ5k8eCEGWFFYnUaGVuuWQ9BExfckEY5n7HrV1iGWM6vySKYp3F43wy4ryixr1jnillAKhp7S521jYl5KG2/SNWpWHZSjEKhov38InrSGFHrzp0hTZrY+X8G1Cp4duGs1HEtoNadexjaWKTfH9AcliJK259dPMtuVosmubLDEYxGeHgldn/cHca3lVHjBJFhKaNZfbZOIxmumiL53gmc2rls0tQ2x9mV8h495eE7v31+RSHmLrgY2+RNrET9CCjWyLSaPjmfa36L4iGObR4apArZgxeV6mkiI2txfyqtR06eS8OP7BmS7mXQnw4IVNEwyPUgXL8zHbSJqnd5Yc9guRdWX80Lf+vI3JifvBS/liBLtSJDVsgqezdo/QfpZdt1</source>
  </file>
  <file path="classes/CWrapper.php" hash="8b6fadf47e53255ca301f6982a6c8a81" package="Default">
    <include line="28" type="Require Once" package="Default">
      <name/>
      <docblock line="28">
        <description><![CDATA[Ancestor.]]></description>
        <long-description><![CDATA[<p>This include file contains the parent class definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name/>
      <docblock line="35">
        <description><![CDATA[Types.]]></description>
        <long-description><![CDATA[<p>This include file contains all data type definitions.</p>]]></long-description>
      </docblock>
    </include>
    <include line="42" type="Require Once" package="Default">
      <name/>
      <docblock line="42">
        <description><![CDATA[Local definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all local definitions to this class.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="189" package="MyWrapper\Wrappers">
      <extends>CStatusObject</extends>
      <name>CWrapper</name>
      <full_name>\CWrapper</full_name>
      <docblock line="189">
        <description><![CDATA[Wrapper.]]></description>
        <long-description><![CDATA[<p>This class represents a web-services wrapper server, it is the ancestor of web-service
classes in this library.</p>

<p>Wrappers are objects that respond to standard web calls and receive parameters in both
<i>GET</i> and <i>POST</i> parameters, the main two parameters handled by this class are:</p>

<ul>
<li><i>{@link kAPI_FORMAT kAPI_FORMAT}</i> (required): The data format of the response,
     it will be returned as:
 <ul>
    <li><i>{@link kTYPE_PHP kTYPE_PHP}</i>: A PHP-serialised string.
    <li><i>{@link kTYPE_JSON kTYPE_JSON}</i>: A JSON-serialised string.
 </ul>
<li><i>{@link kAPI_OPERATION kAPI_OPERATION}</i> (required): The requested operation,
    each class will implement specialised handlers, this class only implements the
    following two operations:
 <ul>
    <li><i>{@link kAPI_OP_HELP kAPI_OP_HELP}</i>: A <i>LIST-OP</i> command, this
        command will return in the {@link kAPI_DATA_RESPONSE response} section the list
        of supported operations as an array structured as follows:
     <ul>
        <li><i>index</i>: The index will be the operation code.
        <li><i>value</i>: The value will be the operation description.
     </ul>
    <li><i>{@link kAPI_OP_PING kAPI_OP_PING}</i>: A <i>PING</i> command, this can be
        used to check if a service is alive.
 </ul>
</ul>

<p>If both the above parameters are present, the service will return an array constituted by
the following three sections:</p>

<ul>
<li><i>{@link kAPI_DATA_STATUS kAPI_DATA_STATUS}</i>: <i>Operation status</i>.
    This section is returned by default and will inform on the status of the requested
    operation. It consists of an array containing the following elements:
 <ul>
    <li><i>{@link kTAG_STATUS kTAG_STATUS}</i>: <i>Response status</i>.
        This element will be returned by default regardless of the operation outcome.
        This corresponds to the severity of the response and it can take the following
        values:
     <ul>
        <li><i>{@link kMESSAGE_TYPE_IDLE kMESSAGE_TYPE_IDLE}</i>: This is the status of
            the web-service before any operation has been executed, or when the
            operation was successful; this is the response of a successful
            {@link kAPI_OP_PING ping} request.
        <li><i>{@link kMESSAGE_TYPE_NOTICE kMESSAGE_TYPE_NOTICE}</i>: The operation was
            successful and a notice message was returned.
        <li><i>{@link kMESSAGE_TYPE_MESSAGE kMESSAGE_TYPE_MESSAGE}</i>: The operation
            was successful and a message was returned.
        <li><i>{@link kMESSAGE_TYPE_WARNING kMESSAGE_TYPE_WARNING}</i>: The operation
            was successful but a warning was raised.
        <li><i>{@link kMESSAGE_TYPE_ERROR kMESSAGE_TYPE_ERROR}</i>: The operation failed
            because of an error.
        <li><i>{@link kMESSAGE_TYPE_FATAL kMESSAGE_TYPE_FATAL}</i>: The operation failed
            because of a fatal error, this will generally mean that the web-service is
            not operational.
        <li><i>{@link kMESSAGE_TYPE_BUG kMESSAGE_TYPE_BUG}</i>: The operation failed
            because of a bug, the developers should be informed of this kind of errors.
     </ul>
    <li><i>{@link kTAG_CODE kTAG_CODE}</i>: <i>Status code</i>.
        This element will be returned by default regardless of the operation outcome.
        It corresponds to the error code; {@link kERROR_OK zero} means no error.
    <li><i>{@link kTAG_DESCRIPTION kTAG_DESCRIPTION}</i>: <i>Status message</i>.
        The response message from the operation, this element is used to return
        informative messages or to return error messages when the service fails. It will
        generally be formatted as an array structured as follows:
     <ul>
        <li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: The data type of the message, it will be
            a {@link kTYPE_STRING string} in general.
        <li><i>{@link kTAG_LANGUAGE kTAG_LANGUAGE}</i>: The language ISO 639 2
            character code in which the message is expressed in.
        <li><i>{@link kTAG_DATA kTAG_DATA}</i>: The actual message data contents.
     </ul>
    <li><i>{@link kAPI_AFFECTED_COUNT kAPI_AFFECTED_COUNT}</i>: <i>Record count</i>.
        The total number of elements affected by the operation. This tag will only be
        used by derived classes returning data elements.
    <li><i>{@link kTAG_ANNOTATION kTAG_ANNOTATION}</i>: <i>Attachments</i>.
            A list of key/value pairs containing information relevant to the operation
            response. For instance, if a series of parameters are required and were not
            provided, this could list them.
 </ul>
<li><i>{@link kAPI_DATA_REQUEST kAPI_DATA_REQUEST}</i>: <i>Service request</i>.
    This section will return the actual request provided to the service, this can be
    used for debugging purposes and will only occur if the optional
    {@link kAPI_OPT_LOG_REQUEST kAPI_OPT_LOG_REQUEST} parameter has been set to 1.
<li><i>{@link kAPI_DATA_TIMING kAPI_DATA_TIMING}</i>: <i>Timers</i>.
    This section holds timing information, it will be returned only if you provide the
    time of day [<i>gettimeofday( TRUE )</i>] in the
    {@link kAPI_REQ_STAMP kAPI_REQ_STAMP} parameter. This section is structured as
    follows:
 <ul>
    <li><i>{@link kAPI_REQ_STAMP kAPI_REQ_STAMP}</i>: Request time stamp, the time in
        which the request was sent; this is the same value sent by the caller in the
        {@link kAPI_REQ_STAMP kAPI_REQ_STAMP} parameter.
    <li><i>{@link kAPI_PARSE_STAMP kAPI_PARSE_STAMP}</i>: Parse time stamp, the time in
        which the service finished parsing the request.
    <li><i>{@link kAPI_RES_STAMP kAPI_RES_STAMP}</i>: Response time stamp, the time in
        which the response was sent.
 </ul>
<li><i>{@link kAPI_DATA_RESPONSE kAPI_DATA_RESPONSE}</i>: Response, this section will
    hold the operation response, in this class we only respond to
    {@link kAPI_OP_HELP operations} list requests.
</ul>

<p>Besides the {@link kAPI_FORMAT format} and {@link kAPI_OPERATION operation} parameters
described in the first section, we have three other optional parameters that can be used
to receive specific information sections in the response:</p>

<ul>
<li><i>{@link kAPI_OPT_LOG_REQUEST kAPI_OPT_LOG_REQUEST}</i>: Log the request, if the
    value of this parameter is 1, the response will contain the received request in the
    {@link kAPI_DATA_REQUEST request} section.
<li><i>{@link kAPI_OPT_LOG_TRACE kAPI_OPT_LOG_TRACE}</i>: Trace exceptions, if the
    value of this parameter is 1, in the case of an error that triggered an exception,
    the error response will also include the call trace.
<li><i>{@link kAPI_REQ_STAMP kAPI_REQ_STAMP}</i>: This parameter should hold the
    timestamp [<i>gettimeofday( TRUE )</i>] in which the client has sent the request,
    if provided, the service will return the timing information in the
    {@link kAPI_DATA_TIMING timing} section.
</ul>

<p>The parameters are expected either in <i>GET</i> or <i>POST</i>.</p>

<p>If either the {@link kAPI_FORMAT format} or the {@link kAPI_OPERATION operation}
parameters are omitted from the request, the service will return an empty response; this
is to prevent unnecessary traffic.</p>

<p>Instances of this class can be considered server objects, and can be implemented with
this simple code snippet:</p>

<pre><code>$server = new CWrapper();
$server->HandleRequest();
</code></pre>

<p>An example of this class implementation can be found in the
{@link Wrapper.php Wrapper.php} source file.</p>]]></long-description>
        <tag line="189" name="package" description="MyWrapper"/>
        <tag line="189" name="subpackage" description="Wrappers"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="198" namespace="" package="Default">
        <name>$mReceivedStamp</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="198">
          <description><![CDATA[Reception time-stamp.]]></description>
          <long-description><![CDATA[<p>This data member holds the request reception time stamp.</p>]]></long-description>
          <tag line="198" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="248" package="MyWrapper\Wrappers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="248">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor will set-up the environment and parse the request.
The workflow is as follows:</p>

<ul>
<li><i>Check required elements</i>: The method will check if all required elements
    of the request are there, if that is not the case it will just exit.
<li><i>Init {@link _InitStatus() status}</i>: The response status will be
    initialised to the {@link kMESSAGE_TYPE_IDLE idle} state.
<li><i>Init {@link _InitOptions() options}</i>: Service options will be initialised.
<li><i>Init {@link _InitResources() resources}</i>: Eventual resources are
    initialised.
<li><i>{@link _ParseRequest() Parse} request</i>: The request is parsed.
<li><i>{@link _FormatRequest() Format} request</i>: The request is normalised if
    necessary.
<li><i>{@link _ValidateRequest() Validate} request</i>: The request is validated.
</ul>

<p>This protected interface should be overloaded by derived classes to implement custom
services.</p>]]></long-description>
          <tag line="248" name="access" description="public"/>
          <tag line="248" name="uses" description="\_InitStatus()" refers="\_InitStatus()"/>
          <tag line="248" name="uses" description="\_InitOptions()" refers="\_InitOptions()"/>
          <tag line="248" name="uses" description="\_InitResources()" refers="\_InitResources()"/>
          <tag line="248" name="uses" description="\_ParseRequest()" refers="\_ParseRequest()"/>
          <tag line="248" name="uses" description="\_FormatRequest()" refers="\_FormatRequest()"/>
          <tag line="248" name="uses" description="\_ValidateRequest()" refers="\_ValidateRequest()"/>
          <tag line="248" name="uses" description="\_Exception2Status()" refers="\_Exception2Status()"/>
          <tag line="248" name="uses" description="\_EncodeResponse()" refers="\_EncodeResponse()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="341" package="MyWrapper\Wrappers">
        <name>HandleRequest</name>
        <full_name>HandleRequest</full_name>
        <docblock line="341">
          <description><![CDATA[Handle the request.]]></description>
          <long-description><![CDATA[<p>This method will handle the request.</p>]]></long-description>
          <tag line="341" name="access" description="public"/>
          <tag line="341" name="uses" description="\_HandleRequest()" refers="\_HandleRequest()"/>
          <tag line="341" name="uses" description="\_Exception2Status()" refers="\_Exception2Status()"/>
          <tag line="341" name="uses" description="\_EncodeResponse()" refers="\_EncodeResponse()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="406" package="MyWrapper\Wrappers">
        <name>_InitStatus</name>
        <full_name>_InitStatus</full_name>
        <docblock line="406">
          <description><![CDATA[Initialise status.]]></description>
          <long-description><![CDATA[<p>This method is responsible for initialising the {@link kAPI_DATA_STATUS status}
section, derived classes may overload this method if they need to handle other
states.</p>

<p>In this class we set the status to {@link kMESSAGE_TYPE_IDLE idle} and reset the
status {@link kTAG_CODE code}.</p>]]></long-description>
          <tag line="406" name="access" description="protected"/>
          <tag line="406" name="see" description="\kAPI_DATA_STATUS" refers="\kAPI_DATA_STATUS"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="462" package="MyWrapper\Wrappers">
        <name>_InitOptions</name>
        <full_name>_InitOptions</full_name>
        <docblock line="462">
          <description><![CDATA[Initialise options.]]></description>
          <long-description><![CDATA[<p>This method is responsible for parsing and setting all default and provided options,
derived classes should overload this method to handle custom options.</p>

<p>In this class we initialise the {@link kAPI_DATA_REQUEST request} and
{@link kAPI_DATA_TIMING timer} sections if required.</p>]]></long-description>
          <tag line="462" name="access" description="protected"/>
          <tag line="462" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="506" package="MyWrapper\Wrappers">
        <name>_InitResources</name>
        <full_name>_InitResources</full_name>
        <docblock line="506">
          <description><![CDATA[Initialise resources.]]></description>
          <long-description><![CDATA[<p>In derived classes this should be the method that initialises the data store
resources, in this class we have no resources.</p>]]></long-description>
          <tag line="506" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="543" package="MyWrapper\Wrappers">
        <name>_ParseRequest</name>
        <full_name>_ParseRequest</full_name>
        <docblock line="543">
          <description><![CDATA[Parse request.]]></description>
          <long-description><![CDATA[<p>This method should be used to parse the request, check the request elements and make
any necessary adjustments before the request is {@link _ValidateRequest() validated}.</p>

<p>This is also where the relevant request elements will be logged to the relative
response sections.</p>

<p>The method is called by the {@link __construct() constructor} and should be
overloaded to handle derived classes custom elements.</p>

<p>In this class we handle the {@link kAPI_FORMAT format},
{@link kAPI_OPERATION operation} and {@link kAPI_DATA_TIMING timing} elements.</p>]]></long-description>
          <tag line="543" name="access" description="protected"/>
          <tag line="543" name="uses" description="\_ParseFormat()" refers="\_ParseFormat()"/>
          <tag line="543" name="uses" description="\_ParseOperation()" refers="\_ParseOperation()"/>
          <tag line="543" name="uses" description="\_ParseTiming()" refers="\_ParseTiming()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="582" package="MyWrapper\Wrappers">
        <name>_FormatRequest</name>
        <full_name>_FormatRequest</full_name>
        <docblock line="582">
          <description><![CDATA[Format request.]]></description>
          <long-description><![CDATA[<p>This method should perform any needed formatting before the request will be handled.</p>

<p>In this class we do nothing.</p>]]></long-description>
          <tag line="582" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="620" package="MyWrapper\Wrappers">
        <name>_ValidateRequest</name>
        <full_name>_ValidateRequest</full_name>
        <docblock line="620">
          <description><![CDATA[Validate request.]]></description>
          <long-description><![CDATA[<p>This method should check that the request is valid and that all required parameters
have been sent.</p>

<p>In this class we check the {@link kAPI_FORMAT format} and
{@link kAPI_OPERATION operation} codes (their presence is checked by the
{@link __construct() constructor}.</p>]]></long-description>
          <tag line="620" name="access" description="protected"/>
          <tag line="620" name="uses" description="\_ValidateFormat()" refers="\_ValidateFormat()"/>
          <tag line="620" name="uses" description="\_ValidateOperation()" refers="\_ValidateOperation()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="667" package="MyWrapper\Wrappers">
        <name>_ParseFormat</name>
        <full_name>_ParseFormat</full_name>
        <docblock line="667">
          <description><![CDATA[Parse format.]]></description>
          <long-description><![CDATA[<p>This method will parse the request format.</p>]]></long-description>
          <tag line="667" name="access" description="protected"/>
          <tag line="667" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="696" package="MyWrapper\Wrappers">
        <name>_ParseOperation</name>
        <full_name>_ParseOperation</full_name>
        <docblock line="696">
          <description><![CDATA[Parse operation.]]></description>
          <long-description><![CDATA[<p>This method will parse the request operation.</p>]]></long-description>
          <tag line="696" name="access" description="protected"/>
          <tag line="696" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="725" package="MyWrapper\Wrappers">
        <name>_ParseTiming</name>
        <full_name>_ParseTiming</full_name>
        <docblock line="725">
          <description><![CDATA[Parse timing.]]></description>
          <long-description><![CDATA[<p>This method will parse the request timers.</p>]]></long-description>
          <tag line="725" name="access" description="protected"/>
          <tag line="725" name="see" description="\kAPI_DATA_REQUEST" refers="\kAPI_DATA_REQUEST"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="779" package="MyWrapper\Wrappers">
        <name>_ValidateFormat</name>
        <full_name>_ValidateFormat</full_name>
        <docblock line="779">
          <description><![CDATA[Validate request format.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided {@link kAPI_FORMAT format}
parameter is valid.</p>]]></long-description>
          <tag line="779" name="access" description="protected"/>
          <tag line="779" name="see" description="\kTYPE_PHP" refers="\kTYPE_PHP"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="841" package="MyWrapper\Wrappers">
        <name>_ValidateOperation</name>
        <full_name>_ValidateOperation</full_name>
        <docblock line="841">
          <description><![CDATA[Validate request operation.]]></description>
          <long-description><![CDATA[<p>This method can be used to check whether the provided
{@link kAPI_OPERATION operation} parameter is valid.</p>]]></long-description>
          <tag line="841" name="access" description="protected"/>
          <tag line="841" name="see" description="\kAPI_OP_HELP" refers="\kAPI_OP_HELP"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="913" package="MyWrapper\Wrappers">
        <name>_HandleRequest</name>
        <full_name>_HandleRequest</full_name>
        <docblock line="913">
          <description><![CDATA[Handle request.]]></description>
          <long-description><![CDATA[<p>This method will handle the request.</p>]]></long-description>
          <tag line="913" name="access" description="protected"/>
          <tag line="913" name="uses" description="\_Handle_ListOp()" refers="\_Handle_ListOp()"/>
          <tag line="913" name="see" description="\kAPI_OP_HELP" refers="\kAPI_OP_HELP"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="956" package="MyWrapper\Wrappers">
        <name>_Handle_ListOp</name>
        <full_name>_Handle_ListOp</full_name>
        <docblock line="956">
          <description><![CDATA[Handle {@link kAPI_OP_HELP list} operations request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_HELP kAPI_OP_HELP} request, which
should return the list of supported operations.</p>]]></long-description>
          <tag line="956" name="param" description="Receives operations list." type="\reference" variable="$theList">
            <type by_reference="false">\reference</type>
          </tag>
          <tag line="956" name="access" description="protected"/>
        </docblock>
        <argument line="956">
          <name>$theList</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="987" package="MyWrapper\Wrappers">
        <name>_Handle_Ping</name>
        <full_name>_Handle_Ping</full_name>
        <docblock line="987">
          <description><![CDATA[Handle {@link kAPI_OP_PING ping} request.]]></description>
          <long-description><![CDATA[<p>This method will handle the {@link kAPI_OP_PING kAPI_OP_PING} request, which can be
used to check if a service is alive.</p>

<p>The ping request will return by default the {@link kAPI_DATA_STATUS status} block.</p>]]></long-description>
          <tag line="987" name="access" description="protected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1026" package="MyWrapper\Wrappers">
        <name>_OffsetManage</name>
        <full_name>_OffsetManage</full_name>
        <docblock line="1026">
          <description><![CDATA[Manage offset.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage elements within offsets, in other words, it can be
used to manage elements within an offset:</p>

<ul>
<li><b>$theBlock</b>: The main offset.
<li><b>$theElement</b>: The offset within the main offset.
<li><b>$theValue</b>: The new value or the operation:
 <ul>
    <li><i>NULL</i>: Retrieve the element in the block.
    <li><i>FALSE</i>: Delete the element from the block.
    <li><i>other</i>: All other data types are interpreted as a new element.
 </ul>
</ul>]]></long-description>
          <tag line="1026" name="param" description="Object block." type="string" variable="$theBlock">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1026" name="param" description="Object block element." type="string" variable="$theElement">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1026" name="param" description="Element value." type="mixed" variable="$theValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1026" name="access" description="protected"/>
        </docblock>
        <argument line="1026">
          <name>$theBlock</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1026">
          <name>$theElement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1026">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1174" package="MyWrapper\Wrappers">
        <name>_Exception2Status</name>
        <full_name>_Exception2Status</full_name>
        <docblock line="1174">
          <description><![CDATA[Set status from exception.]]></description>
          <long-description><![CDATA[<p>This method can be used to set the service status according to an exception:</p>

<ul>
<li><i>{@link CException::Severity() Severity}</i>: This value will be set as the
    status {@link kTAG_STATUS status}.
<li><i>{@link Exception::getCode() Code}</i>: This value will be set as the
    status {@link kTAG_CODE code}.
<li><i>{@link Exception::getMessage() Message}</i>: This value will be set in the
    status {@link kTAG_DESCRIPTION description} field as a language block.
<li><i>{@link Exception::getFile() File}</i>: This value will be set in the status
    {@link kTAG_ANNOTATION annotations}.
<li><i>{@link Exception::getLine() Line}</i>: This value will be set in the status
    {@link kTAG_ANNOTATION annotations}.
<li><i>{@link Exception::getTrace() Trace}</i>: This value will be set in the status
    {@link kTAG_ANNOTATION annotations}.
<li><i>{@link CException::Reference() References}</i>: These valuew will be set in
    the status {@link kTAG_ANNOTATION annotations}.
</ul>]]></long-description>
          <tag line="1174" name="param" description="Exception." type="\Exception" variable="$theException">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="1174" name="access" description="protected"/>
        </docblock>
        <argument line="1174">
          <name>$theException</name>
          <default><![CDATA[]]></default>
          <type>Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="1268" package="MyWrapper\Wrappers">
        <name>_EncodeResponse</name>
        <full_name>_EncodeResponse</full_name>
        <docblock line="1268">
          <description><![CDATA[Encode response.]]></description>
          <long-description><![CDATA[<p>This method will return the encoded response string.</p>]]></long-description>
          <tag line="1268" name="access" description="protected"/>
          <tag line="1268" name="return" description="" type="string|NULL">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source></source>
  </file>
  <file path="classes/CWrapperClient.php" hash="b8d1494ca714d0037a082914878c52e1" package="Default">
    <include line="27" type="Require Once" package="Default">
      <name/>
      <docblock line="27">
        <description><![CDATA[Server definitions.]]></description>
        <long-description><![CDATA[<p>This include file contains all definitions of the server object.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="" line="65" package="MyWrapper\Wrappers">
      <extends>CStatusObject</extends>
      <name>CWrapperClient</name>
      <full_name>\CWrapperClient</full_name>
      <docblock line="65">
        <description><![CDATA[Wrapper client.]]></description>
        <long-description><![CDATA[<p>This class represents a web-services wrapper client, it facilitates the job of requesting
information from servers derived from the {@link CWrapper CWrapper} class.</p>

<p>This class supports the following properties:</p>

<ul>
<li><i>{@link Url() URL}</i>: This element represents the web-service URL, and it is
    stored in the {@link kOFFSET_URL kOFFSET_URL} offset.
<li><i>{@link Operation() Operation}</i>: This element represents the web-service
    requested operation, it is stored in the {@link kAPI_OPERATION kAPI_OPERATION}
    offset.
<li><i>{@link Format() Format}</i>: This element represents the web-service parameters
    and response format, it is stored in the {@link kAPI_FORMAT kAPI_FORMAT} offset.
<li><i>{@link Stamp() Stamp}</i>: This element represents a switch to turn on and off
    timing information from the web service, it is stored in the
    {@link kAPI_REQ_STAMP kAPI_REQ_STAMP} offset.
<li><i>Log {@link LogRequest() request}</i>: This element represents a switch to turn on
    and off logging the request: if on, the request will be returned by the web-service,
    it is stored in the {@link kAPI_OPT_LOG_REQUEST kAPI_OPT_LOG_REQUEST} offset.
<li><i>Log {@link LogTrace() trace}</i>: This element represents a switch to turn on
    and off tracing exceptions: if on, any exception will also hold a trace, it is
    stored in the {@link kAPI_OPT_LOG_TRACE kAPI_OPT_LOG_TRACE} offset.
</ul>

<p>Objects of this class require at least the {@link Url() URL} {@link kOFFSET_URL offset},
{@link Operation() operation} {@link kAPI_OPERATION offset} and the
{@link Format() format} {@link kAPI_FORMAT offset} to be set if they expect to have an
{@link _IsInited() initialised} {@link kFLAG_STATE_INITED status}, which is necessary
to send {@link Request() requests} to web-services.</p>]]></long-description>
        <tag line="65" name="package" description="MyWrapper"/>
        <tag line="65" name="subpackage" description="Wrappers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="MyWrapper\Wrappers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="97">
          <description><![CDATA[Instantiate class.]]></description>
          <long-description><![CDATA[<p>The constructor will initialise the object depending on the provided parameter:</p>

<ul>
<li><i>NULL</i>: An empty object.
<li><i>array</i>: The array elements will become the object properties.
<li><i>string</i>: Any other value will be converted to string and will represent
    the web-service URL.
</ul>]]></long-description>
          <tag line="97" name="param" description="Web-service URL or object data." type="string" variable="$theData">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="access" description="public"/>
        </docblock>
        <argument line="97">
          <name>$theData</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="164" package="MyWrapper\Wrappers">
        <name>Url</name>
        <full_name>Url</full_name>
        <docblock line="164">
          <description><![CDATA[Manage URL.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kOFFSET_URL URL}, it accepts a parameter
which represents either the URL or the requested operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="164" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="164" name="access" description="public"/>
          <tag line="164" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="164" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="164" name="see" description="\kOFFSET_URL" refers="\kOFFSET_URL"/>
        </docblock>
        <argument line="164">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="217" package="MyWrapper\Wrappers">
        <name>Operation</name>
        <full_name>Operation</full_name>
        <docblock line="217">
          <description><![CDATA[Manage operation.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_OPERATION operation}, it accepts a
parameter which represents either the web-service operation code or this method
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>This method will check whether the provided operation is supported, if this is not
the case, it will raise an exception. Derived classes should first check their
specific operations, if not matched, they should pass the parameter to the parent
method. In this class we support the following operations:</p>

<ul>
<li><i>{@link kAPI_OP_HELP kAPI_OP_HELP}</i>: HELP web-service operation, which
    returns the list of supported operations and options.
<li><i>{@link kAPI_OP_PING kAPI_OP_PING}</i>: PING web-service operation, which
    returns a status response.
</ul>]]></long-description>
          <tag line="217" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="217" name="access" description="public"/>
          <tag line="217" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="217" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="217" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="217" name="see" description="\kAPI_OPERATION" refers="\kAPI_OPERATION"/>
          <tag line="217" name="see" description="\kAPI_OP_HELP" refers="\kAPI_OP_HELP"/>
        </docblock>
        <argument line="217">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="217">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="296" package="MyWrapper\Wrappers">
        <name>Format</name>
        <full_name>Format</full_name>
        <docblock line="296">
          <description><![CDATA[Manage format.]]></description>
          <long-description><![CDATA[<p>This method can be used to manage the {@link kAPI_FORMAT format} in which both the
parameters are sent and the response is returned from the web-service. It accepts a
parameter which represents either the web-service format code or this method
operation, depending on its value:</p>

<ul>
<li><i>NULL</i>: Return the current value.
<li><i>FALSE</i>: Delete the current value.
<li><i>other</i>: Set the value with the provided parameter.
</ul>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>

<p>This method will check whether the provided format is supported, if this is not
the case, it will raise an exception. Derived classes should first check their
specific operations, if not matched, they should pass the parameter to the parent
method. In this class we support the following operations:</p>

<ul>
<li><i>{@link kTYPE_PHP kTYPE_PHP}</i>: Parameters and response will be
    serialized.
<li><i>{@link kTYPE_XML kTYPE_XML}</i>: Parameters and response will be
    encoded in XML.
<li><i>{@link kTYPE_JSON kTYPE_JSON}</i>: Parameters and response will be
    encoded in JSON.
<li><i>{@link kTYPE_META kTYPE_META}</i>: This data type can be used to
    return service metadata, the {@link Execute() request} will return headers
    metadata for troubleshooting, rather than the response from the web-service.
</ul>]]></long-description>
          <tag line="296" name="param" description="Value or operation." type="string" variable="$theValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="296" name="access" description="public"/>
          <tag line="296" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="296" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
          <tag line="296" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="296" name="see" description="\kAPI_FORMAT" refers="\kAPI_FORMAT"/>
          <tag line="296" name="see" description="\kAPI_OP_HELP" refers="\kAPI_OP_HELP"/>
        </docblock>
        <argument line="296">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="350" package="MyWrapper\Wrappers">
        <name>Stamp</name>
        <full_name>Stamp</full_name>
        <docblock line="350">
          <description><![CDATA[Time-stamp switch.]]></description>
          <long-description><![CDATA[<p>This method can be used to turn on or off the time-stamp section in the web-service
response, the method accepts a single parameter that if resolves to <i>TRUE</i> it
will turn on this option, if not it will turn it off.</p>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="350" name="param" description="TRUE or FALSE." type="boolean" variable="$theValue">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="350" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="350" name="access" description="public"/>
          <tag line="350" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="350" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="350" name="see" description="\kAPI_REQ_STAMP" refers="\kAPI_REQ_STAMP"/>
        </docblock>
        <argument line="350">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="350">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="387" package="MyWrapper\Wrappers">
        <name>LogRequest</name>
        <full_name>LogRequest</full_name>
        <docblock line="387">
          <description><![CDATA[Log request switch.]]></description>
          <long-description><![CDATA[<p>This method can be used to turn on or off the request section in the web-service
response, the method accepts a single parameter that if resolves to <i>TRUE</i> it
will turn on this option, if not it will turn it off.</p>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="387" name="param" description="TRUE or FALSE." type="boolean" variable="$theValue">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="387" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="387" name="access" description="public"/>
          <tag line="387" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="387" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="387" name="see" description="\kAPI_OPT_LOG_REQUEST" refers="\kAPI_OPT_LOG_REQUEST"/>
        </docblock>
        <argument line="387">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="387">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="424" package="MyWrapper\Wrappers">
        <name>LogTrace</name>
        <full_name>LogTrace</full_name>
        <docblock line="424">
          <description><![CDATA[Log trace switch.]]></description>
          <long-description><![CDATA[<p>This method can be used to turn on or off the trace in the event an exception is
raised, the method accepts a single parameter that if resolves to <i>TRUE</i> it will
turn on this option, if not it will turn it off.</p>

<p>The second parameter is a boolean which if <i>TRUE</i> will return the <i>old</i>
value when replacing values; if <i>FALSE</i>, it will return the currently set value.</p>]]></long-description>
          <tag line="424" name="param" description="TRUE or FALSE." type="boolean" variable="$theValue">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="424" name="param" description="TRUE get old value." type="boolean" variable="$getOld">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="424" name="access" description="public"/>
          <tag line="424" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="424" name="uses" description="\CAttribute::ManageOffset()" refers="\CAttribute::ManageOffset()"/>
          <tag line="424" name="see" description="\kAPI_OPT_LOG_TRACE" refers="\kAPI_OPT_LOG_TRACE"/>
        </docblock>
        <argument line="424">
          <name>$theValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="424">
          <name>$getOld</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="462" package="MyWrapper\Wrappers">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="462">
          <description><![CDATA[Set a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if {@link kOFFSET_URL URL},
{@link kAPI_OPERATION operation} and {@link kAPI_FORMAT format} are all set.</p>]]></long-description>
          <tag line="462" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="462" name="param" description="Value to set at offset." type="string|NULL" variable="$theValue">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
          <tag line="462" name="access" description="public"/>
        </docblock>
        <argument line="462">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$theValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="495" package="MyWrapper\Wrappers">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="495">
          <description><![CDATA[Reset a value for a given offset.]]></description>
          <long-description><![CDATA[<p>We overload this method to manage the {@link _IsInited() inited}
{@link kFLAG_STATE_INITED status}: this is set if {@link kOFFSET_URL URL},
{@link kAPI_OPERATION operation} and {@link kAPI_FORMAT format} are all set.</p>]]></long-description>
          <tag line="495" name="param" description="Offset." type="string" variable="$theOffset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="495" name="access" description="public"/>
        </docblock>
        <argument line="495">
          <name>$theOffset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="538" package="MyWrapper\Wrappers">
        <name>Execute</name>
        <full_name>Execute</full_name>
        <docblock line="538">
          <description><![CDATA[Send an HTTP request.]]></description>
          <long-description><![CDATA[<p>This method can be used to sent an <i>HTTP</i> request using the current contents of
the object and return a response.</p>]]></long-description>
          <tag line="538" name="param" description="Request mode, POST or GET" type="string" variable="$theMode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="538" name="access" description="public"/>
          <tag line="538" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="538" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="538">
          <name>$theMode</name>
          <default><![CDATA['POST']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="651" package="MyWrapper\Wrappers">
        <name>Request</name>
        <full_name>Request</full_name>
        <docblock line="651">
          <description><![CDATA[Send a HTTP request.]]></description>
          <long-description><![CDATA[<p>This method can be used to sent an <i>HTTP</i> request via <i>GET</i> or <i>POST</i>.</p>

<p>The method accepts the following parameters:</p>

<ul>
<li><b>$theUrl</b>: The request URL.
<li><b>$theParams</b>: An array of key/value parameters for the request.
<li><b>$theMode</b>: The request mode:
 <ul>
    <li><i>GET</i>: GET, default.
    <li><i>POST</i>: POST.
 </ul>
<li><b>$theFormat</b>: The request format:
 <ul>
    <li><i>{@link kTYPE_XML kTYPE_XML}</i>: XML.
    <li><i>{@link kTYPE_PHP kTYPE_PHP}</i>: PHP.
    <li><i>{@link kTYPE_JSON kTYPE_JSON}</i>: JSON.
    <li><i>{@link kTYPE_META kTYPE_META}</i>: Metadata: if you provide
        this format, the method will return the metadata of the operation for
        troubleshooting purposes.
 </ul>
</ul>]]></long-description>
          <tag line="651" name="param" description="Request URL." type="string" variable="$theUrl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="651" name="param" description="Request parameters." type="mixed" variable="$theParams">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="651" name="param" description="Request mode." type="string" variable="$theMode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="651" name="param" description="Response format." type="string" variable="$theFormat">
            <type by_reference="false">string</type>
          </tag>
          <tag line="651" name="static" description=""/>
          <tag line="651" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="651" name="throws" description="CException CException}" type="\{@link">
            <type by_reference="false">\{@link</type>
          </tag>
        </docblock>
        <argument line="651">
          <name>$theUrl</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="651">
          <name>$theParams</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="652">
          <name>$theMode</name>
          <default><![CDATA['POST']]></default>
          <type/>
        </argument>
        <argument line="653">
          <name>$theFormat</name>
          <default><![CDATA[kTYPE_JSON]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="defines/Errors.inc.php" hash="3753a08b512038f8ef0aeb3ddc004808" package="Default">
    <constant namespace="" line="31" package="Default">
      <name>kERROR_OK</name>
      <full_name>\kERROR_OK</full_name>
      <value><![CDATA[0]]></value>
      <docblock line="31">
        <description><![CDATA[Idle.]]></description>
        <long-description><![CDATA[<p>This code indicates successful operation or idle state.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="39" package="Default">
      <name>kERROR_INVALID_STATE</name>
      <full_name>\kERROR_INVALID_STATE</full_name>
      <value><![CDATA[-1]]></value>
      <docblock line="39">
        <description><![CDATA[Invalid state.]]></description>
        <long-description><![CDATA[<p>This error indicates that the current state is invalid or not fit in order to perform
the requested information.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="46" package="Default">
      <name>kERROR_INVALID_PARAMETER</name>
      <full_name>\kERROR_INVALID_PARAMETER</full_name>
      <value><![CDATA[-2]]></value>
      <docblock line="46">
        <description><![CDATA[Invalid parameter.]]></description>
        <long-description><![CDATA[<p>This error indicates that an invalid parameter was passed to a method or function.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="53" package="Default">
      <name>kERROR_OPTION_MISSING</name>
      <full_name>\kERROR_OPTION_MISSING</full_name>
      <value><![CDATA[-3]]></value>
      <docblock line="53">
        <description><![CDATA[Missing option.]]></description>
        <long-description><![CDATA[<p>This error indicates that a parameter to a method is missing a required option.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="61" package="Default">
      <name>kERROR_BAD_METHOD_CALL</name>
      <full_name>\kERROR_BAD_METHOD_CALL</full_name>
      <value><![CDATA[-4]]></value>
      <docblock line="61">
        <description><![CDATA[Bad method call.]]></description>
        <long-description><![CDATA[<p>This error indicates a call to a non existing method. In general this will happen when
mapping functions to the class and the called function does not exist.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="69" package="Default">
      <name>kERROR_NOT_INITED</name>
      <full_name>\kERROR_NOT_INITED</full_name>
      <value><![CDATA[-5]]></value>
      <docblock line="69">
        <description><![CDATA[Object not ready.]]></description>
        <long-description><![CDATA[<p>This error indicates the attempt to operate with an object that has not yet been
properly initialised.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="77" package="Default">
      <name>kERROR_UNSUPPORTED</name>
      <full_name>\kERROR_UNSUPPORTED</full_name>
      <value><![CDATA[-6]]></value>
      <docblock line="77">
        <description><![CDATA[Unsupported.]]></description>
        <long-description><![CDATA[<p>This error indicates the attempt to either perform an unsupported operation, or that an
unsupported data type was provided to a method.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="85" package="Default">
      <name>kERROR_PROTECTED</name>
      <full_name>\kERROR_PROTECTED</full_name>
      <value><![CDATA[-7]]></value>
      <docblock line="85">
        <description><![CDATA[Protected.]]></description>
        <long-description><![CDATA[<p>This error indicates the attempt to modify a protected attribute, this usually occurs
when modifying a significative offset of an object that uses it as an identifier.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="92" package="Default">
      <name>kERROR_NOT_FOUND</name>
      <full_name>\kERROR_NOT_FOUND</full_name>
      <value><![CDATA[-8]]></value>
      <docblock line="92">
        <description><![CDATA[Not found.]]></description>
        <long-description><![CDATA[<p>This error is raised when an expected object is missing from a container.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="103" package="Default">
      <name>kERROR_DUPLICATE</name>
      <full_name>\kERROR_DUPLICATE</full_name>
      <value><![CDATA[-9]]></value>
      <docblock line="103">
        <description><![CDATA[Duplicate.]]></description>
        <long-description><![CDATA[<p>This error is raised when a duplicate element is found in a collection which is supposed
to have unique elements.</p>

<p>In general this is the error that will be raised when
{@link kFLAG_PERSIST_INSERT inserting} a duplicate element in a container.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="115" package="Default">
      <name>kERROR_NOT_IMPLEMENTED</name>
      <full_name>\kERROR_NOT_IMPLEMENTED</full_name>
      <value><![CDATA[-10]]></value>
      <docblock line="115">
        <description><![CDATA[Unimplemented.]]></description>
        <long-description><![CDATA[<p>This error is raised when the requested operation is not yet implemented. This is an
indication that there is the intention of implementing the requested feature, but that
this was not yet done.</p>

<p>This error is raised by operations rather than by data; in the latter case you would
most likely get an {@link kERROR_UNSUPPORTED unsupported} error.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9Vtty2zYQfZa+ApOn1mNLsnpJO0kTKxbjaqrbSHL7qIFIUERFAiwA2tFk8gn9h35M+1/dBQiSshQ7fXD1YpPAHp6ze3aB12/zJG+3u2c/Pc+vTc5aJ39nByuBUlLpDhdhB/h8ZtPD8OdhfNZtE8iH/XRJC/7Fp1XCNYl5ykgohaFcaGISfMgyKQjDvfAQMU0KzSKy2ROapiRMqdbwjgvYDQAp3yiq9h70Kqfhjm5Za7L/TdE8Z8q+1cXGLwxZzAU3XArtY2hhEqlarQlPd5IMOuSfv3Yy5n//SV5nHY3/hlfhllPVkWr7xobcMaUBonXZ6fVIv9+97Hf7vcvewVof13ovuz271oe17jNb4yaYBovBmASLxWyx/J/LXFaZjKKUleUgtsZYRKhXxENqoHK6CEOmdVykREJ9KJaCQK05xBFtYE/HpirCQrGvyIudlbOe/fLi3Mnoka9fwZ9ut/xW9WVxR1Me1SAVBeemmoNJqHFuK5RiwrgQwtFXDgO2C2nAnwatJlXEFDGSAOFYqgyBMVyxPwqmDdiTC3xvxZymP5r+OhiPhuvlarAKnJKLy1rIIfWHinKqaMYMU0+roqLSUEWRe6rhSWMfgQhK4G0irci4EOHTpOeDxWASrIKFJX7RP+LdIOi5T7jWXGyhyB7/CeINvk2SsD8roahNOFcgo0Y94ZT5ajSbriej5XI0vXGUv6koP+Tl+b6jkf9kCJPmUcLUbnE0BU6rD1wbBHUAHcgL2TIB7k7dmLrnsD3BgSTIfcIEImfwiDG+BBrxrClxxkEhI/cEXwLBfheJJBBAb9qPns7Au8FwDfX6eTZcXw/GY5eCb6sUHEn1OZhtfmehseiK0Wj/RNUYocawLDfI3DUzA6kmQRdKh2Vrm1BHec8M2TAnP1cYke6JHcfgInDnaTXT2QqcOFoFw7JvvquUHBP2Um6FLvJcKuNQv1QFA/ZgwLLPUUdRA9UD6xx7p+w3hG5uiqihxOxz5tpOyTseHTbeaZm30+XtfD5b1Dq/r3QeqPES50oaUP/fBGYy4vEeu81H46rim8Kwc2fWQhfgij2RIYxHPCWtZctI14eabwWP8Qv8jhEZxxoqK+OHdS/sUQ1J0nYuRTBqIcqNseMEzBezVXBdyW9dvKz0N6R69VMcz7IQJ9VroigayjGn2KG5E1vSa0yVWMkMO9rdQj5HDk34fnY7rcj9UJFrMPHkhkWe2vx/ATkS+c2EpSzD4whvRgiIZw8ygwngmv8+4WGCy9YOgGFPIgkNBmUoBIfjyIP4i9bRLOLOE46MLZOdThvWpIWBH69SLnZk9348uFnPg8VytMRGXAaLFRDTTOHI+3RagHg6o8Pb+Xh0XZ2GrYsfq4w20lf3M89yh37a8IdZPTyd64sGrwdRE88hcV22c9k9GOCvCor5xHGIEO7WEtcg6KTDj8aMmkJBU0FrWRh3a8DToDEOIykeNwlcfCv6+NLOJ4ATuIKz5pW7DDOSYpvDpZlqRvayIPeySK1BMqkN3JR3DJp6y+wdwdf2aPQ0R9knR+aRqTyZj4NJMPU9e3HZa4ysg4K122/ftP8F5OjrIw==</source>
  </file>
  <file path="defines/Flags.inc.php" hash="6d9b9736801796d948bdcbfa25bd5cd1" package="Default">
    <constant namespace="" line="37" package="Default">
      <name>kFLAG_STATE_INITED</name>
      <full_name>\kFLAG_STATE_INITED</full_name>
      <value><![CDATA[1]]></value>
      <docblock line="37">
        <description><![CDATA[State: Initialised.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that the object has been initialised, this means that all
required data members are present. In general, this means that elements comprising the
object's {@link CObject::_Index() index} are not missing.</p>

<p>If this flag is not set, it means that the object lacks required elements, thus it will
not work correctly, or it cannot be stored persistently.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="49" package="Default">
      <name>kFLAG_STATE_DIRTY</name>
      <full_name>\kFLAG_STATE_DIRTY</full_name>
      <value><![CDATA[2]]></value>
      <docblock line="49">
        <description><![CDATA[State: Dirty.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that the object has been modified. In general this state is
only triggered by modifications to persistent data members; run time members should not
be included. Methods that serialise or modify the contents of the object should
respectively reset and set this flag.</p>

<p>If the flag is not set, this means that the object has not been modified;</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="62" package="Default">
      <name>kFLAG_STATE_COMMITTED</name>
      <full_name>\kFLAG_STATE_COMMITTED</full_name>
      <value><![CDATA[4]]></value>
      <docblock line="62">
        <description><![CDATA[State: Committed.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that the object has been either loaded from a persistent
container, or that it has been saved to a persistent container. If used in combination
with the {@link kFLAG_STATE_DIRTY dirty} flag, it allows committing the object only if it
was modified.</p>

<p>If the flag is off, this means that the object was not instantiated from a persistent
container, or that it was not committed to it.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="74" package="Default">
      <name>kFLAG_STATE_ENCODED</name>
      <full_name>\kFLAG_STATE_ENCODED</full_name>
      <value><![CDATA[8]]></value>
      <docblock line="74">
        <description><![CDATA[State: Encoded.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates an encoded state. This status is usually associated to
{@link CPersistentObject persistent} objects: if the state is ON it means that all
elements having custom data types, or data formats unsuitable for being transmitted over
the network, will be converted to standard data {@link CDataType types}. This flag will
be used by {@link CContainer containers} to determine whether to perform conversions
before and after persisting the objects.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="85" package="Default">
      <name>kFLAG_STATE_MASK</name>
      <full_name>\kFLAG_STATE_MASK</full_name>
      <value><![CDATA[15]]></value>
      <docblock line="85">
        <description><![CDATA[State mask.]]></description>
        <long-description><![CDATA[<p>This value masks all the state flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="97" package="Default">
      <name>kFLAG_PERSIST_INSERT</name>
      <full_name>\kFLAG_PERSIST_INSERT</full_name>
      <value><![CDATA[16]]></value>
      <docblock line="97">
        <description><![CDATA[Persist: Insert.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to insert an object in a container, this
means that if a duplicate object already exists, the operation should fail.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="106" package="Default">
      <name>kFLAG_PERSIST_UPDATE</name>
      <full_name>\kFLAG_PERSIST_UPDATE</full_name>
      <value><![CDATA[32]]></value>
      <docblock line="106">
        <description><![CDATA[Persist: Update.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to update an object in a container, this
means that the object must exist, or the operation must fail. This operation assumes that
the provided object will replace the entire contents of the existing one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="117" package="Default">
      <name>kFLAG_PERSIST_MODIFY</name>
      <full_name>\kFLAG_PERSIST_MODIFY</full_name>
      <value><![CDATA[96]]></value>
      <docblock line="117">
        <description><![CDATA[Persist: Modify.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to modify an existing object, the difference
with the {@link kFLAG_PERSIST_UPDATE update} operation is that while the latter will
replace the whole object, in this case only the matching object attributes will be
updated and the unmatched ones will be left untouched. This option applies when adding
or modifying a subset of an object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="128" package="Default">
      <name>kFLAG_PERSIST_REPLACE</name>
      <full_name>\kFLAG_PERSIST_REPLACE</full_name>
      <value><![CDATA[48]]></value>
      <docblock line="128">
        <description><![CDATA[Persist: Replace.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to either
{@link kFLAG_PERSIST_INSERT insert} an object, if it doesn't already exist, or
{@link kFLAG_PERSIST_UPDATE update} an existing object. In the latter case, this
operation assumes that the provided object will replace the entire contents of the
existing one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="136" package="Default">
      <name>kFLAG_PERSIST_DELETE</name>
      <full_name>\kFLAG_PERSIST_DELETE</full_name>
      <value><![CDATA[128]]></value>
      <docblock line="136">
        <description><![CDATA[Persist: Delete.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to delete an object from a container, if
the object doesn't exist, the operation should still succeed.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="148" package="Default">
      <name>kFLAG_PERSIST_WRITE_MASK</name>
      <full_name>\kFLAG_PERSIST_WRITE_MASK</full_name>
      <value><![CDATA[112]]></value>
      <docblock line="148">
        <description><![CDATA[Write mask.]]></description>
        <long-description><![CDATA[<p>This value masks the access flags that imply writing to the collection, with the
exception of {@link kFLAG_PERSIST_DELETE deleting}.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="155" package="Default">
      <name>kFLAG_PERSIST_MASK</name>
      <full_name>\kFLAG_PERSIST_MASK</full_name>
      <value><![CDATA[240]]></value>
      <docblock line="155">
        <description><![CDATA[Persist mask.]]></description>
        <long-description><![CDATA[<p>This value masks all the persistence action flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="169" package="Default">
      <name>kFLAG_MODIFY_INCREMENT</name>
      <full_name>\kFLAG_MODIFY_INCREMENT</full_name>
      <value><![CDATA[256]]></value>
      <docblock line="169">
        <description><![CDATA[Modify: Increment.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to increment a value of a field, if the
field does not exist, the provided increment value will be set in the field. This option
must be provided in conjunction with the {kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY}
flag.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="179" package="Default">
      <name>kFLAG_MODIFY_APPEND</name>
      <full_name>\kFLAG_MODIFY_APPEND</full_name>
      <value><![CDATA[512]]></value>
      <docblock line="179">
        <description><![CDATA[Modify: Append.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to append a value to an existing field, if
field is not present, an array with the provided value will be set in the field; if the
field does not contain an array, an error should occur. This option must be provided in
conjunction with the {kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY} flag.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="188" package="Default">
      <name>kFLAG_MODIFY_ADDSET</name>
      <full_name>\kFLAG_MODIFY_ADDSET</full_name>
      <value><![CDATA[1024]]></value>
      <docblock line="188">
        <description><![CDATA[Modify: Add to set.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to add a value to an existing array field
only if this value is not yet present, the options are the same as for the
{@link kFLAG_MODIFY_APPEND kFLAG_MODIFY_APPEND} flag.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="198" package="Default">
      <name>kFLAG_MODIFY_POP</name>
      <full_name>\kFLAG_MODIFY_POP</full_name>
      <value><![CDATA[2560]]></value>
      <docblock line="198">
        <description><![CDATA[Modify: Pop.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to remove the last or first element of an
array: if the value is 1 the last element will be removed, if the value is -1 it will be
the first element. This option must be provided in conjunction with the
{kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY} flag.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="208" package="Default">
      <name>kFLAG_MODIFY_PULL</name>
      <full_name>\kFLAG_MODIFY_PULL</full_name>
      <value><![CDATA[3072]]></value>
      <docblock line="208">
        <description><![CDATA[Modify: Pull.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to remove all occurrences of a value from
an array. If the field exists, but it is not an array, an error should be raised. This
option must be provided in conjunction with the
{kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY} flag.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="220" package="Default">
      <name>kFLAG_MODIFY_MASK</name>
      <full_name>\kFLAG_MODIFY_MASK</full_name>
      <value><![CDATA[3840]]></value>
      <docblock line="220">
        <description><![CDATA[Modifications mask.]]></description>
        <long-description><![CDATA[<p>This value masks the access flags that indicate modification options to the
{@link kFLAG_PERSIST_MODIFY kFLAG_PERSIST_MODIFY} persistence action.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="234" package="Default">
      <name>kFLAG_REFERENCE_IDENTIFIER</name>
      <full_name>\kFLAG_REFERENCE_IDENTIFIER</full_name>
      <value><![CDATA[4096]]></value>
      <docblock line="234">
        <description><![CDATA[Reference: Identifier.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to include
{@link kTAG_REFERENCE_ID identifier} information to the reference, this is used when
{@link CContainer::Reference() converting} a {@link CPersistentObject persistent} object
to a reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="244" package="Default">
      <name>kFLAG_REFERENCE_CONTAINER</name>
      <full_name>\kFLAG_REFERENCE_CONTAINER</full_name>
      <value><![CDATA[8192]]></value>
      <docblock line="244">
        <description><![CDATA[Reference: Container.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to include
{@link kTAG_REFERENCE_CONTAINER container} information to the reference, this is used
when {@link CContainer::Reference() converting} a {@link CPersistentObject persistent}
object to a reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="254" package="Default">
      <name>kFLAG_REFERENCE_DATABASE</name>
      <full_name>\kFLAG_REFERENCE_DATABASE</full_name>
      <value><![CDATA[16384]]></value>
      <docblock line="254">
        <description><![CDATA[Reference: Database.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to include
{@link kTAG_REFERENCE_DATABASE database} information to the reference, this is used
when {@link CContainer::Reference() converting} a {@link CPersistentObject persistent}
object to a reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="264" package="Default">
      <name>kFLAG_REFERENCE_CLASS</name>
      <full_name>\kFLAG_REFERENCE_CLASS</full_name>
      <value><![CDATA[32768]]></value>
      <docblock line="264">
        <description><![CDATA[Reference: Class.]]></description>
        <long-description><![CDATA[<p>This bitfield value indicates that we intend to include {@link kTAG_CLASS class}
information to the reference, this is used when
{@link CContainer::Reference() converting} a {@link CPersistentObject persistent}
object to a reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="275" package="Default">
      <name>kFLAG_REFERENCE_MASK</name>
      <full_name>\kFLAG_REFERENCE_MASK</full_name>
      <value><![CDATA[61440]]></value>
      <docblock line="275">
        <description><![CDATA[Reference mask.]]></description>
        <long-description><![CDATA[<p>This value masks all the reference option flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="286" package="Default">
      <name>kFLAG_MODIFIER_UTF8</name>
      <full_name>\kFLAG_MODIFIER_UTF8</full_name>
      <value><![CDATA[524288]]></value>
      <docblock line="286">
        <description><![CDATA[Modifier: UTF8 convert.]]></description>
        <long-description><![CDATA[<p>If the flag is set, the string will be converted to the UTF8 character set.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="296" package="Default">
      <name>kFLAG_MODIFIER_LTRIM</name>
      <full_name>\kFLAG_MODIFIER_LTRIM</full_name>
      <value><![CDATA[1048576]]></value>
      <docblock line="296">
        <description><![CDATA[Modifier: Left trim.]]></description>
        <long-description><![CDATA[<p>If the flag is set the string will be left trimmed.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8}
conversion.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="306" package="Default">
      <name>kFLAG_MODIFIER_RTRIM</name>
      <full_name>\kFLAG_MODIFIER_RTRIM</full_name>
      <value><![CDATA[2097152]]></value>
      <docblock line="306">
        <description><![CDATA[Modifier: Right trim.]]></description>
        <long-description><![CDATA[<p>If the flag is set the string will be right trimmed.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8}
conversion.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="318" package="Default">
      <name>kFLAG_MODIFIER_TRIM</name>
      <full_name>\kFLAG_MODIFIER_TRIM</full_name>
      <value><![CDATA[3145728]]></value>
      <docblock line="318">
        <description><![CDATA[Modifier: Trim.]]></description>
        <long-description><![CDATA[<p>If the flag is set the string will be trimmed, both left and right; this option implies
that {@link kFLAG_MODIFIER_LTRIM kFLAG_MODIFIER_LTRIM} and
{@link kFLAG_MODIFIER_RTRIM kFLAG_MODIFIER_RTRIM} is also set.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8}
conversion.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="328" package="Default">
      <name>kFLAG_MODIFIER_NULL</name>
      <full_name>\kFLAG_MODIFIER_NULL</full_name>
      <value><![CDATA[4194304]]></value>
      <docblock line="328">
        <description><![CDATA[Modifier: NULL.]]></description>
        <long-description><![CDATA[<p>If the flag is set and the string is empty, it will be converted to a <i>NULL</i> value.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8}
and {@link kFLAG_MODIFIER_TRIM trim} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="340" package="Default">
      <name>kFLAG_MODIFIER_NULLSTR</name>
      <full_name>\kFLAG_MODIFIER_NULLSTR</full_name>
      <value><![CDATA[12582912]]></value>
      <docblock line="340">
        <description><![CDATA[Modifier: NULL string.]]></description>
        <long-description><![CDATA[<p>If the flag is set and the string is empty, it will be converted to a '<i>NULL</i>'
string; this option implies that {@link kFLAG_MODIFIER_NULL kFLAG_MODIFIER_NULL} option
is also set.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8}
and {@link kFLAG_MODIFIER_TRIM trim} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="353" package="Default">
      <name>kFLAG_MODIFIER_NOCASE</name>
      <full_name>\kFLAG_MODIFIER_NOCASE</full_name>
      <value><![CDATA[16777216]]></value>
      <docblock line="353">
        <description><![CDATA[Modifier: Case insensitive.]]></description>
        <long-description><![CDATA[<p>If the flag is set, the string will be set to lowercase, the default case insensitive
modifier. Note that depending on the {@link kFLAG_MODIFIER_UTF8 UTF-8} flag, either the
{@link strtolower() standard} or {@link mb_convert_case() multibyte} function will be
used.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim} and {@link kFLAG_MODIFIER_NULL NULL} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="365" package="Default">
      <name>kFLAG_MODIFIER_URL</name>
      <full_name>\kFLAG_MODIFIER_URL</full_name>
      <value><![CDATA[33554432]]></value>
      <docblock line="365">
        <description><![CDATA[Modifier: Encode for URL.]]></description>
        <long-description><![CDATA[<p>If the flag is set, the string will be URL-encoded; this option and
{@link kFLAG_MODIFIER_HTML kFLAG_MODIFIER_HTML} are mutually exclusive.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim}, {@link kFLAG_MODIFIER_NULL NULL} and
{@link kFLAG_MODIFIER_NOCASE lowercase} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="377" package="Default">
      <name>kFLAG_MODIFIER_HTML</name>
      <full_name>\kFLAG_MODIFIER_HTML</full_name>
      <value><![CDATA[67108864]]></value>
      <docblock line="377">
        <description><![CDATA[Modifier: Encode for HTML.]]></description>
        <long-description><![CDATA[<p>If the flag is set, the string will be URL-encoded; this option and
{@link kFLAG_MODIFIER_URL kFLAG_MODIFIER_URL} are mutually exclusive.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim}, {@link kFLAG_MODIFIER_NULL NULL} and
{@link kFLAG_MODIFIER_NOCASE lowercase} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="391" package="Default">
      <name>kFLAG_MODIFIER_HEX</name>
      <full_name>\kFLAG_MODIFIER_HEX</full_name>
      <value><![CDATA[134217728]]></value>
      <docblock line="391">
        <description><![CDATA[Modifier: HEX.]]></description>
        <long-description><![CDATA[<p>If the flag is set the string will be converted to a hexadecimal string; this option is
mutually exclusive with the {@link kFLAG_MODIFIER_HASH kFLAG_MODIFIER_HASH} and
{@link kFLAG_MODIFIER_HASH_BIN kFLAG_MODIFIER_HASH_BIN} flags.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim}, {@link kFLAG_MODIFIER_NULL NULL},
{@link kFLAG_MODIFIER_NOCASE lowercase} and {@link kFLAG_MODIFIER_URL url} or
{@link kFLAG_MODIFIER_HTML HTML} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="407" package="Default">
      <name>kFLAG_MODIFIER_HEXEXP</name>
      <full_name>\kFLAG_MODIFIER_HEXEXP</full_name>
      <value><![CDATA[402653184]]></value>
      <docblock line="407">
        <description><![CDATA[Modifier: HEX expression.]]></description>
        <long-description><![CDATA[<p>If the flag is set the string will be converted to a hexadecimal string suitable to be
used in an expression (<i>0x00...</i>). Note that if this flag is set it is assumed that
{@link kFLAG_MODIFIER_HEX kFLAG_MODIFIER_HEX} is also set and this flag is mutually
exclusive with the {@link kFLAG_MODIFIER_HASH kFLAG_MODIFIER_HASH} and
{@link kFLAG_MODIFIER_HASH_BIN kFLAG_MODIFIER_HASH_BIN} flags.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim}, {@link kFLAG_MODIFIER_NULL NULL},
{@link kFLAG_MODIFIER_NOCASE lowercase} and {@link kFLAG_MODIFIER_URL url} or
{@link kFLAG_MODIFIER_HTML HTML} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="421" package="Default">
      <name>kFLAG_MODIFIER_HASH</name>
      <full_name>\kFLAG_MODIFIER_HASH</full_name>
      <value><![CDATA[536870912]]></value>
      <docblock line="421">
        <description><![CDATA[Modifier: hash.]]></description>
        <long-description><![CDATA[<p>If the flag is set, the string will be hashed into a 32 character hex string; this option
is mutually exclusive with the {@link kFLAG_MODIFIER_HEX kFLAG_MODIFIER_HEX} and
{@link kFLAG_MODIFIER_HEXEXP kFLAG_MODIFIER_HEXEXP} flags.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim}, {@link kFLAG_MODIFIER_NULL NULL},
{@link kFLAG_MODIFIER_NOCASE lowercase} and {@link kFLAG_MODIFIER_URL url} or
{@link kFLAG_MODIFIER_HTML HTML} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="437" package="Default">
      <name>kFLAG_MODIFIER_HASH_BIN</name>
      <full_name>\kFLAG_MODIFIER_HASH_BIN</full_name>
      <value><![CDATA[1610612736]]></value>
      <docblock line="437">
        <description><![CDATA[Modifier: binary hash.]]></description>
        <long-description><![CDATA[<p>If the flag is set, the string will be hashed and the resulting string will be
a 16 character binary string. Note that if this flag is set it is assumed that
{@link kFLAG_MODIFIER_HASH kFLAG_MODIFIER_HASH} is also set and this option is mutually
exclusive with the {@link kFLAG_MODIFIER_HEX kFLAG_MODIFIER_HEX} and
{@link kFLAG_MODIFIER_HEXEXP kFLAG_MODIFIER_HEXEXP} flags.</p>

<p>This modification will be applied after the eventual {@link kFLAG_MODIFIER_UTF8 UTF-8},
{@link kFLAG_MODIFIER_TRIM trim}, {@link kFLAG_MODIFIER_NULL NULL},
{@link kFLAG_MODIFIER_NOCASE lowercase} and {@link kFLAG_MODIFIER_URL url} or
{@link kFLAG_MODIFIER_HTML HTML} conversions.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="448" package="Default">
      <name>kFLAG_MODIFIER_MASK_TRIM</name>
      <full_name>\kFLAG_MODIFIER_MASK_TRIM</full_name>
      <value><![CDATA[3145728]]></value>
      <docblock line="448">
        <description><![CDATA[TRIM mask.]]></description>
        <long-description><![CDATA[<p>This value masks both trim flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="455" package="Default">
      <name>kFLAG_MODIFIER_MASK_NULL</name>
      <full_name>\kFLAG_MODIFIER_MASK_NULL</full_name>
      <value><![CDATA[12582912]]></value>
      <docblock line="455">
        <description><![CDATA[NULL mask.]]></description>
        <long-description><![CDATA[<p>This value masks both the NULL flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="462" package="Default">
      <name>kFLAG_MODIFIER_MASK_HEX</name>
      <full_name>\kFLAG_MODIFIER_MASK_HEX</full_name>
      <value><![CDATA[402653184]]></value>
      <docblock line="462">
        <description><![CDATA[HEX mask.]]></description>
        <long-description><![CDATA[<p>This value masks both the HEX flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="469" package="Default">
      <name>kFLAG_MODIFIER_MASK_HASH</name>
      <full_name>\kFLAG_MODIFIER_MASK_HASH</full_name>
      <value><![CDATA[1610612736]]></value>
      <docblock line="469">
        <description><![CDATA[Hash mask.]]></description>
        <long-description><![CDATA[<p>This value masks the both hash flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="476" package="Default">
      <name>kFLAG_MODIFIER_MASK</name>
      <full_name>\kFLAG_MODIFIER_MASK</full_name>
      <value><![CDATA[2146959360]]></value>
      <docblock line="476">
        <description><![CDATA[Modifiers mask.]]></description>
        <long-description><![CDATA[<p>This value masks the string modifier flags.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="487" package="Default">
      <name>kFLAG_DEFAULT</name>
      <full_name>\kFLAG_DEFAULT</full_name>
      <value><![CDATA[0]]></value>
      <docblock line="487">
        <description><![CDATA[Default state.]]></description>
        <long-description><![CDATA[<p>This bitfield value represents the default flags state.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="494" package="Default">
      <name>kFLAG_DEFAULT_MASK</name>
      <full_name>\kFLAG_DEFAULT_MASK</full_name>
      <value><![CDATA[2147483647]]></value>
      <docblock line="494">
        <description><![CDATA[Status mask.]]></description>
        <long-description><![CDATA[<p>This bitfield value represents the default flags mask.</p>]]></long-description>
      </docblock>
    </constant>
    <source>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</source>
  </file>
  <file path="defines/MessageTypes.inc.php" hash="ccd5e472d2e5451be859497dd5e2a513" package="Default">
    <constant namespace="" line="32" package="Default">
      <name>kMESSAGE_TYPE_IDLE</name>
      <full_name>\kMESSAGE_TYPE_IDLE</full_name>
      <value><![CDATA[0]]></value>
      <docblock line="32">
        <description><![CDATA[OK.]]></description>
        <long-description><![CDATA[<p>This code indicates no errors.</p>

<p>This state can be equated to an idle state.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="42" package="Default">
      <name>kMESSAGE_TYPE_NOTICE</name>
      <full_name>\kMESSAGE_TYPE_NOTICE</full_name>
      <value><![CDATA[10]]></value>
      <docblock line="42">
        <description><![CDATA[Notice.]]></description>
        <long-description><![CDATA[<p>This code indicates a notice.</p>

<p>A notice is an informative message that does not imply an error, nor a situation that
should be handled; it can be considered as statistical data.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="52" package="Default">
      <name>kMESSAGE_TYPE_MESSAGE</name>
      <full_name>\kMESSAGE_TYPE_MESSAGE</full_name>
      <value><![CDATA[20]]></value>
      <docblock line="52">
        <description><![CDATA[Message.]]></description>
        <long-description><![CDATA[<p>This code indicates a message.</p>

<p>A message is an informative message that is addressed to somebody, although it does not
imply an error or warning, it was issued to a receiving party.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="63" package="Default">
      <name>kMESSAGE_TYPE_WARNING</name>
      <full_name>\kMESSAGE_TYPE_WARNING</full_name>
      <value><![CDATA[30]]></value>
      <docblock line="63">
        <description><![CDATA[Warning.]]></description>
        <long-description><![CDATA[<p>This code indicates a warning.</p>

<p>Warnings are informative data that indicate a potential problem, although they do not
imply an error, they indicate a potential problem or an issue that should be addressed
at least at a later stage.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="74" package="Default">
      <name>kMESSAGE_TYPE_ERROR</name>
      <full_name>\kMESSAGE_TYPE_ERROR</full_name>
      <value><![CDATA[40]]></value>
      <docblock line="74">
        <description><![CDATA[Error.]]></description>
        <long-description><![CDATA[<p>This code indicates an error.</p>

<p>Errors indicate that something prevented an operation from being performed, this does
not necessarily mean that the whole process is halted, but that the results of an
operation will not be as expected.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="85" package="Default">
      <name>kMESSAGE_TYPE_FATAL</name>
      <full_name>\kMESSAGE_TYPE_FATAL</full_name>
      <value><![CDATA[50]]></value>
      <docblock line="85">
        <description><![CDATA[Fatal.]]></description>
        <long-description><![CDATA[<p>This code indicates a fatal error.</p>

<p>Fatal errors are {@link kMESSAGE_TYPE_ERROR errors} that result in stopping the whole
process: in this case the error will prevent other operations from being performed and
the whole process should be halted.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="97" package="Default">
      <name>kMESSAGE_TYPE_BUG</name>
      <full_name>\kMESSAGE_TYPE_BUG</full_name>
      <value><![CDATA[60]]></value>
      <docblock line="97">
        <description><![CDATA[Bug.]]></description>
        <long-description><![CDATA[<p>This code indicates a bug.</p>

<p>Bugs, as opposed to {@link kMESSAGE_TYPE_ERROR errors}, result from internal causes
independant from external factors. A bug indicates that an operation will never execute
as stated, it does not necessarily mean that it is {@link kMESSAGE_TYPE_FATAL fatal}, but
rather that the behaviour of an operation does not correspond to its declaration.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9ls1u2zgQx8/2Uwx66gaG7KYfQL/jbp0g2CYpEhdBTwUtjS3CEqmSlF1j0UfYd9iH6b7XzlAUbaOuckoNHyzOcDjz+89QfvW2yqt+f3j0+n4+fTjqHfwc7Vou0FqxwOmmQptIlSaU1EHHn0LcT9ZHwz4QE3/0RNUlGuGkVjahBV6b5tLCXBYIqVZOSGXpR1lqBbjjDbXFDGYbEEUBaSGsxRjhpBLpkkruXWxujagqNH7V1rPW8B7nUkkfqN0japdrQ7hksdQwTuC/f5d6Ln/8A6/KxPLP9CRdSGESbRZv/JYVGksheo+S0QiOHw9Hz4bHo9Fzsg3vWfWLyc3N+GwC088fJze/WbygHVz9FXiDVyzVGYJUmUyFQwtKAxqjjd1zso6MkAoFMwT8WtNTBk4DLciMFPf2xAPMWCJ8CA+WodgvXOyX8/cfJg8Goc4R/PGy1xsO4Zw2JzGzS+1kil3ZCcpv12ccnoFcORc116akRlshlM34gMuFg0z70hzIsio27OqLHNCaoaBWutq3p/fmwDbXdZFxtblQlGT2EqRrAVB/W5mhIQaiYSMtZSEKyIQTnRgur6bnf25BPIok2tpbFmH6u2GU+07jWPQdONicZYaWGhmtLnGms82AppKmqV7kXG0LjUPvcwP6roVRUi0G7LkmDNLaOjQFGExRrsgKlTBu00kkPLRIjiORSKBFctuc2I1kve8U9pDF4B4PVirACLtpc6UdKidJyMroWYHlDhCX44aQHAYyaMxdoZgZa8KYmoO3PRbF4MhkKVBYxz8EFBTOcI8tuufrdnx9eX551mJ8HDFGai3GCSfcCTEU1fr4DXZbXJM8tYzLvcQGV1QqD4MCXYWLHuZGl1Sb90DD4DFjTHQeNxYH5oFU1Cqks5FEs0TRTCDThHWu6WYheuzALZuTFhxjVrutF3GrC2dBz+l4DrrNYC3pFcNnMGEL+K3ClAJ0YpxcX19dx/F8EikGaC3DU+qeorsR5+yyD/J0u9Q05N8nhVRLOJBC8PreFNoUSeGpEXRVMdNIiAMHSC/YwxNOhUXv0oyrJxF0Ak3rZovJHlSKYPpm/FmI3ZuxuAvn6Xg6/hBxPo04A78W57v6jqmebR3I1w5YTwKhw/11N8dBy9AXK6ldjSItUkF/R3wv0mlYocqECj74LfjMRer4fUjXK6Wxk5aXZq/nm44jzIa2Y1o7r054R3Dr7tyqv+h86W/ngwV5mE1fffdTwMHpZJYzzsMMc7GSujbNROwkFw9OtSEYlVaenaThyZD+iTVunXK++xQvmN6zKKZXr99/+6b/P2PAU60=</source>
  </file>
  <file path="defines/Offsets.inc.php" hash="60f0f17ac65c0c83a1b329b9068bf590" package="Default">
    <constant namespace="" line="41" package="Default">
      <name>kTAG_LID</name>
      <full_name>\kTAG_LID</full_name>
      <value><![CDATA['_id']]></value>
      <docblock line="41">
        <description><![CDATA[Local unique identifier offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the object's local unique identifier, this offset should
hold a scalar value which uniquely identifies the object within the collection that holds
it.</p>

<p>This should not be confused with the {@link kTAG_GID global} identifier, which represents
the value or values used by the public to refer to that object.</p>

<p>This value should be tightly integrated with the database.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="53" package="Default">
      <name>kTAG_GID</name>
      <full_name>\kTAG_GID</full_name>
      <value><![CDATA[':GID']]></value>
      <docblock line="53">
        <description><![CDATA[Global unique identifier offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the object's global unique identifier, this offset should
uniquely identify the object among all collections, it represents a string that may only
reference that specific object.</p>

<p>This should not be confused with the {@link kTAG_LID local} identifier, which represents
the key to the object within the local database.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="62" package="Default">
      <name>kTAG_UID</name>
      <full_name>\kTAG_UID</full_name>
      <value><![CDATA[':UID']]></value>
      <docblock line="62">
        <description><![CDATA[Unique identifier offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the object's unique identifier, this offset is used when
the {@link kTAG_LID local} identifier is not the actual value that determines the object
unique key. This offset should generally be a unique index.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="76" package="Default">
      <name>kTAG_REFERENCE_SYNONYM</name>
      <full_name>\kTAG_REFERENCE_SYNONYM</full_name>
      <value><![CDATA[':SYNONYM']]></value>
      <docblock line="76">
        <description><![CDATA[Synonym offset.]]></description>
        <long-description><![CDATA[<p>This is the offset used to indicate a synonym, a synonym is a string that can be used as
a substitute to the term, it may be of several kinds: {@link kTYPE_EXACT exact},
{@link kTYPE_BROAD broad}, {@link kTYPE_NARROW narrow} and
{@link kTYPE_RELATED related}.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="85" package="Default">
      <name>kTAG_REFERENCE_XREF</name>
      <full_name>\kTAG_REFERENCE_XREF</full_name>
      <value><![CDATA[':XREF']]></value>
      <docblock line="85">
        <description><![CDATA[This is the offset used to indicate a cross-reference, a cross-reference is a reference
to another term in the same container, a sort of synonym, except that it is not a string,
but a reference to another term object. Cross-references can be of several kinds:
{@link kTYPE_EXACT exact}, {@link kTYPE_BROAD broad},
{@link kTYPE_NARROW narrow} and {@link kTYPE_RELATED related}.]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="93" package="Default">
      <name>kTAG_REFERENCE_ID</name>
      <full_name>\kTAG_REFERENCE_ID</full_name>
      <value><![CDATA['$id']]></value>
      <docblock line="93">
        <description><![CDATA[Identifier reference tag.]]></description>
        <long-description><![CDATA[<p>This is the tag is the offset used to indicate an object unique identifier within an
object reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="100" package="Default">
      <name>kTAG_REFERENCE_CONTAINER</name>
      <full_name>\kTAG_REFERENCE_CONTAINER</full_name>
      <value><![CDATA['$ref']]></value>
      <docblock line="100">
        <description><![CDATA[Container name reference tag.]]></description>
        <long-description><![CDATA[<p>This tag is the offset used to indicate a container within an object reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="107" package="Default">
      <name>kTAG_REFERENCE_DATABASE</name>
      <full_name>\kTAG_REFERENCE_DATABASE</full_name>
      <value><![CDATA['$db']]></value>
      <docblock line="107">
        <description><![CDATA[Database name reference tag.]]></description>
        <long-description><![CDATA[<p>This tag is the offset used to indicate a database within an object reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="120" package="Default">
      <name>kTAG_CLASS</name>
      <full_name>\kTAG_CLASS</full_name>
      <value><![CDATA[':CLASS']]></value>
      <docblock line="120">
        <description><![CDATA[Class tag.]]></description>
        <long-description><![CDATA[<p>This is the offset that should be used to store the object's class name, it will be used
to {@link CMongoUnitObject::NewObject() instantiate} objects when loading them from their
containers.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="127" package="Default">
      <name>kTAG_CREATED</name>
      <full_name>\kTAG_CREATED</full_name>
      <value><![CDATA[':CREATED']]></value>
      <docblock line="127">
        <description><![CDATA[Creation time-stammp.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a creation time-stamp.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="134" package="Default">
      <name>kTAG_MODIFIED</name>
      <full_name>\kTAG_MODIFIED</full_name>
      <value><![CDATA[':MODIFIED']]></value>
      <docblock line="134">
        <description><![CDATA[Last modification time-stammp.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a last modification time-stamp.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="145" package="Default">
      <name>kTAG_VERSION</name>
      <full_name>\kTAG_VERSION</full_name>
      <value><![CDATA[':VERS']]></value>
      <docblock line="145">
        <description><![CDATA[Version tag.]]></description>
        <long-description><![CDATA[<p>This tag is an offset that should be used to represent the object's version, the version
is a value that should change each time the object is saved: it can be used to check
whether an object was modified since the last time it was read.</p>

<p>By default it is an integer incremented each time the object is saved.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="154" package="Default">
      <name>kTAG_TYPE</name>
      <full_name>\kTAG_TYPE</full_name>
      <value><![CDATA[':TYPE']]></value>
      <docblock line="154">
        <description><![CDATA[Type.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's data type, in
general it is used in a structure in conjunction with the {@link kTAG_DATA data} offset
to indicate the data type of the item.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="162" package="Default">
      <name>kTAG_PATTERN</name>
      <full_name>\kTAG_PATTERN</full_name>
      <value><![CDATA[':PATTERN']]></value>
      <docblock line="162">
        <description><![CDATA[Pattern.]]></description>
        <long-description><![CDATA[<p>This tag is used to describe a pattern, in general this may be applied to terms that are
of the {@link kTYPE_STRING string} type which are restricted by a pattern.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="172" package="Default">
      <name>kTAG_KIND</name>
      <full_name>\kTAG_KIND</full_name>
      <value><![CDATA[':KIND']]></value>
      <docblock line="172">
        <description><![CDATA[Kind.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a kind attribute. A kind is
similar to the {@link kTAG_TYPE kTAG_TYPE} attribute, except that in the latter case it
qualifies specifically the {@link kTAG_DATA kTAG_DATA} elements, in this case it
discriminates the elements of a list.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="181" package="Default">
      <name>kTAG_DOMAIN</name>
      <full_name>\kTAG_DOMAIN</full_name>
      <value><![CDATA[':DOMAIN']]></value>
      <docblock line="181">
        <description><![CDATA[Domain.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a domain attribute. A domain
represents what kind of object the current object represents, it should indicate the
nature of the instance it represents.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="190" package="Default">
      <name>kTAG_CATEGORY</name>
      <full_name>\kTAG_CATEGORY</full_name>
      <value><![CDATA[':CATEGORY']]></value>
      <docblock line="190">
        <description><![CDATA[Category.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a category attribute. A category
represents an area to which the current instance belongs to, it should indicate the main
quality of the instance in regards to other instances.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="206" package="Default">
      <name>kTAG_CARDINALITY</name>
      <full_name>\kTAG_CARDINALITY</full_name>
      <value><![CDATA[':CARD']]></value>
      <docblock line="206">
        <description><![CDATA[Cardinality.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating the cardinality of a data
attribute, it can take the following values:</p>

<ul>
<li><i>{@link kCARD_0_1 kCARD_0_1}</i>: Zero or one, the data is either a scalar or it
    may not be present.
<li><i>{@link kCARD_1 kCARD_1}</i>: One, the data is a required scalar.
<li><i>{@link kCARD_ANY kCARD_ANY}</i>: Any, the data may not be present or it may have
    many elements; in general this indicates that the data element must be an array.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="215" package="Default">
      <name>kTAG_UNIT</name>
      <full_name>\kTAG_UNIT</full_name>
      <value><![CDATA[':UNIT']]></value>
      <docblock line="215">
        <description><![CDATA[Unit.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a unit attribute. A unit is a
measurement unit such as centimeters, in general this offset will hold a reference to
an object that defines the unit.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="223" package="Default">
      <name>kTAG_SOURCE</name>
      <full_name>\kTAG_SOURCE</full_name>
      <value><![CDATA[':SOURCE']]></value>
      <docblock line="223">
        <description><![CDATA[Source.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a source. A source indicates from
where an object comes from, it is usually expressed as an URL.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="232" package="Default">
      <name>kTAG_DATA</name>
      <full_name>\kTAG_DATA</full_name>
      <value><![CDATA[':DATA']]></value>
      <docblock line="232">
        <description><![CDATA[Data.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's data or content, in
general this tag is used in conjunction with the {@link kTAG_TYPE type} or
{@link kTAG_KIND kind} offsets when storing lists of items.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="239" package="Default">
      <name>kTAG_CODE</name>
      <full_name>\kTAG_CODE</full_name>
      <value><![CDATA[':CODE']]></value>
      <docblock line="239">
        <description><![CDATA[Code offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's code or acronym.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="247" package="Default">
      <name>kTAG_ENUM</name>
      <full_name>\kTAG_ENUM</full_name>
      <value><![CDATA[':ENUM']]></value>
      <docblock line="247">
        <description><![CDATA[Enumeration offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute containing an
enumeration code or acronym.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="254" package="Default">
      <name>kTAG_NAMESPACE</name>
      <full_name>\kTAG_NAMESPACE</full_name>
      <value><![CDATA[':NS']]></value>
      <docblock line="254">
        <description><![CDATA[Namespace offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a namespace term reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="261" package="Default">
      <name>kTAG_TERM</name>
      <full_name>\kTAG_TERM</full_name>
      <value><![CDATA[':TERM']]></value>
      <docblock line="261">
        <description><![CDATA[Term offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a graph node term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="268" package="Default">
      <name>kTAG_TAG</name>
      <full_name>\kTAG_TAG</full_name>
      <value><![CDATA[':TAG']]></value>
      <docblock line="268">
        <description><![CDATA[Tag offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a tag.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="275" package="Default">
      <name>kTAG_NODE</name>
      <full_name>\kTAG_NODE</full_name>
      <value><![CDATA[':NODE']]></value>
      <docblock line="275">
        <description><![CDATA[Graph node offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a graph node.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="282" package="Default">
      <name>kTAG_EDGE</name>
      <full_name>\kTAG_EDGE</full_name>
      <value><![CDATA[':EDGE']]></value>
      <docblock line="282">
        <description><![CDATA[Graph edge offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a graph edge node.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="289" package="Default">
      <name>kTAG_SUBJECT</name>
      <full_name>\kTAG_SUBJECT</full_name>
      <value><![CDATA[':SUBJECT']]></value>
      <docblock line="289">
        <description><![CDATA[Subject offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a subject term or node.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="296" package="Default">
      <name>kTAG_PREDICATE</name>
      <full_name>\kTAG_PREDICATE</full_name>
      <value><![CDATA[':PREDICATE']]></value>
      <docblock line="296">
        <description><![CDATA[Predicate offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a predicate term or node.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="303" package="Default">
      <name>kTAG_OBJECT</name>
      <full_name>\kTAG_OBJECT</full_name>
      <value><![CDATA[':OBJECT']]></value>
      <docblock line="303">
        <description><![CDATA[Object offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an object term or node.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="310" package="Default">
      <name>kTAG_PATH</name>
      <full_name>\kTAG_PATH</full_name>
      <value><![CDATA[':PATH']]></value>
      <docblock line="310">
        <description><![CDATA[Path offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a path.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="317" package="Default">
      <name>kTAG_TITLE</name>
      <full_name>\kTAG_TITLE</full_name>
      <value><![CDATA[':TITLE']]></value>
      <docblock line="317">
        <description><![CDATA[Title offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a title.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="324" package="Default">
      <name>kTAG_NAME</name>
      <full_name>\kTAG_NAME</full_name>
      <value><![CDATA[':NAME']]></value>
      <docblock line="324">
        <description><![CDATA[Name offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's name.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="331" package="Default">
      <name>kTAG_DESCRIPTION</name>
      <full_name>\kTAG_DESCRIPTION</full_name>
      <value><![CDATA[':DESCR']]></value>
      <docblock line="331">
        <description><![CDATA[Description.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's description.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="338" package="Default">
      <name>kTAG_DEFINITION</name>
      <full_name>\kTAG_DEFINITION</full_name>
      <value><![CDATA[':DEF']]></value>
      <docblock line="338">
        <description><![CDATA[Definition.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's definition.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="346" package="Default">
      <name>kTAG_EXAMPLES</name>
      <full_name>\kTAG_EXAMPLES</full_name>
      <value><![CDATA[':EXAMPLE']]></value>
      <docblock line="346">
        <description><![CDATA[Examples.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute containing a list of
examples.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="354" package="Default">
      <name>kTAG_LANGUAGE</name>
      <full_name>\kTAG_LANGUAGE</full_name>
      <value><![CDATA[':LANGUAGE']]></value>
      <docblock line="354">
        <description><![CDATA[Language.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating the language of an attribute, it
should be the 2 character ISO 639 language code.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="361" package="Default">
      <name>kTAG_ENTITY</name>
      <full_name>\kTAG_ENTITY</full_name>
      <value><![CDATA[':ENTITY']]></value>
      <docblock line="361">
        <description><![CDATA[Entity.]]></description>
        <long-description><![CDATA[<p>This tag is used as the namespace and default offset for entities.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="370" package="Default">
      <name>kTAG_STATUS</name>
      <full_name>\kTAG_STATUS</full_name>
      <value><![CDATA[':STATUS']]></value>
      <docblock line="370">
        <description><![CDATA[Status.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an attribute's status or state, it
will generally be an array of tags defining the various states associated with the
object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="378" package="Default">
      <name>kTAG_ROLE</name>
      <full_name>\kTAG_ROLE</full_name>
      <value><![CDATA[':ROLE']]></value>
      <docblock line="378">
        <description><![CDATA[Role.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a role or function, this is
generally associated with the capabilities or permissions of users.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="386" package="Default">
      <name>kTAG_ANNOTATION</name>
      <full_name>\kTAG_ANNOTATION</full_name>
      <value><![CDATA[':ANNOTATION']]></value>
      <docblock line="386">
        <description><![CDATA[Annotation.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a list of annotations, in general
it will contain a list of key/value pairs.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="393" package="Default">
      <name>kTAG_DATASET</name>
      <full_name>\kTAG_DATASET</full_name>
      <value><![CDATA[':DATASET']]></value>
      <docblock line="393">
        <description><![CDATA[Dataset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a dataset.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="418" package="Default">
      <name>kTAG_REFS</name>
      <full_name>\kTAG_REFS</full_name>
      <value><![CDATA[':REFS']]></value>
      <docblock line="418">
        <description><![CDATA[References tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the list of references of an object, it is an array of
object references in which each element may either be the reference itself or the
following structure:</p>

<ul>
<li><i>{@link kTAG_KIND kTAG_KIND}</i>: Relation predicate, it can either be an object
    reference or a string.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: Relation object, it will be a reference to an
    object in which the following elements may appear:
 <ul>
    <li><i>{@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID}</i>: The unique identifier of the
        referenced object.
    <li><i>{@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER}</i>: The
        {@link CContainer container} name.
    <li><i>{@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE}</i>: The database
        name.
    <li><i>{@link kTAG_CLASS kTAG_CLASS}</i>: The object class name.
 </ul>
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="425" package="Default">
      <name>kTAG_COUNT</name>
      <full_name>\kTAG_COUNT</full_name>
      <value><![CDATA[':COUNT']]></value>
      <docblock line="425">
        <description><![CDATA[Generic count tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a generic count.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="434" package="Default">
      <name>kTAG_REF_COUNT</name>
      <full_name>\kTAG_REF_COUNT</full_name>
      <value><![CDATA[':REF-COUNT']]></value>
      <docblock line="434">
        <description><![CDATA[References count tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the references count of an object, it is an integer
representing the number of times the object was referenced. It is used in general to
count the number of term data instances.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="442" package="Default">
      <name>kTAG_TAGS</name>
      <full_name>\kTAG_TAGS</full_name>
      <value><![CDATA[':TAGS']]></value>
      <docblock line="442">
        <description><![CDATA[Tags.]]></description>
        <long-description><![CDATA[<p>This tag represents a list of attribute tags, it is generally used to collect the list of
tags used in an object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="450" package="Default">
      <name>kTAG_DTAGS</name>
      <full_name>\kTAG_DTAGS</full_name>
      <value><![CDATA[':DTAGS']]></value>
      <docblock line="450">
        <description><![CDATA[Data tags.]]></description>
        <long-description><![CDATA[<p>This tag represents a list of data tags, it is generally used to collect the list of
data tags that reference the current object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="459" package="Default">
      <name>kTAG_EDGE_TERM</name>
      <full_name>\kTAG_EDGE_TERM</full_name>
      <value><![CDATA[':TEDGE']]></value>
      <docblock line="459">
        <description><![CDATA[Edge terms path.]]></description>
        <long-description><![CDATA[<p>This tag represents a graph edge node by using its related terms as a path in the form of
a string containing the <i>SUBJECT/PREDICATE/OBJECT</i> path constituted by the term
identifier elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="469" package="Default">
      <name>kTAG_EDGE_NODE</name>
      <full_name>\kTAG_EDGE_NODE</full_name>
      <value><![CDATA[':NEDGE']]></value>
      <docblock line="469">
        <description><![CDATA[Edge nodes path.]]></description>
        <long-description><![CDATA[<p>This tag represents a graph edge node by using its related nodes and predicate term as a
path in the form of a string containing the <i>SUBJECT/PREDICATE/OBJECT</i> path in which
the subject and object elements are represented by the respective node identifiers, and
the predicate element is represented by the edge term identifier.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="478" package="Default">
      <name>kTAG_DEFAULT</name>
      <full_name>\kTAG_DEFAULT</full_name>
      <value><![CDATA[':DEFAULT']]></value>
      <docblock line="478">
        <description><![CDATA[Default tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the default entry related to the current one. There may be
cases in which an object is interchangeable with many others, in enumerations, for
instance: in this case we can use this tag to point to the default or used instance.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="488" package="Default">
      <name>kTAG_PREFERRED</name>
      <full_name>\kTAG_PREFERRED</full_name>
      <value><![CDATA[':PREFERRED']]></value>
      <docblock line="488">
        <description><![CDATA[Preferred tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the preferred entry related to the current one. There may
be cases in which an object may be obsolete, but still in use, this tag refers to the
object that should be used in place of the current one. This tag  expects the value of
the {@link kTAG_LID native} identifier of the preferred object here.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="498" package="Default">
      <name>kTAG_VALID</name>
      <full_name>\kTAG_VALID</full_name>
      <value><![CDATA[':VALID']]></value>
      <docblock line="498">
        <description><![CDATA[Valid tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the valid entry related to the current one. There may be
cases in which it is not an option to delete objects, so we create a new one and the old
one will point to the new one. This tag represents that property and it expects the value
of the {@link kTAG_LID native} identifier of the new object here.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="505" package="Default">
      <name>kTAG_PROVIDED</name>
      <full_name>\kTAG_PROVIDED</full_name>
      <value><![CDATA[':PROVIDED']]></value>
      <docblock line="505">
        <description><![CDATA[Provided tag.]]></description>
        <long-description><![CDATA[<p>This tags provided elements as opposed to {@link kTAG_GENERATED generated} elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="512" package="Default">
      <name>kTAG_GENERATED</name>
      <full_name>\kTAG_GENERATED</full_name>
      <value><![CDATA[':GENERATED']]></value>
      <docblock line="512">
        <description><![CDATA[Generated tag.]]></description>
        <long-description><![CDATA[<p>This tags generated elements as opposed to {@link kTAG_PROVIDED provided} elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="520" package="Default">
      <name>kTAG_IN</name>
      <full_name>\kTAG_IN</full_name>
      <value><![CDATA[':IN']]></value>
      <docblock line="520">
        <description><![CDATA[Incoming tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the incoming direction, it can be used for tagging items
that point to the current object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="528" package="Default">
      <name>kTAG_OUT</name>
      <full_name>\kTAG_OUT</full_name>
      <value><![CDATA[':OUT']]></value>
      <docblock line="528">
        <description><![CDATA[Outgoing tag.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the outgoing direction, it can be used for tagging items
that the current object points to.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="535" package="Default">
      <name>kTAG_MANAGER</name>
      <full_name>\kTAG_MANAGER</full_name>
      <value><![CDATA[':MANAGER']]></value>
      <docblock line="535">
        <description><![CDATA[Manager offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating the manager of the current object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="546" package="Default">
      <name>kOFFSET_PASSWORD</name>
      <full_name>\kOFFSET_PASSWORD</full_name>
      <value><![CDATA[':PASS']]></value>
      <docblock line="546">
        <description><![CDATA[Password offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a password; the value is a string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="554" package="Default">
      <name>kOFFSET_MAIL</name>
      <full_name>\kOFFSET_MAIL</full_name>
      <value><![CDATA[':MAIL']]></value>
      <docblock line="554">
        <description><![CDATA[Mail offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a mailing address, the value may either be a string or
an array.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="561" package="Default">
      <name>kOFFSET_EMAIL</name>
      <full_name>\kOFFSET_EMAIL</full_name>
      <value><![CDATA[':EMAIL']]></value>
      <docblock line="561">
        <description><![CDATA[E-mail offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an e-mail, the value may either be a string or an array.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="569" package="Default">
      <name>kOFFSET_PHONE</name>
      <full_name>\kOFFSET_PHONE</full_name>
      <value><![CDATA[':PHONE']]></value>
      <docblock line="569">
        <description><![CDATA[Telephone offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a telephone number, the value may either be a string or
an array.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="577" package="Default">
      <name>kOFFSET_FAX</name>
      <full_name>\kOFFSET_FAX</full_name>
      <value><![CDATA[':FAX']]></value>
      <docblock line="577">
        <description><![CDATA[Telefax offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a telefax number, the value may either be a string or
an array.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="584" package="Default">
      <name>kOFFSET_URL</name>
      <full_name>\kOFFSET_URL</full_name>
      <value><![CDATA[':URL']]></value>
      <docblock line="584">
        <description><![CDATA[URL.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an URL, link or web address.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="591" package="Default">
      <name>kOFFSET_ACRONYM</name>
      <full_name>\kOFFSET_ACRONYM</full_name>
      <value><![CDATA[':ACRONYM']]></value>
      <docblock line="591">
        <description><![CDATA[Acronym.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a list of acronyms.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="600" package="Default">
      <name>kOFFSET_VERSION</name>
      <full_name>\kOFFSET_VERSION</full_name>
      <value><![CDATA[':VERSION']]></value>
      <docblock line="600">
        <description><![CDATA[Version.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the version, it should not be confused with the
{@link kTAG_VERSION kTAG_VERSION} which is automatically managed in the class library:
this offset represents the actual version.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="607" package="Default">
      <name>kOFFSET_NAMESPACE</name>
      <full_name>\kOFFSET_NAMESPACE</full_name>
      <value><![CDATA[':NAMESPACE']]></value>
      <docblock line="607">
        <description><![CDATA[Namespace offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a namespace name or acronym.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="614" package="Default">
      <name>kOFFSET_IMAGE</name>
      <full_name>\kOFFSET_IMAGE</full_name>
      <value><![CDATA[':IMAGE']]></value>
      <docblock line="614">
        <description><![CDATA[Image offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating an images list.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="621" package="Default">
      <name>kOFFSET_FILE</name>
      <full_name>\kOFFSET_FILE</full_name>
      <value><![CDATA[':FILE']]></value>
      <docblock line="621">
        <description><![CDATA[File offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a file reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="628" package="Default">
      <name>kOFFSET_FILES</name>
      <full_name>\kOFFSET_FILES</full_name>
      <value><![CDATA[':FILES']]></value>
      <docblock line="628">
        <description><![CDATA[Files list offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a list of files.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="635" package="Default">
      <name>kOFFSET_COLS</name>
      <full_name>\kOFFSET_COLS</full_name>
      <value><![CDATA[':COLS']]></value>
      <docblock line="635">
        <description><![CDATA[Columns list offset.]]></description>
        <long-description><![CDATA[<p>This tag is used as the default offset for indicating a list of columns.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="646" package="Default">
      <name>kOFFSET_PLACE</name>
      <full_name>\kOFFSET_PLACE</full_name>
      <value><![CDATA[':PLACE']]></value>
      <docblock line="646">
        <description><![CDATA[Place offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a place or named location.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="653" package="Default">
      <name>kOFFSET_CARE</name>
      <full_name>\kOFFSET_CARE</full_name>
      <value><![CDATA[':CARE']]></value>
      <docblock line="653">
        <description><![CDATA[Care of offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a care of address reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="660" package="Default">
      <name>kOFFSET_STREET</name>
      <full_name>\kOFFSET_STREET</full_name>
      <value><![CDATA[':STREET']]></value>
      <docblock line="660">
        <description><![CDATA[Street offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a place or named location.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="667" package="Default">
      <name>kOFFSET_ZIP_CODE</name>
      <full_name>\kOFFSET_ZIP_CODE</full_name>
      <value><![CDATA[':ZIP']]></value>
      <docblock line="667">
        <description><![CDATA[ZIP offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a ZIP code.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="674" package="Default">
      <name>kOFFSET_CITY</name>
      <full_name>\kOFFSET_CITY</full_name>
      <value><![CDATA[':CITY']]></value>
      <docblock line="674">
        <description><![CDATA[City offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a city name.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="681" package="Default">
      <name>kOFFSET_PROVINCE</name>
      <full_name>\kOFFSET_PROVINCE</full_name>
      <value><![CDATA[':PROV']]></value>
      <docblock line="681">
        <description><![CDATA[Province offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a province name or code.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="688" package="Default">
      <name>kOFFSET_COUNTRY</name>
      <full_name>\kOFFSET_COUNTRY</full_name>
      <value><![CDATA[':COUNTRY']]></value>
      <docblock line="688">
        <description><![CDATA[Country offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an ISO3166 3 character country code.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="695" package="Default">
      <name>kOFFSET_FULL</name>
      <full_name>\kOFFSET_FULL</full_name>
      <value><![CDATA[':FULL']]></value>
      <docblock line="695">
        <description><![CDATA[Full data offset.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents the full data as a string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="709" package="Default">
      <name>kPRED_IS_A</name>
      <full_name>\kPRED_IS_A</full_name>
      <value><![CDATA[':IS-A']]></value>
      <docblock line="709">
        <description><![CDATA[IS-A.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines the IS-A predicate.</p>

<p>This predicate is equivalent to a subclass, it can be used to relate a term to the
default category to which it belongs within the current ontology.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="718" package="Default">
      <name>kPRED_PART_OF</name>
      <full_name>\kPRED_PART_OF</full_name>
      <value><![CDATA[':PART-OF']]></value>
      <docblock line="718">
        <description><![CDATA[PART-OF.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines the PART-OF predicate.</p>

<p>This predicate indicates that the subject is part of the object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="727" package="Default">
      <name>kPRED_COMPONENT_OF</name>
      <full_name>\kPRED_COMPONENT_OF</full_name>
      <value><![CDATA[':COMPONENT-OF']]></value>
      <docblock line="727">
        <description><![CDATA[COMPONENT-OF.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines the COMPONENT-OF predicate.</p>

<p>This predicate indicates that the subject is a component of the object.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="737" package="Default">
      <name>kPRED_SCALE_OF</name>
      <full_name>\kPRED_SCALE_OF</full_name>
      <value><![CDATA[':SCALE-OF']]></value>
      <docblock line="737">
        <description><![CDATA[SCALE-OF.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines the SCALE-OF predicate.</p>

<p>This predicate is used to relate a term that can be used to annotate data with its method
term or trait term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="747" package="Default">
      <name>kPRED_METHOD_OF</name>
      <full_name>\kPRED_METHOD_OF</full_name>
      <value><![CDATA[':METHOD-OF']]></value>
      <docblock line="747">
        <description><![CDATA[METHOD-OF.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines the METHOD-OF predicate.</p>

<p>This predicate is used to relate a term that defines a measurement method to the trait
term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="757" package="Default">
      <name>kPRED_ENUM_OF</name>
      <full_name>\kPRED_ENUM_OF</full_name>
      <value><![CDATA[':ENUM-OF']]></value>
      <docblock line="757">
        <description><![CDATA[ENUM-OF.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines the ENUM-OF predicate.</p>

<p>This predicate is used to relate {@link kTAG_ENUM enumeration} terms, this edge type
relates enumeration terms in a hierarchy.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="768" package="Default">
      <name>kCARD_0_1</name>
      <full_name>\kCARD_0_1</full_name>
      <value><![CDATA[':01']]></value>
      <docblock line="768">
        <description><![CDATA[Zero or one.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a cardinality of zero or one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="775" package="Default">
      <name>kCARD_1</name>
      <full_name>\kCARD_1</full_name>
      <value><![CDATA[':1']]></value>
      <docblock line="775">
        <description><![CDATA[One.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a cardinality of exactly one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="782" package="Default">
      <name>kCARD_ANY</name>
      <full_name>\kCARD_ANY</full_name>
      <value><![CDATA[':ANY']]></value>
      <docblock line="782">
        <description><![CDATA[Any.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a cardinality of any kind.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="793" package="Default">
      <name>kTAXON_RANK</name>
      <full_name>\kTAXON_RANK</full_name>
      <value><![CDATA[':RANK']]></value>
      <docblock line="793">
        <description><![CDATA[Rank.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a taxon rank.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="800" package="Default">
      <name>kTAXON_EPITHET</name>
      <full_name>\kTAXON_EPITHET</full_name>
      <value><![CDATA[':EPITH']]></value>
      <docblock line="800">
        <description><![CDATA[Epithet.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a taxon epithet.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="807" package="Default">
      <name>kTAXON_AUTHORITY</name>
      <full_name>\kTAXON_AUTHORITY</full_name>
      <value><![CDATA[':AUTH']]></value>
      <docblock line="807">
        <description><![CDATA[Authority.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a taxon authority.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="814" package="Default">
      <name>kTAXON_NAME</name>
      <full_name>\kTAXON_NAME</full_name>
      <value><![CDATA[':TAXON']]></value>
      <docblock line="814">
        <description><![CDATA[Taxon.]]></description>
        <long-description><![CDATA[<p>This is the tag that defines a full taxon epithet.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="826" package="Default">
      <name>kIMAGE_THUMB_FLAG</name>
      <full_name>\kIMAGE_THUMB_FLAG</full_name>
      <value><![CDATA[':IMG-THMB-FLAG']]></value>
      <docblock line="826">
        <description><![CDATA[Thumbnail flag.]]></description>
        <long-description><![CDATA[<p>A flag is the image of a flag or an icon symbol representing an object, the thumbnail
flag is a small sized version of this image.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="834" package="Default">
      <name>kIMAGE_MED_FLAG</name>
      <full_name>\kIMAGE_MED_FLAG</full_name>
      <value><![CDATA[':IMG-MED-FLAG']]></value>
      <docblock line="834">
        <description><![CDATA[Medium flag.]]></description>
        <long-description><![CDATA[<p>A flag is the image of a flag or an icon symbol representing an object, the medium
flag is a medium sized version of this image.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="842" package="Default">
      <name>kIMAGE_VECT_FLAG</name>
      <full_name>\kIMAGE_VECT_FLAG</full_name>
      <value><![CDATA[':IMG-VECT-FLAG']]></value>
      <docblock line="842">
        <description><![CDATA[Vector flag.]]></description>
        <long-description><![CDATA[<p>A flag is the image of a flag or an icon symbol representing an object, the vector
flag is a vector version of this image which can be resized at will.</p>]]></long-description>
      </docblock>
    </constant>
    <source>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</source>
  </file>
  <file path="defines/Operators.inc.php" hash="adf8a03336670181830b29f8c0713403" package="Default">
    <constant namespace="" line="31" package="Default">
      <name>kOPERATOR_DISABLED</name>
      <full_name>\kOPERATOR_DISABLED</full_name>
      <value><![CDATA['$NO']]></value>
      <docblock line="31">
        <description><![CDATA[Disabled.]]></description>
        <long-description><![CDATA[<p>This enumeration represents a disabled operator.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="38" package="Default">
      <name>kOPERATOR_EQUAL</name>
      <full_name>\kOPERATOR_EQUAL</full_name>
      <value><![CDATA['$EQ']]></value>
      <docblock line="38">
        <description><![CDATA[Equal.]]></description>
        <long-description><![CDATA[<p>This enumeration represents equality.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="45" package="Default">
      <name>kOPERATOR_EQUAL_NOT</name>
      <full_name>\kOPERATOR_EQUAL_NOT</full_name>
      <value><![CDATA['$NE']]></value>
      <docblock line="45">
        <description><![CDATA[Not equal.]]></description>
        <long-description><![CDATA[<p>This enumeration represents inequality.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="52" package="Default">
      <name>kOPERATOR_LIKE</name>
      <full_name>\kOPERATOR_LIKE</full_name>
      <value><![CDATA['$AS']]></value>
      <docblock line="52">
        <description><![CDATA[Like.]]></description>
        <long-description><![CDATA[<p>This enumeration represents case and accent matching (for strings).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="59" package="Default">
      <name>kOPERATOR_LIKE_NOT</name>
      <full_name>\kOPERATOR_LIKE_NOT</full_name>
      <value><![CDATA['$NS']]></value>
      <docblock line="59">
        <description><![CDATA[Not like.]]></description>
        <long-description><![CDATA[<p>This enumeration represents case and accent non matching (for strings).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="66" package="Default">
      <name>kOPERATOR_PREFIX</name>
      <full_name>\kOPERATOR_PREFIX</full_name>
      <value><![CDATA['$PX']]></value>
      <docblock line="66">
        <description><![CDATA[Prefix.]]></description>
        <long-description><![CDATA[<p>This enumeration represents prefix comparaison: <i>starts with</i> (for strings).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="74" package="Default">
      <name>kOPERATOR_PREFIX_NOCASE</name>
      <full_name>\kOPERATOR_PREFIX_NOCASE</full_name>
      <value><![CDATA['$PXi']]></value>
      <docblock line="74">
        <description><![CDATA[Prefix case-insensitive.]]></description>
        <long-description><![CDATA[<p>This enumeration represents prefix comparaison: <i>starts with</i> (for strings) with
case and accent insensitive matching.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="81" package="Default">
      <name>kOPERATOR_CONTAINS</name>
      <full_name>\kOPERATOR_CONTAINS</full_name>
      <value><![CDATA['$CX']]></value>
      <docblock line="81">
        <description><![CDATA[Contains.]]></description>
        <long-description><![CDATA[<p>This enumeration represents content comparaison: <i>contains</i> (for strings).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="89" package="Default">
      <name>kOPERATOR_CONTAINS_NOCASE</name>
      <full_name>\kOPERATOR_CONTAINS_NOCASE</full_name>
      <value><![CDATA['$CXi']]></value>
      <docblock line="89">
        <description><![CDATA[Contains case-insensitive.]]></description>
        <long-description><![CDATA[<p>This enumeration represents content comparaison: <i>contains</i> (for strings) with
case and accent insensitive matching.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="96" package="Default">
      <name>kOPERATOR_SUFFIX</name>
      <full_name>\kOPERATOR_SUFFIX</full_name>
      <value><![CDATA['$SX']]></value>
      <docblock line="96">
        <description><![CDATA[Suffix.]]></description>
        <long-description><![CDATA[<p>This enumeration represents suffix comparaison: <i>ends with</i> (for strings).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="104" package="Default">
      <name>kOPERATOR_SUFFIX_NOCASE</name>
      <full_name>\kOPERATOR_SUFFIX_NOCASE</full_name>
      <value><![CDATA['$SXi']]></value>
      <docblock line="104">
        <description><![CDATA[Suffix case-insensitive.]]></description>
        <long-description><![CDATA[<p>This enumeration represents suffix comparaison: <i>ends with</i> (for strings) with
case and accent insensitive matching.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="111" package="Default">
      <name>kOPERATOR_REGEX</name>
      <full_name>\kOPERATOR_REGEX</full_name>
      <value><![CDATA['$RE']]></value>
      <docblock line="111">
        <description><![CDATA[Regular expression.]]></description>
        <long-description><![CDATA[<p>This enumeration represents a regular expression (for strings).</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="118" package="Default">
      <name>kOPERATOR_LESS</name>
      <full_name>\kOPERATOR_LESS</full_name>
      <value><![CDATA['$LT']]></value>
      <docblock line="118">
        <description><![CDATA[Smaller.]]></description>
        <long-description><![CDATA[<p>This enumeration represents less than.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="125" package="Default">
      <name>kOPERATOR_LESS_EQUAL</name>
      <full_name>\kOPERATOR_LESS_EQUAL</full_name>
      <value><![CDATA['$LE']]></value>
      <docblock line="125">
        <description><![CDATA[Smaller or equal.]]></description>
        <long-description><![CDATA[<p>This enumeration represents less than or equal.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="132" package="Default">
      <name>kOPERATOR_GREAT</name>
      <full_name>\kOPERATOR_GREAT</full_name>
      <value><![CDATA['$GT']]></value>
      <docblock line="132">
        <description><![CDATA[Greater.]]></description>
        <long-description><![CDATA[<p>This enumeration represents greater than.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="139" package="Default">
      <name>kOPERATOR_GREAT_EQUAL</name>
      <full_name>\kOPERATOR_GREAT_EQUAL</full_name>
      <value><![CDATA['$GE']]></value>
      <docblock line="139">
        <description><![CDATA[Greater or equal.]]></description>
        <long-description><![CDATA[<p>This enumeration represents greater than or equal.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="146" package="Default">
      <name>kOPERATOR_IRANGE</name>
      <full_name>\kOPERATOR_IRANGE</full_name>
      <value><![CDATA['$IRG']]></value>
      <docblock line="146">
        <description><![CDATA[Range inclusive.]]></description>
        <long-description><![CDATA[<p>This enumeration represents a range including limits.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="153" package="Default">
      <name>kOPERATOR_ERANGE</name>
      <full_name>\kOPERATOR_ERANGE</full_name>
      <value><![CDATA['$ERG']]></value>
      <docblock line="153">
        <description><![CDATA[Range exclusive.]]></description>
        <long-description><![CDATA[<p>This enumeration represents a range excluding limits.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="160" package="Default">
      <name>kOPERATOR_NULL</name>
      <full_name>\kOPERATOR_NULL</full_name>
      <value><![CDATA['$NU']]></value>
      <docblock line="160">
        <description><![CDATA[Empty or null.]]></description>
        <long-description><![CDATA[<p>This enumeration represents empty or null.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="167" package="Default">
      <name>kOPERATOR_NOT_NULL</name>
      <full_name>\kOPERATOR_NOT_NULL</full_name>
      <value><![CDATA['$NN']]></value>
      <docblock line="167">
        <description><![CDATA[Not empty or null.]]></description>
        <long-description><![CDATA[<p>This enumeration represents not empty or null.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="174" package="Default">
      <name>kOPERATOR_IN</name>
      <full_name>\kOPERATOR_IN</full_name>
      <value><![CDATA['$IN']]></value>
      <docblock line="174">
        <description><![CDATA[Belongs to.]]></description>
        <long-description><![CDATA[<p>This enumeration matches the value to a list of options.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="181" package="Default">
      <name>kOPERATOR_NI</name>
      <full_name>\kOPERATOR_NI</full_name>
      <value><![CDATA['$NI']]></value>
      <docblock line="181">
        <description><![CDATA[Does not belong to.]]></description>
        <long-description><![CDATA[<p>This enumeration excludes values that match a list of options.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="188" package="Default">
      <name>kOPERATOR_ALL</name>
      <full_name>\kOPERATOR_ALL</full_name>
      <value><![CDATA['$AL']]></value>
      <docblock line="188">
        <description><![CDATA[All.]]></description>
        <long-description><![CDATA[<p>This enumeration matches a list of values to all elements of a list of options.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="195" package="Default">
      <name>kOPERATOR_NALL</name>
      <full_name>\kOPERATOR_NALL</full_name>
      <value><![CDATA['$NAL']]></value>
      <docblock line="195">
        <description><![CDATA[Not all.]]></description>
        <long-description><![CDATA[<p>This enumeration is the negation of the match {@link kOPERATOR_ALL all} operator.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="202" package="Default">
      <name>kOPERATOR_EX</name>
      <full_name>\kOPERATOR_EX</full_name>
      <value><![CDATA['$EX']]></value>
      <docblock line="202">
        <description><![CDATA[Expression.]]></description>
        <long-description><![CDATA[<p>This enumeration qualifies expression terms.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="213" package="Default">
      <name>kOPERATOR_AND</name>
      <full_name>\kOPERATOR_AND</full_name>
      <value><![CDATA['$AND']]></value>
      <docblock line="213">
        <description><![CDATA[AND.]]></description>
        <long-description><![CDATA[<p>This value represents the AND (A &amp;&amp; B) operator.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="220" package="Default">
      <name>kOPERATOR_NAND</name>
      <full_name>\kOPERATOR_NAND</full_name>
      <value><![CDATA['$NAND']]></value>
      <docblock line="220">
        <description><![CDATA[Not AND.]]></description>
        <long-description><![CDATA[<p>This value represents the not AND (NOT(A &amp;&amp; B)) operator.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="227" package="Default">
      <name>kOPERATOR_OR</name>
      <full_name>\kOPERATOR_OR</full_name>
      <value><![CDATA['$OR']]></value>
      <docblock line="227">
        <description><![CDATA[OR.]]></description>
        <long-description><![CDATA[<p>This value represents the OR (A || B) operator.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="234" package="Default">
      <name>kOPERATOR_NOR</name>
      <full_name>\kOPERATOR_NOR</full_name>
      <value><![CDATA['$NOR']]></value>
      <docblock line="234">
        <description><![CDATA[Not OR.]]></description>
        <long-description><![CDATA[<p>This value represents the not OR (NOT(A || B)) operator.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9mN1y2kYYho/hKnYyncT2NIB70IPWdSwbhWFKJEfCU59lFrHADmJFtZJrpskl5B56Me199dsVK62EBAsThyOJ/Xmf73v3V1fv1ot1u929+O1lfm100ar9Xegl7prEOIli3qEs6ABRfbWdDl6G+aLbRpARKT2OloTxDjzKtwXlaEZDgoKIJZgyjpKFeFmtIoYIS1ciDgrPdEpYQmcbyuYoUtGhlJMpmmwQDkMUhJhzwhFloudE9BzSSYzjjVK7WeNgieek9WHzR4zX0Iv8l6cTVdAnM8qoEOSqDU6TRRS3Wh9ouIyQ1UH//bOMZvTfr+hq1eHiMbgJ5hTHnSieX8smTyTm0EXrstProd5lt/dz96fe5SWUdV94ZLj3tmeNXc//3v5u7UV9yvEkJNNtypE0WPcxJuuYcPCSI4ym29q5ox2Zo6lwgZyhV0sVz6f+0LduR3b/1Y8QyZsfHPcNOv8VHrtdTVJB2H+mODQhIKIiTTaNsvbHB2skNUHU/liISgleSDpRkvVmIgsqRsKfHHesArYLbU1LyY/okpgoB5gThNkU4SCAP9AKJ8FCTKmzWRQjnsTwzM8bqUbD322VDcsviDJ5PRfhiUAMik+A0jPllzMVltjuY+jg2YRsLWuKpWiNY0x5xH5BV/SaJziG0r9osrjq0mtDxnvPfj98VKm7fywQ/aK/KqVMzltYE2HBhDXpySihp2DLv0XHVTc07dyVAzGCE3eWL0eJCJTWRgo2vxVaRcR32+XfaMxAXUFXjVFtIUf4cuc6Y2vo+Nuxc6cZUxBVGU/y5Xjob+OKirDwRYRJd+NsMMZPZ4YThsuaOwESNj16uvgP77Xp4muu2Kq3KuFJphyP/G1MyeIrTRVf9ySPssEUj8zTEMeIPItQxFnDbL+Nd9oZGuLZAzv3w9P2ojqS3JgVHMtIbIIWQls4+WHWvMrbvq8ARmNt6ylaVnQRBGa8JecApVaNJNrBAHDsGhytH8U1iAlOzPIxz6ruT8nAs62xyslAy8mg1Loif1RadI7DmZFARWoAyq6HqkmOh9mcwCwKwpQbzl4Yz0WjqTgwhHRFE97IN/QsZ5AfYIbeQBvHVfkyF3k+gUs2MuGyS1z2Lpcmn59xV+tkI/LI0tDsrFttUIviPIzy867zoK1I5dalY++xJKyuUT2NOy6IAMipHILroW5JGMFqhpKokUau0CS7bD7hMCVQGXwLKU9QNIPriLwCNg8kJ8uRGEUaky6cX4gikkU8kYX7oLLxAtUlkVxGtif0I9CcYY7mDLVLUg2GQrT22KYSVQAouEheuklIVtJUKDGHtIpBZo0KSKs6tPAeMpq5x8g8ewdZ8Z7l6++bkLIlKimK3r4cvmk6Gpyj0+VA+RQ8vPvKa96MQr60LRdWwdWexeAxN9DWDz7lDfZlLvLyG8Kt645sy0HN3xK+y5cEy+mX0ppNU20ZEW5DJXRmodev0e35YWuhdj7snL7IbWm0GSmyrCI6g7VJKRtIO5q2UxV3vcO6ricC/fzZKFDXy8eQ6+3EaSLHZD0VpZQ1iVIJiy80W+H2u+v2/2KD/o0=</source>
  </file>
  <file path="defines/Session.inc.php" hash="5c723dd0e55914921c6c95e539a7cb25" package="Default">
    <constant namespace="" line="33" package="Default">
      <name>kSESSION_USER</name>
      <full_name>\kSESSION_USER</full_name>
      <value><![CDATA[':USER']]></value>
      <docblock line="33">
        <description><![CDATA[User instance.]]></description>
        <long-description><![CDATA[<p>This tag defines the current user instance.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="42" package="Default">
      <name>kSESSION_MONGO</name>
      <full_name>\kSESSION_MONGO</full_name>
      <value><![CDATA[':MONGO']]></value>
      <docblock line="42">
        <description><![CDATA[Mongo instance.]]></description>
        <long-description><![CDATA[<p>This tag defines the default Mongo instance.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="51" package="Default">
      <name>kSESSION_NEO4J</name>
      <full_name>\kSESSION_NEO4J</full_name>
      <value><![CDATA[':NEO4J']]></value>
      <docblock line="51">
        <description><![CDATA[Neo4j instance.]]></description>
        <long-description><![CDATA[<p>This tag defines the default Neo4j instance.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="60" package="Default">
      <name>kSESSION_DATABASE</name>
      <full_name>\kSESSION_DATABASE</full_name>
      <value><![CDATA[':DATABASE']]></value>
      <docblock line="60">
        <description><![CDATA[Database instance.]]></description>
        <long-description><![CDATA[<p>This tag defines the current database instance.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="69" package="Default">
      <name>kSESSION_CONTAINER</name>
      <full_name>\kSESSION_CONTAINER</full_name>
      <value><![CDATA[':CONTAINER']]></value>
      <docblock line="69">
        <description><![CDATA[Container instance.]]></description>
        <long-description><![CDATA[<p>This tag defines the current container instance.</p>

<p>Cardinality: one.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJy9lNFOwjAUhq+3pzjxBiVmg8kVKjiBGE3YEofx0pRSRmW2S9uZ8BC+gw+j72XbMSIRknGBzS52zul/9rX/ya76+SJ3Xb95fZzlQtPZuZq/KwmRknLmUYY9zbNn1x/9cZCbvgv6Quynh2SOikyBLAFBoVR6umBqkwWVMKcZAcyZQpRJUAsCGZUKZjt0UEgyg+nK7sIZkroIVNdMn4xOBRKrqvdNjvASpcQZr54FynMibFYW06qgySijSjeXlQYVasGF44xptuQQevD9ueRz+vUBV2+eNK/4BqcUCY+LtGcl70QYPqfttVrQuvD1E7Ta7fWtByYb6GxgsoHO+kcelWSUJPdxBJPwLvlnz9eWw5MkQtsiFWKYrP0A67U20RhLGSmdxoUQhCnj61/FAIkZZSijatUFzmzed0v5KZws1yd9eUpGjyfn9niNrgkacHa5gRlzlvJ6NNXI7ZbUxRnH0V284bHRFlBEeOf1MKDdkrpA0SjuPGyAbLQFNEQKTZEkh1k226eqizUMJ+FtmIxKska3irfYBuV/4dB5wntldekGcTQJ76NqshrdTaLkc/s99wee45II</source>
  </file>
  <file path="defines/Tokens.inc.php" hash="a3aaf099b1a51f9073e9c0f7860fb206" package="Default">
    <constant namespace="" line="31" package="Default">
      <name>kTOKEN_DOMAIN_SEPARATOR</name>
      <full_name>\kTOKEN_DOMAIN_SEPARATOR</full_name>
      <value><![CDATA['://']]></value>
      <docblock line="31">
        <description><![CDATA[Domain separator token.]]></description>
        <long-description><![CDATA[<p>This value defines the token that separates the object domain from other elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="38" package="Default">
      <name>kTOKEN_CLASS_SEPARATOR</name>
      <full_name>\kTOKEN_CLASS_SEPARATOR</full_name>
      <value><![CDATA['::']]></value>
      <docblock line="38">
        <description><![CDATA[Class separator token.]]></description>
        <long-description><![CDATA[<p>This value defines the token that separates the object class from other elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="45" package="Default">
      <name>kTOKEN_NAMESPACE_SEPARATOR</name>
      <full_name>\kTOKEN_NAMESPACE_SEPARATOR</full_name>
      <value><![CDATA[':']]></value>
      <docblock line="45">
        <description><![CDATA[Namespace separator token.]]></description>
        <long-description><![CDATA[<p>This value defines the token used to separate namespaces from codes.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="52" package="Default">
      <name>kTOKEN_OFFSET_SEPARATOR</name>
      <full_name>\kTOKEN_OFFSET_SEPARATOR</full_name>
      <value><![CDATA['.']]></value>
      <docblock line="52">
        <description><![CDATA[Sub-offset separator token.]]></description>
        <long-description><![CDATA[<p>This value defines the token used to indicate sub-offsets.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="59" package="Default">
      <name>kTOKEN_INDEX_SEPARATOR</name>
      <full_name>\kTOKEN_INDEX_SEPARATOR</full_name>
      <value><![CDATA['/']]></value>
      <docblock line="59">
        <description><![CDATA[Index separator token.]]></description>
        <long-description><![CDATA[<p>This value defines the token used to separate index elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="67" package="Default">
      <name>kTOKEN_INDEX_OPEN_TAG</name>
      <full_name>\kTOKEN_INDEX_OPEN_TAG</full_name>
      <value><![CDATA['{']]></value>
      <docblock line="67">
        <description><![CDATA[Namespace opening token.]]></description>
        <long-description><![CDATA[<p>This token is used to enclose namespaces or parent identification when merged with other
identification sections, this value is used as a prefix.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="75" package="Default">
      <name>kTOKEN_INDEX_CLOSE_TAG</name>
      <full_name>\kTOKEN_INDEX_CLOSE_TAG</full_name>
      <value><![CDATA['}']]></value>
      <docblock line="75">
        <description><![CDATA[Namespace closing token.]]></description>
        <long-description><![CDATA[<p>This token is used to enclose namespaces or parent identification when merged with other
identification sections, this value is used as a postfix.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="82" package="Default">
      <name>kTOKEN_END_TAG</name>
      <full_name>\kTOKEN_END_TAG</full_name>
      <value><![CDATA[';']]></value>
      <docblock line="82">
        <description><![CDATA[Identification end token.]]></description>
        <long-description><![CDATA[<p>This token should close all identification strings.</p>]]></long-description>
      </docblock>
    </constant>
    <source>eJzNld9u2jAUxq+TpzjqDRvqEmDaRf+sbQTphFoIapC2u8okDvFI7Mg2bdG0R9g77GG295rjJAhYwqatTMsFcmyf49/3nRNzfpnFmWna7beHeUxoG7VPe2tlyhaYCovQwFI8DZt2ww9D3LZNUH7oo0ssNdRvMREQkQRDwKhEhAqQcf6SpoyC1HthKXAIsxWgJIEgQUJgAUSt5rEJmXHEV1W+qwwFCzTHxmj1nqMsw1zPiuWsWhjgiFAiCaOiikFLGTNuGCOSLBg4Fnz/umAR+fYFzlNL5MPgKpgTxC3G5xc65AFzoVIYXavTgd6J3Xlj9zqdk9Lbnp59bXe7arbbUbP2gfth6t24Y/+fV7UsKgxYqmoHAmeII8l4UbmyKKCL/ICSJYYwdx8XRdZ71AjJKrBcYLOPOJAQFkkjzlJgap4DTnCKqdTdY5tFrhdwtNDq7wfeyBmO73134tw5U+/u6NgwWqe23YKXZ8oI227ErGT08+Z6ZhW6YX9fRP/W8f1dDaelhFxDA2MlYYxSLFSv4z+Sob80ydZKgFbpSgkBC3ED+dgZuf7E6btb9K1N9j1wFb+/nL1iUSSw/CsBhIYkyAWIdb4GbO/62nenO45bG9BNNBXxkIb46XncJjrV/gYZjgfuhx1cewO3Aefn/mAZpoTOa3gLOiLWgJgGCRNb3aAyqxMUJpBQ/ZIot1vdiPAYq9gU87kKfSQyLro+z72zUaivI7+Fj4uLvDCpOhQJQJBxpf1pnw3eRA2nzjvtwqf6TpOIS5BoXudBLus/94AJ+QsT+ree765d+FzrAqbhtgfDbRC93mCCiNkyCaGQn/8H74qQXHnY0K7ueFChKbizzUatIdCE5uWF+QMxIa3W</source>
  </file>
  <file path="defines/Types.inc.php" hash="89a759e5b44fb02239cd6d7bf71ea564" package="Default">
    <constant namespace="" line="31" package="Default">
      <name>kTYPE_STRING</name>
      <full_name>\kTYPE_STRING</full_name>
      <value><![CDATA[':STR']]></value>
      <docblock line="31">
        <description><![CDATA[String type.]]></description>
        <long-description><![CDATA[<p>This tag represents the primitive string data type.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="46" package="Default">
      <name>kTYPE_INT32</name>
      <full_name>\kTYPE_INT32</full_name>
      <value><![CDATA[':INT32']]></value>
      <docblock line="46">
        <description><![CDATA[32 bit signed integer type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive 32 bit signed integer data type.</p>

<p>This data type is serialised as foillows:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: Will contain this constant.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: Will contain the string representation of the
    integer.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="61" package="Default">
      <name>kTYPE_INT64</name>
      <full_name>\kTYPE_INT64</full_name>
      <value><![CDATA[':INT64']]></value>
      <docblock line="61">
        <description><![CDATA[64 bit signed integer type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive 64 bit signed integer data type.</p>

<p>This data type is serialised as foillows:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: Will contain this constant.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: Will contain the string representation of the
    integer.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="68" package="Default">
      <name>kTYPE_FLOAT</name>
      <full_name>\kTYPE_FLOAT</full_name>
      <value><![CDATA[':FLOAT']]></value>
      <docblock line="68">
        <description><![CDATA[Float type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive floating point data type.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="76" package="Default">
      <name>kTYPE_BOOLEAN</name>
      <full_name>\kTYPE_BOOLEAN</full_name>
      <value><![CDATA[':BOOL']]></value>
      <docblock line="76">
        <description><![CDATA[Boolean type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive boolean data type, it is assumed that it is provided
as (y/n; Yes/No; 1/0; TRUE/FALSE) and will be converted to 1/0.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="88" package="Default">
      <name>kTYPE_BINARY</name>
      <full_name>\kTYPE_BINARY</full_name>
      <value><![CDATA[':BIN']]></value>
      <docblock line="88">
        <description><![CDATA[Binary type.]]></description>
        <long-description><![CDATA[<p>This value represents a binary string data type, it is generally expressed as an instance
of the {@link CDataTypeBinary CDataTypeBinary} class.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="97" package="Default">
      <name>kTYPE_DATE</name>
      <full_name>\kTYPE_DATE</full_name>
      <value><![CDATA[':DATE']]></value>
      <docblock line="97">
        <description><![CDATA[Date type.]]></description>
        <long-description><![CDATA[<p>This value represents a date represented as a <i>YYYYMMDD</i> string in which missing
elements should be omitted. This means that if we don't know the day we can express that
date as <i>YYYYMM</i>.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="105" package="Default">
      <name>kTYPE_TIME</name>
      <full_name>\kTYPE_TIME</full_name>
      <value><![CDATA[':TIME']]></value>
      <docblock line="105">
        <description><![CDATA[Time type.]]></description>
        <long-description><![CDATA[<p>This value represents a time represented as a <i>YYYY-MM-DD HH:MM:SS</i> string in which
you may not have missing elements.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="113" package="Default">
      <name>kTYPE_REGEX</name>
      <full_name>\kTYPE_REGEX</full_name>
      <value><![CDATA[':RGEX']]></value>
      <docblock line="113">
        <description><![CDATA[Regular expression type.]]></description>
        <long-description><![CDATA[<p>This tag defines a regular expression string type, it is generally expressed as an
instance of the {@link CDataTypeRegex CDataTypeRegex} class.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="138" package="Default">
      <name>kTYPE_REF</name>
      <full_name>\kTYPE_REF</full_name>
      <value><![CDATA[':REF']]></value>
      <docblock line="138">
        <description><![CDATA[Object reference type.]]></description>
        <long-description><![CDATA[<p>This data type should be used as object references, it is generally expressed as a
structure composed of the following elements:</p>

<ul>
<li><i>{@link kTAG_REFERENCE_ID kTAG_REFERENCE_ID}</i>: Object
    {@link kTAG_LID local} unique identifier. This value may be used as a scalar in
    cases in which the location of the object is univoque.
<li><i>{@link kTAG_REFERENCE_CONTAINER kTAG_REFERENCE_CONTAINER}</i>: Object container,
    reference to the container in which the object is stored. This component will be
    used in cases in which the container of the object is not univoque.
<li><i>{@link kTAG_REFERENCE_DATABASE kTAG_REFERENCE_DATABASE}</i>: Database container,
    reference to the database or container superclass in which the object is stored.
    This component will be used in cases in which the database of the object is not
    univoque.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="146" package="Default">
      <name>kTYPE_STAMP</name>
      <full_name>\kTYPE_STAMP</full_name>
      <value><![CDATA[':STAMP']]></value>
      <docblock line="146">
        <description><![CDATA[Timestamp type.]]></description>
        <long-description><![CDATA[<p>This data type should be used for native time-stamps, it is generally expressed as an
instance of the {@link CDataTypeStamp CDataTypeStamp} class.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="156" package="Default">
      <name>kTYPE_ENUM</name>
      <full_name>\kTYPE_ENUM</full_name>
      <value><![CDATA[':ENUM']]></value>
      <docblock line="156">
        <description><![CDATA[Enumeration type.]]></description>
        <long-description><![CDATA[<p>This value represents the enumeration data type, it represents an enumeration element or
container.</p>

<p>Enumerations represent a vocabulary from which one value must be chosen.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="166" package="Default">
      <name>kTYPE_ENUM_SET</name>
      <full_name>\kTYPE_ENUM_SET</full_name>
      <value><![CDATA[':SET']]></value>
      <docblock line="166">
        <description><![CDATA[Set type.]]></description>
        <long-description><![CDATA[<p>This value represents the enumerated set data type, it represents an enumerated set
element or container.</p>

<p>Sets represent a vocabulary from which one or more value must be chosen.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="174" package="Default">
      <name>kTYPE_LIST</name>
      <full_name>\kTYPE_LIST</full_name>
      <value><![CDATA[':LIST']]></value>
      <docblock line="174">
        <description><![CDATA[List type.]]></description>
        <long-description><![CDATA[<p>This value represents the list data type, it represents an array of elements that may be
scalars or other lists, this specific data type is a generalised tag for list structures.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="185" package="Default">
      <name>kTYPE_STAMP_SEC</name>
      <full_name>\kTYPE_STAMP_SEC</full_name>
      <value><![CDATA['sec']]></value>
      <docblock line="185">
        <description><![CDATA[Seconds.]]></description>
        <long-description><![CDATA[<p>This tag defines the number of seconds since January 1st, 1970.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="192" package="Default">
      <name>kTYPE_STAMP_USEC</name>
      <full_name>\kTYPE_STAMP_USEC</full_name>
      <value><![CDATA['usec']]></value>
      <docblock line="192">
        <description><![CDATA[Microseconds.]]></description>
        <long-description><![CDATA[<p>This tag defines microseconds.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="199" package="Default">
      <name>kTYPE_BINARY_STRING</name>
      <full_name>\kTYPE_BINARY_STRING</full_name>
      <value><![CDATA['bin']]></value>
      <docblock line="199">
        <description><![CDATA[Binary string.]]></description>
        <long-description><![CDATA[<p>This tag defines a binary string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="214" package="Default">
      <name>kTYPE_BINARY_TYPE</name>
      <full_name>\kTYPE_BINARY_TYPE</full_name>
      <value><![CDATA['type']]></value>
      <docblock line="214">
        <description><![CDATA[Binary string type.]]></description>
        <long-description><![CDATA[<p>This tag defines a binary string type (integer):</p>

<ul>
<li><i>1</i>: Function.
<li><i>2</i>: Byte array (use as default).
<li><i>3</i>: UUID.
<li><i>5</i>: MD5.
<li><i>128</i>: Custom.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="225" package="Default">
      <name>kTYPE_PHP</name>
      <full_name>\kTYPE_PHP</full_name>
      <value><![CDATA[':PHP']]></value>
      <docblock line="225">
        <description><![CDATA[PHP type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive PHP data type, it is an PHP serialised object string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="232" package="Default">
      <name>kTYPE_JSON</name>
      <full_name>\kTYPE_JSON</full_name>
      <value><![CDATA[':JSON']]></value>
      <docblock line="232">
        <description><![CDATA[JSON type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive JSON data type, it is an JSON encoded string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="239" package="Default">
      <name>kTYPE_XML</name>
      <full_name>\kTYPE_XML</full_name>
      <value><![CDATA[':XML']]></value>
      <docblock line="239">
        <description><![CDATA[XML type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive XML data type, it is an XML encoded string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="246" package="Default">
      <name>kTYPE_HTML</name>
      <full_name>\kTYPE_HTML</full_name>
      <value><![CDATA[':HTML']]></value>
      <docblock line="246">
        <description><![CDATA[HTML type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive HTML data type, it is an HTML encoded string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="254" package="Default">
      <name>kTYPE_CSV</name>
      <full_name>\kTYPE_CSV</full_name>
      <value><![CDATA[':CSV']]></value>
      <docblock line="254">
        <description><![CDATA[CSV type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive comma separated data type, it is an CSV encoded
string.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="261" package="Default">
      <name>kTYPE_SVG</name>
      <full_name>\kTYPE_SVG</full_name>
      <value><![CDATA[':SVG']]></value>
      <docblock line="261">
        <description><![CDATA[SVG type.]]></description>
        <long-description><![CDATA[<p>This value represents the SVG image data type, it is generally expressed in XML.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="268" package="Default">
      <name>kTYPE_PNG</name>
      <full_name>\kTYPE_PNG</full_name>
      <value><![CDATA[':PNG']]></value>
      <docblock line="268">
        <description><![CDATA[PNG type.]]></description>
        <long-description><![CDATA[<p>This value represents the PNG image data type, it is generally expressed in hexadecimal.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="275" package="Default">
      <name>kTYPE_META</name>
      <full_name>\kTYPE_META</full_name>
      <value><![CDATA[':META']]></value>
      <docblock line="275">
        <description><![CDATA[META type.]]></description>
        <long-description><![CDATA[<p>This value represents the primitive meta data type, it is a generalised metadata type.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="286" package="Default">
      <name>kTYPE_EXACT</name>
      <full_name>\kTYPE_EXACT</full_name>
      <value><![CDATA[':EXACT']]></value>
      <docblock line="286">
        <description><![CDATA[Exact reference.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an exact reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="293" package="Default">
      <name>kTYPE_BROAD</name>
      <full_name>\kTYPE_BROAD</full_name>
      <value><![CDATA[':BROAD']]></value>
      <docblock line="293">
        <description><![CDATA[Broad reference.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a broad reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="300" package="Default">
      <name>kTYPE_NARROW</name>
      <full_name>\kTYPE_NARROW</full_name>
      <value><![CDATA[':NARROW']]></value>
      <docblock line="300">
        <description><![CDATA[Narrow reference.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a narrow reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="307" package="Default">
      <name>kTYPE_RELATED</name>
      <full_name>\kTYPE_RELATED</full_name>
      <value><![CDATA[':RELATED']]></value>
      <docblock line="307">
        <description><![CDATA[Related reference.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a related reference.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="318" package="Default">
      <name>kTYPE_ROOT</name>
      <full_name>\kTYPE_ROOT</full_name>
      <value><![CDATA[':ROOT']]></value>
      <docblock line="318">
        <description><![CDATA[Root.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a root term or node.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="325" package="Default">
      <name>kTYPE_NAMESPACE</name>
      <full_name>\kTYPE_NAMESPACE</full_name>
      <value><![CDATA[':NAMESPACE']]></value>
      <docblock line="325">
        <description><![CDATA[Namespace.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a namespace.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="332" package="Default">
      <name>kTYPE_ATTRIBUTE</name>
      <full_name>\kTYPE_ATTRIBUTE</full_name>
      <value><![CDATA[':ATTRIBUTE']]></value>
      <docblock line="332">
        <description><![CDATA[Attribute.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an attribute.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="339" package="Default">
      <name>kTYPE_STRUCTURE</name>
      <full_name>\kTYPE_STRUCTURE</full_name>
      <value><![CDATA[':STRUCTURE']]></value>
      <docblock line="339">
        <description><![CDATA[Structure.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a term that rtepresents a structure.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="346" package="Default">
      <name>kTYPE_PREDICATE</name>
      <full_name>\kTYPE_PREDICATE</full_name>
      <value><![CDATA[':PREDICATE']]></value>
      <docblock line="346">
        <description><![CDATA[Predicate.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a predicate.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="353" package="Default">
      <name>kTYPE_TRAIT</name>
      <full_name>\kTYPE_TRAIT</full_name>
      <value><![CDATA[':TRAIT']]></value>
      <docblock line="353">
        <description><![CDATA[Trait.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a generic trait.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="360" package="Default">
      <name>kTYPE_METHOD</name>
      <full_name>\kTYPE_METHOD</full_name>
      <value><![CDATA[':METHOD']]></value>
      <docblock line="360">
        <description><![CDATA[Method.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a generic method.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="367" package="Default">
      <name>kTYPE_MEASURE</name>
      <full_name>\kTYPE_MEASURE</full_name>
      <value><![CDATA[':MEASURE']]></value>
      <docblock line="367">
        <description><![CDATA[Measure.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a measure term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="374" package="Default">
      <name>kTYPE_ANNOTATION</name>
      <full_name>\kTYPE_ANNOTATION</full_name>
      <value><![CDATA[':ANNOTATION']]></value>
      <docblock line="374">
        <description><![CDATA[Annotation.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an annotation term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="381" package="Default">
      <name>kTYPE_ENUMERATION</name>
      <full_name>\kTYPE_ENUMERATION</full_name>
      <value><![CDATA[':ENUMERATION']]></value>
      <docblock line="381">
        <description><![CDATA[Enumeration.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents an enumeration term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="388" package="Default">
      <name>kTYPE_DICTIONARY</name>
      <full_name>\kTYPE_DICTIONARY</full_name>
      <value><![CDATA[':DICTIONARY']]></value>
      <docblock line="388">
        <description><![CDATA[Dictionary.]]></description>
        <long-description><![CDATA[<p>This is the tag that represents a dictionary term.</p>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="405" package="Default">
      <name>kTYPE_MongoId</name>
      <full_name>\kTYPE_MongoId</full_name>
      <value><![CDATA[':MongoId']]></value>
      <docblock line="405">
        <description><![CDATA[MongoId.]]></description>
        <long-description><![CDATA[<p>This value represents the MongoId object data type, when serialised it will have the
following structure:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: Will contain this constant.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: Will contain the HEX string ID.
</ul>]]></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="422" package="Default">
      <name>kTYPE_MongoCode</name>
      <full_name>\kTYPE_MongoCode</full_name>
      <value><![CDATA[':MongoCode']]></value>
      <docblock line="422">
        <description><![CDATA[MongoCode.]]></description>
        <long-description><![CDATA[<p>This value represents the MongoCode object data type, when serialised it will have the
following structure:</p>

<ul>
<li><i>{@link kTAG_TYPE kTAG_TYPE}</i>: Will contain this constant.
<li><i>{@link kTAG_DATA kTAG_DATA}</i>: Will contain the following structure:
 <ul>
    <li><i>code</i>: The javascript code string.
    <li><i>scope</i>: The list of key/value pairs.
 </ul>
</ul>]]></long-description>
      </docblock>
    </constant>
    <source>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</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="MyWrapper" full_name="MyWrapper">
    <package name="Entities" full_name="MyWrapper\Entities"/>
    <package name="Framework" full_name="MyWrapper\Framework"/>
    <package name="Ontology" full_name="MyWrapper\Ontology"/>
    <package name="Persistence" full_name="MyWrapper\Persistence"/>
    <package name="Traits" full_name="MyWrapper\Traits"/>
    <package name="Wrappers" full_name="MyWrapper\Wrappers"/>
  </package>
  <namespace name="" full_name=""/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
